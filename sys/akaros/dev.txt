# Copyright 2018 syzkaller project authors. All rights reserved.
# Use of this source code is governed by Apache 2 LICENSE that can be found in the LICENSE file.

include <ros/syscall.h>
include <ros/fs.h>

openat$dev_random(fromfd const[AT_FDCWD], path ptr[in, string["/dev/random"]], path_l len[path], oflag const[O_RDONLY], mode const[0]) fd
openat$dev_urandom(fromfd const[AT_FDCWD], path ptr[in, string["/dev/urandom"]], path_l len[path], oflag const[O_RDONLY], mode const[0]) fd
openat$dev_bintime(fromfd const[AT_FDCWD], path ptr[in, string["/dev/bintime"]], path_l len[path], oflag const[O_RDWR], mode const[0]) fd
openat$dev_config(fromfd const[AT_FDCWD], path ptr[in, string["/dev/config"]], path_l len[path], oflag const[O_RDONLY], mode const[0]) fd
openat$dev_killkid(fromfd const[AT_FDCWD], path ptr[in, string["/dev/killkid"]], path_l len[path], oflag const[O_RDWR], mode const[0]) fd
openat$dev_cputime(fromfd const[AT_FDCWD], path ptr[in, string["/dev/cputime"]], path_l len[path], oflag const[O_RDONLY], mode const[0]) fd
openat$dev_drivers(fromfd const[AT_FDCWD], path ptr[in, string["/dev/drivers"]], path_l len[path], oflag const[O_RDONLY], mode const[0]) fd
openat$dev_hostdomain(fromfd const[AT_FDCWD], path ptr[in, string["/dev/hostdomain"]], path_l len[path], oflag const[O_RDWR], mode const[0]) fd
openat$dev_hostowner(fromfd const[AT_FDCWD], path ptr[in, string["/dev/hostowner"]], path_l len[path], oflag const[O_RDWR], mode const[0]) fd
openat$dev_klog(fromfd const[AT_FDCWD], path ptr[in, string["/dev/klog"]], path_l len[path], oflag const[O_RDONLY], mode const[0]) fd
openat$dev_kmesg(fromfd const[AT_FDCWD], path ptr[in, string["/dev/kmesg"]], path_l len[path], oflag const[O_RDONLY], mode const[0]) fd
openat$dev_kprint(fromfd const[AT_FDCWD], path ptr[in, string["/dev/kprint"]], path_l len[path], oflag const[O_RDONLY], mode const[0]) fd
openat$dev_null(fromfd const[AT_FDCWD], path ptr[in, string["/dev/null"]], path_l len[path], oflag const[O_RDONLY], mode const[0]) fd
openat$dev_osversion(fromfd const[AT_FDCWD], path ptr[in, string["/dev/osversion"]], path_l len[path], oflag const[O_RDONLY], mode const[0]) fd
openat$dev_pgrpid(fromfd const[AT_FDCWD], path ptr[in, string["/dev/pgrpid"]], path_l len[path], oflag const[O_RDONLY], mode const[0]) fd
openat$dev_pid(fromfd const[AT_FDCWD], path ptr[in, string["/dev/pid"]], path_l len[path], oflag const[O_RDONLY], mode const[0]) fd
openat$dev_ppid(fromfd const[AT_FDCWD], path ptr[in, string["/dev/ppid"]], path_l len[path], oflag const[O_RDONLY], mode const[0]) fd
openat$dev_stdin(fromfd const[AT_FDCWD], path ptr[in, string["/dev/stdin"]], path_l len[path], oflag const[O_RDWR], mode const[0]) fd
openat$dev_stdout(fromfd const[AT_FDCWD], path ptr[in, string["/dev/stdout"]], path_l len[path], oflag const[O_RDWR], mode const[0]) fd
openat$dev_stderr(fromfd const[AT_FDCWD], path ptr[in, string["/dev/stderr"]], path_l len[path], oflag const[O_RDWR], mode const[0]) fd
openat$dev_swap(fromfd const[AT_FDCWD], path ptr[in, string["/dev/swap"]], path_l len[path], oflag const[O_RDWR], mode const[0]) fd
openat$dev_sysctl(fromfd const[AT_FDCWD], path ptr[in, string["/dev/sysctl"]], path_l len[path], oflag const[O_RDWR], mode const[0]) fd
openat$dev_sysname(fromfd const[AT_FDCWD], path ptr[in, string["/dev/sysname"]], path_l len[path], oflag const[O_RDWR], mode const[0]) fd
openat$dev_sysstat(fromfd const[AT_FDCWD], path ptr[in, string["/dev/sysstat"]], path_l len[path], oflag const[O_RDWR], mode const[0]) fd
openat$dev_time(fromfd const[AT_FDCWD], path ptr[in, string["/dev/time"]], path_l len[path], oflag const[O_RDWR], mode const[0]) fd
openat$dev_user(fromfd const[AT_FDCWD], path ptr[in, string["/dev/user"]], path_l len[path], oflag const[O_RDWR], mode const[0]) fd
openat$dev_zero(fromfd const[AT_FDCWD], path ptr[in, string["/dev/zero"]], path_l len[path], oflag const[O_RDONLY], mode const[0]) fd
openat$dev_empty(fromfd const[AT_FDCWD], path ptr[in, string["/dev/.empty"]], path_l len[path], oflag const[O_RDWR], mode const[0]) fd
openat$dev_capuse(fromfd const[AT_FDCWD], path ptr[in, string["/dev/capuse"]], path_l len[path], oflag const[O_RDWR], mode const[0]) fd
openat$dev_caphash(fromfd const[AT_FDCWD], path ptr[in, string["/dev/caphash"]], path_l len[path], oflag const[O_RDWR], mode const[0]) fd
openat$dev_sdctl(fromfd const[AT_FDCWD], path ptr[in, string["/dev/sdctl"]], path_l len[path], oflag const[O_RDWR], mode const[0]) fd

openat$proc_self_args(fromfd const[AT_FDCWD], path ptr[in, string["/proc/self/args"]], path_l len[path], oflag const[O_RDWR], mode const[0]) fd
openat$proc_self_ctl(fromfd const[AT_FDCWD], path ptr[in, string["/proc/self/ctl"]], path_l len[path], oflag const[O_RDWR], mode const[0]) fd
openat$proc_self_fd(fromfd const[AT_FDCWD], path ptr[in, string["/proc/self/fd"]], path_l len[path], oflag const[O_RDONLY], mode const[0]) fd
openat$proc_self_fpregs(fromfd const[AT_FDCWD], path ptr[in, string["/proc/self/fpregs"]], path_l len[path], oflag const[O_RDONLY], mode const[0]) fd
openat$proc_self_maps(fromfd const[AT_FDCWD], path ptr[in, string["/proc/self/maps"]], path_l len[path], oflag const[O_RDONLY], mode const[0]) fd
openat$proc_self_mem(fromfd const[AT_FDCWD], path ptr[in, string["/proc/self/mem"]], path_l len[path], oflag const[O_RDONLY], mode const[0]) fd
openat$proc_self_note(fromfd const[AT_FDCWD], path ptr[in, string["/proc/self/note"]], path_l len[path], oflag const[O_RDONLY], mode const[0]) fd
openat$proc_self_noteid(fromfd const[AT_FDCWD], path ptr[in, string["/proc/self/noteid"]], path_l len[path], oflag const[O_RDWR], mode const[0]) fd
openat$proc_self_notepg(fromfd const[AT_FDCWD], path ptr[in, string["/proc/self/notepg"]], path_l len[path], oflag const[O_RDONLY], mode const[0]) fd
openat$proc_self_ns(fromfd const[AT_FDCWD], path ptr[in, string["/proc/self/ns"]], path_l len[path], oflag const[O_RDONLY], mode const[0]) fd
openat$proc_self_proc(fromfd const[AT_FDCWD], path ptr[in, string["/proc/self/proc"]], path_l len[path], oflag const[O_RDONLY], mode const[0]) fd
openat$proc_self_user(fromfd const[AT_FDCWD], path ptr[in, string["/proc/self/user"]], path_l len[path], oflag const[O_RDONLY], mode const[0]) fd
openat$proc_self_segment(fromfd const[AT_FDCWD], path ptr[in, string["/proc/self/segment"]], path_l len[path], oflag const[O_RDONLY], mode const[0]) fd
openat$proc_self_status(fromfd const[AT_FDCWD], path ptr[in, string["/proc/self/status"]], path_l len[path], oflag const[O_RDONLY], mode const[0]) fd
openat$proc_self_strace(fromfd const[AT_FDCWD], path ptr[in, string["/proc/self/strace"]], path_l len[path], oflag const[O_RDONLY], mode const[0]) fd
openat$proc_self_strace_traceset(fromfd const[AT_FDCWD], path ptr[in, string["/proc/self/strace_traceset"]], path_l len[path], oflag const[O_RDWR], mode const[0]) fd
openat$proc_self_vmstatus(fromfd const[AT_FDCWD], path ptr[in, string["/proc/self/vmstatus"]], path_l len[path], oflag const[O_RDONLY], mode const[0]) fd
openat$proc_self_text(fromfd const[AT_FDCWD], path ptr[in, string["/proc/self/text"]], path_l len[path], oflag const[O_RDONLY], mode const[0]) fd
openat$proc_self_wait(fromfd const[AT_FDCWD], path ptr[in, string["/proc/self/wait"]], path_l len[path], oflag const[O_RDONLY], mode const[0]) fd
openat$proc_self_profile(fromfd const[AT_FDCWD], path ptr[in, string["/proc/self/profile"]], path_l len[path], oflag const[O_RDONLY], mode const[0]) fd
openat$proc_self_syscall(fromfd const[AT_FDCWD], path ptr[in, string["/proc/self/syscall"]], path_l len[path], oflag const[O_RDONLY], mode const[0]) fd
openat$proc_self_core(fromfd const[AT_FDCWD], path ptr[in, string["/proc/self/core"]], path_l len[path], oflag const[O_RDONLY], mode const[0]) fd

openat$prof_empty(fromfd const[AT_FDCWD], path ptr[in, string["/prof/.empty"]], path_l len[path], oflag const[O_RDWR], mode const[0]) fd
openat$prof_kpdata(fromfd const[AT_FDCWD], path ptr[in, string["/prof/kpdata"]], path_l len[path], oflag const[O_RDWR], mode const[0]) fd
openat$prof_kpctl(fromfd const[AT_FDCWD], path ptr[in, string["/prof/kpctl"]], path_l len[path], oflag const[O_RDWR], mode const[0]) fd
openat$prof_kptrace_ctl(fromfd const[AT_FDCWD], path ptr[in, string["/prof/kptrace_ctl"]], path_l len[path], oflag const[O_RDWR], mode const[0]) fd
openat$prof_kptrace(fromfd const[AT_FDCWD], path ptr[in, string["/prof/kptrace"]], path_l len[path], oflag const[O_RDWR], mode const[0]) fd
openat$prof_kprintx(fromfd const[AT_FDCWD], path ptr[in, string["/prof/kprintx"]], path_l len[path], oflag const[O_RDWR], mode const[0]) fd
openat$prof_mpstat(fromfd const[AT_FDCWD], path ptr[in, string["/prof/mpstat"]], path_l len[path], oflag const[O_RDWR], mode const[0]) fd
openat$prof_mpstat_raw(fromfd const[AT_FDCWD], path ptr[in, string["/prof/mpstat-raw"]], path_l len[path], oflag const[O_RDWR], mode const[0]) fd

openat$net_empty(fromfd const[AT_FDCWD], path ptr[in, string["/net/.empty"]], path_l len[path], oflag const[O_RDWR], mode const[0]) fd
openat$net_tcp_0_ctl(fromfd const[AT_FDCWD], path ptr[in, string["/net/tcp/0/ctl"]], path_l len[path], oflag const[O_RDWR], mode const[0]) fd
openat$net_tcp_0_data(fromfd const[AT_FDCWD], path ptr[in, string["/net/tcp/0/data"]], path_l len[path], oflag const[O_RDWR], mode const[0]) fd
openat$net_tcp_0_err(fromfd const[AT_FDCWD], path ptr[in, string["/net/tcp/0/err"]], path_l len[path], oflag const[O_RDWR], mode const[0]) fd
openat$net_tcp_0_listen(fromfd const[AT_FDCWD], path ptr[in, string["/net/tcp/0/listen"]], path_l len[path], oflag const[O_RDWR], mode const[0]) fd
openat$net_tcp_0_local(fromfd const[AT_FDCWD], path ptr[in, string["/net/tcp/0/local"]], path_l len[path], oflag const[O_RDONLY], mode const[0]) fd
openat$net_tcp_0_remote(fromfd const[AT_FDCWD], path ptr[in, string["/net/tcp/0/remote"]], path_l len[path], oflag const[O_RDONLY], mode const[0]) fd
openat$net_tcp_0_status(fromfd const[AT_FDCWD], path ptr[in, string["/net/tcp/0/status"]], path_l len[path], oflag const[O_RDONLY], mode const[0]) fd
openat$net_tcp_1_ctl(fromfd const[AT_FDCWD], path ptr[in, string["/net/tcp/1/ctl"]], path_l len[path], oflag const[O_RDWR], mode const[0]) fd
openat$net_tcp_1_data(fromfd const[AT_FDCWD], path ptr[in, string["/net/tcp/1/data"]], path_l len[path], oflag const[O_RDWR], mode const[0]) fd
openat$net_tcp_1_err(fromfd const[AT_FDCWD], path ptr[in, string["/net/tcp/1/err"]], path_l len[path], oflag const[O_RDWR], mode const[0]) fd
openat$net_tcp_1_listen(fromfd const[AT_FDCWD], path ptr[in, string["/net/tcp/1/listen"]], path_l len[path], oflag const[O_RDWR], mode const[0]) fd
openat$net_tcp_1_local(fromfd const[AT_FDCWD], path ptr[in, string["/net/tcp/1/local"]], path_l len[path], oflag const[O_RDONLY], mode const[0]) fd
openat$net_tcp_1_remote(fromfd const[AT_FDCWD], path ptr[in, string["/net/tcp/1/remote"]], path_l len[path], oflag const[O_RDONLY], mode const[0]) fd
openat$net_tcp_1_status(fromfd const[AT_FDCWD], path ptr[in, string["/net/tcp/1/status"]], path_l len[path], oflag const[O_RDONLY], mode const[0]) fd
openat$net_tcp_2_ctl(fromfd const[AT_FDCWD], path ptr[in, string["/net/tcp/2/ctl"]], path_l len[path], oflag const[O_RDWR], mode const[0]) fd
openat$net_tcp_2_data(fromfd const[AT_FDCWD], path ptr[in, string["/net/tcp/2/data"]], path_l len[path], oflag const[O_RDWR], mode const[0]) fd
openat$net_tcp_2_err(fromfd const[AT_FDCWD], path ptr[in, string["/net/tcp/2/err"]], path_l len[path], oflag const[O_RDWR], mode const[0]) fd
openat$net_tcp_2_listen(fromfd const[AT_FDCWD], path ptr[in, string["/net/tcp/2/listen"]], path_l len[path], oflag const[O_RDWR], mode const[0]) fd
openat$net_tcp_2_local(fromfd const[AT_FDCWD], path ptr[in, string["/net/tcp/2/local"]], path_l len[path], oflag const[O_RDONLY], mode const[0]) fd
openat$net_tcp_2_remote(fromfd const[AT_FDCWD], path ptr[in, string["/net/tcp/2/remote"]], path_l len[path], oflag const[O_RDONLY], mode const[0]) fd
openat$net_tcp_2_status(fromfd const[AT_FDCWD], path ptr[in, string["/net/tcp/2/status"]], path_l len[path], oflag const[O_RDONLY], mode const[0]) fd
openat$net_tcp_clone(fromfd const[AT_FDCWD], path ptr[in, string["/net/tcp/clone"]], path_l len[path], oflag const[O_RDWR], mode const[0]) fd
openat$net_tcp_stats(fromfd const[AT_FDCWD], path ptr[in, string["/net/tcp/stats"]], path_l len[path], oflag const[O_RDONLY], mode const[0]) fd
openat$net_udp_0_ctl(fromfd const[AT_FDCWD], path ptr[in, string["/net/udp/0/ctl"]], path_l len[path], oflag const[O_RDWR], mode const[0]) fd
openat$net_udp_0_data(fromfd const[AT_FDCWD], path ptr[in, string["/net/udp/0/data"]], path_l len[path], oflag const[O_RDWR], mode const[0]) fd
openat$net_udp_0_err(fromfd const[AT_FDCWD], path ptr[in, string["/net/udp/0/err"]], path_l len[path], oflag const[O_RDWR], mode const[0]) fd
openat$net_udp_0_listen(fromfd const[AT_FDCWD], path ptr[in, string["/net/udp/0/listen"]], path_l len[path], oflag const[O_RDWR], mode const[0]) fd
openat$net_udp_0_local(fromfd const[AT_FDCWD], path ptr[in, string["/net/udp/0/local"]], path_l len[path], oflag const[O_RDONLY], mode const[0]) fd
openat$net_udp_0_remote(fromfd const[AT_FDCWD], path ptr[in, string["/net/udp/0/remote"]], path_l len[path], oflag const[O_RDONLY], mode const[0]) fd
openat$net_udp_0_status(fromfd const[AT_FDCWD], path ptr[in, string["/net/udp/0/status"]], path_l len[path], oflag const[O_RDONLY], mode const[0]) fd
openat$net_udp_clone(fromfd const[AT_FDCWD], path ptr[in, string["/net/udp/clone"]], path_l len[path], oflag const[O_RDWR], mode const[0]) fd
openat$net_udp_stats(fromfd const[AT_FDCWD], path ptr[in, string["/net/udp/stats"]], path_l len[path], oflag const[O_RDONLY], mode const[0]) fd
openat$net_ipifc_0_ctl(fromfd const[AT_FDCWD], path ptr[in, string["/net/ipifc/0/ctl"]], path_l len[path], oflag const[O_RDWR], mode const[0]) fd
openat$net_ipifc_0_data(fromfd const[AT_FDCWD], path ptr[in, string["/net/ipifc/0/data"]], path_l len[path], oflag const[O_RDWR], mode const[0]) fd
openat$net_ipifc_0_err(fromfd const[AT_FDCWD], path ptr[in, string["/net/ipifc/0/err"]], path_l len[path], oflag const[O_RDWR], mode const[0]) fd
openat$net_ipifc_0_listen(fromfd const[AT_FDCWD], path ptr[in, string["/net/ipifc/0/listen"]], path_l len[path], oflag const[O_RDWR], mode const[0]) fd
openat$net_ipifc_0_local(fromfd const[AT_FDCWD], path ptr[in, string["/net/ipifc/0/local"]], path_l len[path], oflag const[O_RDONLY], mode const[0]) fd
openat$net_ipifc_0_remote(fromfd const[AT_FDCWD], path ptr[in, string["/net/ipifc/0/remote"]], path_l len[path], oflag const[O_RDONLY], mode const[0]) fd
openat$net_ipifc_0_status(fromfd const[AT_FDCWD], path ptr[in, string["/net/ipifc/0/status"]], path_l len[path], oflag const[O_RDONLY], mode const[0]) fd
openat$net_ipifc_0_snoop(fromfd const[AT_FDCWD], path ptr[in, string["/net/ipifc/0/snoop"]], path_l len[path], oflag const[O_RDONLY], mode const[0]) fd
openat$net_ipifc_1_ctl(fromfd const[AT_FDCWD], path ptr[in, string["/net/ipifc/1/ctl"]], path_l len[path], oflag const[O_RDWR], mode const[0]) fd
openat$net_ipifc_1_data(fromfd const[AT_FDCWD], path ptr[in, string["/net/ipifc/1/data"]], path_l len[path], oflag const[O_RDWR], mode const[0]) fd
openat$net_ipifc_1_err(fromfd const[AT_FDCWD], path ptr[in, string["/net/ipifc/1/err"]], path_l len[path], oflag const[O_RDWR], mode const[0]) fd
openat$net_ipifc_1_listen(fromfd const[AT_FDCWD], path ptr[in, string["/net/ipifc/1/listen"]], path_l len[path], oflag const[O_RDWR], mode const[0]) fd
openat$net_ipifc_1_local(fromfd const[AT_FDCWD], path ptr[in, string["/net/ipifc/1/local"]], path_l len[path], oflag const[O_RDONLY], mode const[0]) fd
openat$net_ipifc_1_remote(fromfd const[AT_FDCWD], path ptr[in, string["/net/ipifc/1/remote"]], path_l len[path], oflag const[O_RDONLY], mode const[0]) fd
openat$net_ipifc_1_status(fromfd const[AT_FDCWD], path ptr[in, string["/net/ipifc/1/status"]], path_l len[path], oflag const[O_RDONLY], mode const[0]) fd
openat$net_ipifc_1_snoop(fromfd const[AT_FDCWD], path ptr[in, string["/net/ipifc/1/snoop"]], path_l len[path], oflag const[O_RDONLY], mode const[0]) fd
openat$net_ipifc_clone(fromfd const[AT_FDCWD], path ptr[in, string["/net/ipifc/clone"]], path_l len[path], oflag const[O_RDWR], mode const[0]) fd
openat$net_ipifc_stats(fromfd const[AT_FDCWD], path ptr[in, string["/net/ipifc/stats"]], path_l len[path], oflag const[O_RDONLY], mode const[0]) fd
openat$net_icmp_clone(fromfd const[AT_FDCWD], path ptr[in, string["/net/icmp/clone"]], path_l len[path], oflag const[O_RDWR], mode const[0]) fd
openat$net_icmp_stats(fromfd const[AT_FDCWD], path ptr[in, string["/net/icmp/stats"]], path_l len[path], oflag const[O_RDONLY], mode const[0]) fd
openat$net_icmpv6_clone(fromfd const[AT_FDCWD], path ptr[in, string["/net/icmpv6/clone"]], path_l len[path], oflag const[O_RDWR], mode const[0]) fd
openat$net_icmpv6_stats(fromfd const[AT_FDCWD], path ptr[in, string["/net/icmpv6/stats"]], path_l len[path], oflag const[O_RDONLY], mode const[0]) fd
openat$net_arp(fromfd const[AT_FDCWD], path ptr[in, string["/net/arp"]], path_l len[path], oflag const[O_RDWR], mode const[0]) fd
openat$net_ndb(fromfd const[AT_FDCWD], path ptr[in, string["/net/ndb"]], path_l len[path], oflag const[O_RDWR], mode const[0]) fd
openat$net_iproute(fromfd const[AT_FDCWD], path ptr[in, string["/net/iproute"]], path_l len[path], oflag const[O_RDWR], mode const[0]) fd
openat$net_iprouter(fromfd const[AT_FDCWD], path ptr[in, string["/net/iprouter"]], path_l len[path], oflag const[O_RDWR], mode const[0]) fd
openat$net_ipselftab(fromfd const[AT_FDCWD], path ptr[in, string["/net/ipselftab"]], path_l len[path], oflag const[O_RDONLY], mode const[0]) fd
openat$net_log(fromfd const[AT_FDCWD], path ptr[in, string["/net/log"]], path_l len[path], oflag const[O_RDWR], mode const[0]) fd
openat$net_ether0_clone(fromfd const[AT_FDCWD], path ptr[in, string["/net/ether0/clone"]], path_l len[path], oflag const[O_RDWR], mode const[0]) fd
openat$net_ether0_addr(fromfd const[AT_FDCWD], path ptr[in, string["/net/ether0/addr"]], path_l len[path], oflag const[O_RDWR], mode const[0]) fd
openat$net_ether0_stats(fromfd const[AT_FDCWD], path ptr[in, string["/net/ether0/stats"]], path_l len[path], oflag const[O_RDONLY], mode const[0]) fd
openat$net_ether0_ifstats(fromfd const[AT_FDCWD], path ptr[in, string["/net/ether0/ifstats"]], path_l len[path], oflag const[O_RDONLY], mode const[0]) fd
openat$net_ether0_0_data(fromfd const[AT_FDCWD], path ptr[in, string["/net/ether0/0/data"]], path_l len[path], oflag const[O_RDWR], mode const[0]) fd
openat$net_ether0_0_ctl(fromfd const[AT_FDCWD], path ptr[in, string["/net/ether0/0/ctl"]], path_l len[path], oflag const[O_RDWR], mode const[0]) fd
openat$net_ether0_0_stats(fromfd const[AT_FDCWD], path ptr[in, string["/net/ether0/0/stats"]], path_l len[path], oflag const[O_RDONLY], mode const[0]) fd
openat$net_ether0_0_type(fromfd const[AT_FDCWD], path ptr[in, string["/net/ether0/0/type"]], path_l len[path], oflag const[O_RDONLY], mode const[0]) fd
openat$net_ether0_0_ifstats(fromfd const[AT_FDCWD], path ptr[in, string["/net/ether0/0/ifstats"]], path_l len[path], oflag const[O_RDONLY], mode const[0]) fd
openat$net_ether0_1_data(fromfd const[AT_FDCWD], path ptr[in, string["/net/ether0/1/data"]], path_l len[path], oflag const[O_RDWR], mode const[0]) fd
openat$net_ether0_1_ctl(fromfd const[AT_FDCWD], path ptr[in, string["/net/ether0/1/ctl"]], path_l len[path], oflag const[O_RDWR], mode const[0]) fd
openat$net_ether0_1_stats(fromfd const[AT_FDCWD], path ptr[in, string["/net/ether0/1/stats"]], path_l len[path], oflag const[O_RDONLY], mode const[0]) fd
openat$net_ether0_1_type(fromfd const[AT_FDCWD], path ptr[in, string["/net/ether0/1/type"]], path_l len[path], oflag const[O_RDONLY], mode const[0]) fd
openat$net_ether0_1_ifstats(fromfd const[AT_FDCWD], path ptr[in, string["/net/ether0/1/ifstats"]], path_l len[path], oflag const[O_RDONLY], mode const[0]) fd
openat$net_ether0_2_data(fromfd const[AT_FDCWD], path ptr[in, string["/net/ether0/2/data"]], path_l len[path], oflag const[O_RDWR], mode const[0]) fd
openat$net_ether0_2_ctl(fromfd const[AT_FDCWD], path ptr[in, string["/net/ether0/2/ctl"]], path_l len[path], oflag const[O_RDWR], mode const[0]) fd
openat$net_ether0_2_stats(fromfd const[AT_FDCWD], path ptr[in, string["/net/ether0/2/stats"]], path_l len[path], oflag const[O_RDONLY], mode const[0]) fd
openat$net_ether0_2_type(fromfd const[AT_FDCWD], path ptr[in, string["/net/ether0/2/type"]], path_l len[path], oflag const[O_RDONLY], mode const[0]) fd
openat$net_ether0_2_ifstats(fromfd const[AT_FDCWD], path ptr[in, string["/net/ether0/2/ifstats"]], path_l len[path], oflag const[O_RDONLY], mode const[0]) fd
openat$net_cs(fromfd const[AT_FDCWD], path ptr[in, string["/net/cs"]], path_l len[path], oflag const[O_RDWR], mode const[0]) fd
