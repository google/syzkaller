# Copyright 2021 syzkaller project authors. All rights reserved.
# Use of this source code is governed by Apache 2 LICENSE that can be found in the LICENSE file.
# Autogenerated by sys2syz

include <sys/types.h>
include <fcntl.h>
include <sys/param.h>
include <sys/efi.h>
include <efiio.h>

resource fd_efidev[fd]

openat$efidev(fd const[AT_FDCWD], file ptr[in, string["/dev/efi"]], flags flags[open_flags], mode const[0]) fd_efidev

ioctl$EFIIOC_GET_TIME(fd fd_efidev, cmd const[EFIIOC_GET_TIME], arg ptr[out, efi_tm])
ioctl$EFIIOC_SET_TIME(fd fd_efidev, cmd const[EFIIOC_SET_TIME], arg ptr[in, efi_tm])
ioctl$EFIIOC_VAR_GET(fd fd_efidev, cmd const[EFIIOC_VAR_GET], arg ptr[inout, efi_var_ioc])
ioctl$EFIIOC_VAR_NEXT(fd fd_efidev, cmd const[EFIIOC_VAR_NEXT], arg ptr[inout, efi_var_ioc])
ioctl$EFIIOC_VAR_SET(fd fd_efidev, cmd const[EFIIOC_VAR_SET], arg ptr[inout, efi_var_ioc])

efi_tm {
	tm_year	int16
	tm_mon	int8[1:12]
	tm_mday	int8[1:31]
	tm_hour	int8[0:23]
	tm_min	int8[0:59]
	tm_sec	int8[0:59]
	__pad1	int8
	tm_nsec	int32
	tm_tz	int16
	tm_dst	int8
	__pad2	int8
}

efi_var_ioc {
	name		ptr[in, int16]
	namesize	len[name, int32]
	vendor		uuid
	attrib		int32
	data		ptr[in, array[int8]]
	datasize	len[data, int32]
}

uuid {
	time_low			int32
	time_mid			int16
	time_hi_and_version		int16
	clock_seq_hi_and_reserved	int8
	clock_seq_low			int8
	node				array[int8, 6]
}
