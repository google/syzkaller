# Copyright 2021 syzkaller project authors. All rights reserved.
# Use of this source code is governed by Apache 2 LICENSE that can be found in the LICENSE file.
# Autogenerated by sys2syz

include <fcntl.h>
include <sys/types.h>
include <dev/smbus/smb.h>

resource fd_smbus[fd]

openat$smbus(fd const[AT_FDCWD], file ptr[in, string["/dev/smbN"]], flags flags[open_flags], mode const[0]) fd_smbus

ioctl$SMB_QUICK_WRITE(fd fd_smbus, cmd const[SMB_QUICK_WRITE], arg ptr[in, smbcmd])
ioctl$SMB_QUICK_READ(fd fd_smbus, cmd const[SMB_QUICK_READ], arg ptr[in, smbcmd])
ioctl$SMB_SENDB(fd fd_smbus, cmd const[SMB_SENDB], arg ptr[in, smbcmd])
ioctl$SMB_RECVB(fd fd_smbus, cmd const[SMB_RECVB], arg ptr[inout, smbcmd])
ioctl$SMB_WRITEB(fd fd_smbus, cmd const[SMB_WRITEB], arg ptr[in, smbcmd])
ioctl$SMB_WRITEW(fd fd_smbus, cmd const[SMB_WRITEW], arg ptr[in, smbcmd])
ioctl$SMB_READB(fd fd_smbus, cmd const[SMB_READB], arg ptr[inout, smbcmd])
ioctl$SMB_READW(fd fd_smbus, cmd const[SMB_READW], arg ptr[inout, smbcmd])
ioctl$SMB_PCALL(fd fd_smbus, cmd const[SMB_PCALL], arg ptr[inout, smbcmd])
ioctl$SMB_BWRITE(fd fd_smbus, cmd const[SMB_BWRITE], arg ptr[in, smbcmd])
ioctl$SMB_BREAD(fd fd_smbus, cmd const[SMB_BREAD], arg ptr[inout, smbcmd])
ioctl$SMB_OLD_TRANS(fd fd_smbus, cmd const[SMB_OLD_TRANS], arg ptr[inout, smbcmd])

smbcmd {
	cmd		int8
	reserved	int8
	op		int16
	wdata		wdata
	rdata		rdata
	slave		int32
	wbuf		ptr[in, int8]
	wcount		len[wbuf, int32]
	rbuf		ptr[in, int8]
	rcount		len[rbuf, int32]
}

wdata [
	byte	int8
	buf	array[int8, 2]
	word	int16
]

rdata [
	byte	int8
	buf	array[int8, 2]
	word	int16
]
