# Copyright 2018 syzkaller project authors. All rights reserved.
# Use of this source code is governed by Apache 2 LICENSE that can be found in the LICENSE file.

syz_mmap(addr vma, len len[addr])
syz_errno(v int32)
syz_exit(status int32)
syz_compare(want ptr[in, string], want_len bytesize[want], got ptr[in, compare_data], got_len bytesize[got])
syz_compare_int$2(n const[2], v0 intptr, v1 intptr)
syz_compare_int$3(n const[3], v0 intptr, v1 intptr, v2 intptr)
syz_compare_int$4(n const[4], v0 intptr, v1 intptr, v2 intptr, v3 intptr)

compare_data [
	align0	align0
	bf0	syz_bf_struct0
	bf1	syz_bf_struct1
	bf2	syz_bf_struct2
	bf3	syz_bf_struct3
	bf4	syz_bf_align[syz_bf_struct4]
	bf5	syz_bf_align[syz_bf_struct5]
	bf6	syz_bf_align[syz_bf_struct6]
	bf7	syz_bf_align[syz_bf_struct7]
	bf8	syz_bf_align[syz_bf_struct8]
	bf9	syz_bf_align[syz_bf_struct9]
	bf10	syz_bf_align[syz_bf_struct10]
	bf11	syz_bf_align[syz_bf_struct11]
	bf12	syz_bf_align[syz_bf_struct12]
	bf13	syz_bf_align[syz_bf_struct13]
	bf14	syz_bf_align[syz_bf_struct14]
	bf15	syz_bf_align[syz_bf_struct15]
	bf16	syz_bf_align[syz_bf_struct16]
	bf17	syz_bf_align[syz_bf_struct17]
	bf18	syz_bf_align[syz_bf_struct18]
	bf19	syz_bf_align[syz_bf_struct19]
	bf20	syz_bf_align[syz_bf_struct20]
	bf21	syz_bf_align[syz_bf_struct21]
	bf22	syz_bf_align[syz_bf_struct22]
	bf23	syz_bf_align[syz_bf_struct23]
	bf24	syz_bf_align[syz_bf_struct24]
	str	string
	blob	array[int8]
	arr16be	array[int16be]
] [varlen]

align0 {
	f0	int16
	f1	int32
	f2	int8
	f3	int16
	f4	int64
}

syz_bf_struct4 {
	f0	int8
	f1	int32:4
	f2	int8
}

syz_bf_struct5 {
	f0	int8
	f1	int32:4
}

syz_bf_struct6 {
	f0	int8
	f1	int16:4
	f2	int8
}

syz_bf_struct7 {
	f0	int8
	f1	int16:4
}

syz_bf_struct8 {
	f0	int8
	f1	int32:4
	f2	int16:4
}

syz_bf_struct9 {
	f0	int8
	f1	int16:4
	f2	int16:4
}

syz_bf_struct10 {
	f0	int32:4
	f1	int32:4
	f2	int32:4
	f3	int64:12
	f4	int64:12
	f5	int64:12
	f6	int64:12
	f7	int64:12
	f8	int8
}

syz_bf_struct11 {
	f0	int8
	f1	int8
	f2	int8
	f3	int32:4
	f4	int32:4
}

syz_bf_struct12 {
	f0	int8
	f1	int8
	f2	int8
	f3	int32:4
	f4	int32:4
	f5	int32:4
	f6	int8
}

syz_bf_struct13 {
	f0	int16
	f1	int32:12
	f2	int32:12
}

syz_bf_struct14 {
	f0	int8
	f1	int8
	f2	int32:12
}

syz_bf_struct15 {
	f0	int8
	f1	int32:12
	f2	int16:4
}

syz_bf_struct16 {
	f0	int8
	f1	int32:4
	f2	int16:4
}

syz_bf_struct17 {
	f0	int8
	f1	int32:6
	f2	int16:4
}

syz_bf_struct18 {
	f0	int8
	f1	int32:4
	f2	int16:6
}

syz_bf_struct19 {
	f0	int8
	f1	int16:12
}

syz_bf_struct20 {
	f0	int8
	f1	int8
	f2	int64:4
	f3	int32:4
	f4	int16:4
	f5	int8:4
}

syz_bf_struct21 {
	f0	int32
	f1	int8
	f2	int16:8
	f3	int16
}

syz_bf_struct22 {
	f0	int8
	f1	int64:4
	f2	int16:4
} [packed]

syz_bf_struct23 {
	f0	int8
	f1	int32:4
	f2	int16:6
} [packed]

syz_bf_struct24 {
	f0	int8
	f1	int64:4
} [packed]

type syz_bf_align[T] {
	f0	int8
	f1	T
}
