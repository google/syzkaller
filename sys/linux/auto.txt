# Code generated by syz-declextract. DO NOT EDIT.

include <include/vdso/bits.h>
include <include/linux/types.h>
include <drivers/net/ieee802154/mac802154_hwsim.h>
include <drivers/net/wireless/virtual/mac80211_hwsim.h>
include <include/linux/nl802154.h>
include <include/net/nl802154.h>
include <include/uapi/linux/batman_adv.h>
include <include/uapi/linux/caif/if_caif.h>
include <include/uapi/linux/can/gw.h>
include <include/uapi/linux/can/netlink.h>
include <include/uapi/linux/can/vxcan.h>
include <include/uapi/linux/cgroupstats.h>
include <include/uapi/linux/cifs/cifs_netlink.h>
include <include/uapi/linux/cryptouser.h>
include <include/uapi/linux/dcbnl.h>
include <include/uapi/linux/devlink.h>
include <include/uapi/linux/ethtool_netlink.h>
include <include/uapi/linux/fib_rules.h>
include <include/uapi/linux/fou.h>
include <include/uapi/linux/genetlink.h>
include <include/uapi/linux/gtp.h>
include <include/uapi/linux/handshake.h>
include <include/uapi/linux/hsr_netlink.h>
include <include/uapi/linux/if_addr.h>
include <include/uapi/linux/if_addrlabel.h>
include <include/uapi/linux/if_bridge.h>
include <include/uapi/linux/if_link.h>
include <include/uapi/linux/if_macsec.h>
include <include/uapi/linux/if_team.h>
include <include/uapi/linux/if_tunnel.h>
include <include/uapi/linux/ila.h>
include <include/uapi/linux/ioam6_genl.h>
include <include/uapi/linux/ip_vs.h>
include <include/uapi/linux/l2tp.h>
include <include/uapi/linux/landlock.h>
include <include/uapi/linux/lwtunnel.h>
include <include/uapi/linux/mpls_iptunnel.h>
include <include/uapi/linux/mptcp_pm.h>
include <include/uapi/linux/nbd-netlink.h>
include <include/uapi/linux/ncsi.h>
include <include/uapi/linux/neighbour.h>
include <include/uapi/linux/net_dropmon.h>
include <include/uapi/linux/net_namespace.h>
include <include/uapi/linux/netconf.h>
include <include/uapi/linux/netdev.h>
include <include/uapi/linux/netfilter/ipset/ip_set.h>
include <include/uapi/linux/netfilter/nf_tables.h>
include <include/uapi/linux/netfilter/nf_tables_compat.h>
include <include/uapi/linux/netfilter/nfnetlink.h>
include <include/uapi/linux/netfilter/nfnetlink_acct.h>
include <include/uapi/linux/netfilter/nfnetlink_conntrack.h>
include <include/uapi/linux/netfilter/nfnetlink_cthelper.h>
include <include/uapi/linux/netfilter/nfnetlink_cttimeout.h>
include <include/uapi/linux/netfilter/nfnetlink_log.h>
include <include/uapi/linux/netfilter/nfnetlink_osf.h>
include <include/uapi/linux/netfilter/nfnetlink_queue.h>
include <include/uapi/linux/nexthop.h>
include <include/uapi/linux/nfc.h>
include <include/uapi/linux/nfsd_netlink.h>
include <include/uapi/linux/nl80211.h>
include <include/uapi/linux/openvswitch.h>
include <include/uapi/linux/pkt_cls.h>
include <include/uapi/linux/pkt_sched.h>
include <include/uapi/linux/rpl_iptunnel.h>
include <include/uapi/linux/rtnetlink.h>
include <include/uapi/linux/seg6_genl.h>
include <include/uapi/linux/seg6_iptunnel.h>
include <include/uapi/linux/seg6_local.h>
include <include/uapi/linux/smc.h>
include <include/uapi/linux/taskstats.h>
include <include/uapi/linux/tc_act/tc_bpf.h>
include <include/uapi/linux/tc_act/tc_connmark.h>
include <include/uapi/linux/tc_act/tc_csum.h>
include <include/uapi/linux/tc_act/tc_ct.h>
include <include/uapi/linux/tc_act/tc_ctinfo.h>
include <include/uapi/linux/tc_act/tc_defact.h>
include <include/uapi/linux/tc_act/tc_gact.h>
include <include/uapi/linux/tc_act/tc_gate.h>
include <include/uapi/linux/tc_act/tc_ife.h>
include <include/uapi/linux/tc_act/tc_mirred.h>
include <include/uapi/linux/tc_act/tc_mpls.h>
include <include/uapi/linux/tc_act/tc_nat.h>
include <include/uapi/linux/tc_act/tc_pedit.h>
include <include/uapi/linux/tc_act/tc_sample.h>
include <include/uapi/linux/tc_act/tc_skbedit.h>
include <include/uapi/linux/tc_act/tc_skbmod.h>
include <include/uapi/linux/tc_act/tc_tunnel_key.h>
include <include/uapi/linux/tc_act/tc_vlan.h>
include <include/uapi/linux/tc_ematch/tc_em_ipt.h>
include <include/uapi/linux/tc_ematch/tc_em_meta.h>
include <include/uapi/linux/tcp_metrics.h>
include <include/uapi/linux/thermal.h>
include <include/uapi/linux/tipc_netlink.h>
include <include/uapi/linux/vdpa.h>
include <include/uapi/linux/veth.h>
include <include/uapi/linux/wireguard.h>
include <include/uapi/linux/wwan.h>
include <include/uapi/linux/xfrm.h>
include <include/uapi/rdma/rdma_netlink.h>
include <net/netlabel/netlabel_calipso.h>
include <net/netlabel/netlabel_cipso_v4.h>
include <net/netlabel/netlabel_mgmt.h>
include <net/netlabel/netlabel_unlabeled.h>
landlock_rule_type = LANDLOCK_RULE_PATH_BENEATH, LANDLOCK_RULE_NET_PORT
resource genl_802_15_4_MAC_family_id_auto[int16]
resource genl_HSR_family_id_auto[int16]
resource genl_IOAM6_family_id_auto[int16]
resource genl_IPVS_family_id_auto[int16]
resource genl_MAC80211_HWSIM_family_id_auto[int16]
resource genl_MAC802154_HWSIM_family_id_auto[int16]
resource genl_NCSI_family_id_auto[int16]
resource genl_NET_DM_family_id_auto[int16]
resource genl_NLBL_CALIPSO_family_id_auto[int16]
resource genl_NLBL_CIPSOv4_family_id_auto[int16]
resource genl_NLBL_MGMT_family_id_auto[int16]
resource genl_NLBL_UNLBL_family_id_auto[int16]
resource genl_SEG6_family_id_auto[int16]
resource genl_SMC_GEN_NETLINK_family_id_auto[int16]
resource genl_SMC_PNETID_family_id_auto[int16]
resource genl_TASKSTATS_family_id_auto[int16]
resource genl_TIPCv2_family_id_auto[int16]
resource genl_batadv_family_id_auto[int16]
resource genl_cifs_family_id_auto[int16]
resource genl_ethtool_family_id_auto[int16]
resource genl_gtp_family_id_auto[int16]
resource genl_handshake_family_id_auto[int16]
resource genl_ila_family_id_auto[int16]
resource genl_l2tp_family_id_auto[int16]
resource genl_macsec_family_id_auto[int16]
resource genl_nbd_family_id_auto[int16]
resource genl_netdev_family_id_auto[int16]
resource genl_nfc_family_id_auto[int16]
resource genl_nfsd_family_id_auto[int16]
resource genl_nl80211_family_id_auto[int16]
resource genl_nl802154_family_id_auto[int16]
resource genl_nlctrl_family_id_auto[int16]
resource genl_ovs_ct_limit_family_id_auto[int16]
resource genl_ovs_datapath_family_id_auto[int16]
resource genl_ovs_flow_family_id_auto[int16]
resource genl_ovs_meter_family_id_auto[int16]
resource genl_ovs_packet_family_id_auto[int16]
resource genl_ovs_vport_family_id_auto[int16]
resource genl_tcp_metrics_family_id_auto[int16]
resource genl_thermal_family_id_auto[int16]
resource genl_vdpa_family_id_auto[int16]
resource genl_wireguard_family_id_auto[int16]
type auto_todo intptr
type msghdr_802_15_4_MAC_auto[CMD, POLICY] msghdr_netlink[netlink_msg_t[genl_802_15_4_MAC_family_id_auto, genlmsghdr_t[CMD], POLICY]]
type msghdr_HSR_auto[CMD, POLICY] msghdr_netlink[netlink_msg_t[genl_HSR_family_id_auto, genlmsghdr_t[CMD], POLICY]]
type msghdr_IOAM6_auto[CMD, POLICY] msghdr_netlink[netlink_msg_t[genl_IOAM6_family_id_auto, genlmsghdr_t[CMD], POLICY]]
type msghdr_IPVS_auto[CMD, POLICY] msghdr_netlink[netlink_msg_t[genl_IPVS_family_id_auto, genlmsghdr_t[CMD], POLICY]]
type msghdr_MAC80211_HWSIM_auto[CMD, POLICY] msghdr_netlink[netlink_msg_t[genl_MAC80211_HWSIM_family_id_auto, genlmsghdr_t[CMD], POLICY]]
type msghdr_MAC802154_HWSIM_auto[CMD, POLICY] msghdr_netlink[netlink_msg_t[genl_MAC802154_HWSIM_family_id_auto, genlmsghdr_t[CMD], POLICY]]
type msghdr_NCSI_auto[CMD, POLICY] msghdr_netlink[netlink_msg_t[genl_NCSI_family_id_auto, genlmsghdr_t[CMD], POLICY]]
type msghdr_NET_DM_auto[CMD, POLICY] msghdr_netlink[netlink_msg_t[genl_NET_DM_family_id_auto, genlmsghdr_t[CMD], POLICY]]
type msghdr_NLBL_CALIPSO_auto[CMD, POLICY] msghdr_netlink[netlink_msg_t[genl_NLBL_CALIPSO_family_id_auto, genlmsghdr_t[CMD], POLICY]]
type msghdr_NLBL_CIPSOv4_auto[CMD, POLICY] msghdr_netlink[netlink_msg_t[genl_NLBL_CIPSOv4_family_id_auto, genlmsghdr_t[CMD], POLICY]]
type msghdr_NLBL_MGMT_auto[CMD, POLICY] msghdr_netlink[netlink_msg_t[genl_NLBL_MGMT_family_id_auto, genlmsghdr_t[CMD], POLICY]]
type msghdr_NLBL_UNLBL_auto[CMD, POLICY] msghdr_netlink[netlink_msg_t[genl_NLBL_UNLBL_family_id_auto, genlmsghdr_t[CMD], POLICY]]
type msghdr_SEG6_auto[CMD, POLICY] msghdr_netlink[netlink_msg_t[genl_SEG6_family_id_auto, genlmsghdr_t[CMD], POLICY]]
type msghdr_SMC_GEN_NETLINK_auto[CMD, POLICY] msghdr_netlink[netlink_msg_t[genl_SMC_GEN_NETLINK_family_id_auto, genlmsghdr_t[CMD], POLICY]]
type msghdr_SMC_PNETID_auto[CMD, POLICY] msghdr_netlink[netlink_msg_t[genl_SMC_PNETID_family_id_auto, genlmsghdr_t[CMD], POLICY]]
type msghdr_TASKSTATS_auto[CMD, POLICY] msghdr_netlink[netlink_msg_t[genl_TASKSTATS_family_id_auto, genlmsghdr_t[CMD], POLICY]]
type msghdr_TIPCv2_auto[CMD, POLICY] msghdr_netlink[netlink_msg_t[genl_TIPCv2_family_id_auto, genlmsghdr_t[CMD], POLICY]]
type msghdr_batadv_auto[CMD, POLICY] msghdr_netlink[netlink_msg_t[genl_batadv_family_id_auto, genlmsghdr_t[CMD], POLICY]]
type msghdr_cifs_auto[CMD, POLICY] msghdr_netlink[netlink_msg_t[genl_cifs_family_id_auto, genlmsghdr_t[CMD], POLICY]]
type msghdr_ethtool_auto[CMD, POLICY] msghdr_netlink[netlink_msg_t[genl_ethtool_family_id_auto, genlmsghdr_t[CMD], POLICY]]
type msghdr_gtp_auto[CMD, POLICY] msghdr_netlink[netlink_msg_t[genl_gtp_family_id_auto, genlmsghdr_t[CMD], POLICY]]
type msghdr_handshake_auto[CMD, POLICY] msghdr_netlink[netlink_msg_t[genl_handshake_family_id_auto, genlmsghdr_t[CMD], POLICY]]
type msghdr_ila_auto[CMD, POLICY] msghdr_netlink[netlink_msg_t[genl_ila_family_id_auto, genlmsghdr_t[CMD], POLICY]]
type msghdr_l2tp_auto[CMD, POLICY] msghdr_netlink[netlink_msg_t[genl_l2tp_family_id_auto, genlmsghdr_t[CMD], POLICY]]
type msghdr_macsec_auto[CMD, POLICY] msghdr_netlink[netlink_msg_t[genl_macsec_family_id_auto, genlmsghdr_t[CMD], POLICY]]
type msghdr_nbd_auto[CMD, POLICY] msghdr_netlink[netlink_msg_t[genl_nbd_family_id_auto, genlmsghdr_t[CMD], POLICY]]
type msghdr_netdev_auto[CMD, POLICY] msghdr_netlink[netlink_msg_t[genl_netdev_family_id_auto, genlmsghdr_t[CMD], POLICY]]
type msghdr_nfc_auto[CMD, POLICY] msghdr_netlink[netlink_msg_t[genl_nfc_family_id_auto, genlmsghdr_t[CMD], POLICY]]
type msghdr_nfsd_auto[CMD, POLICY] msghdr_netlink[netlink_msg_t[genl_nfsd_family_id_auto, genlmsghdr_t[CMD], POLICY]]
type msghdr_nl80211_auto[CMD, POLICY] msghdr_netlink[netlink_msg_t[genl_nl80211_family_id_auto, genlmsghdr_t[CMD], POLICY]]
type msghdr_nl802154_auto[CMD, POLICY] msghdr_netlink[netlink_msg_t[genl_nl802154_family_id_auto, genlmsghdr_t[CMD], POLICY]]
type msghdr_nlctrl_auto[CMD, POLICY] msghdr_netlink[netlink_msg_t[genl_nlctrl_family_id_auto, genlmsghdr_t[CMD], POLICY]]
type msghdr_ovs_ct_limit_auto[CMD, POLICY] msghdr_netlink[netlink_msg_t[genl_ovs_ct_limit_family_id_auto, genlmsghdr_t[CMD], POLICY]]
type msghdr_ovs_datapath_auto[CMD, POLICY] msghdr_netlink[netlink_msg_t[genl_ovs_datapath_family_id_auto, genlmsghdr_t[CMD], POLICY]]
type msghdr_ovs_flow_auto[CMD, POLICY] msghdr_netlink[netlink_msg_t[genl_ovs_flow_family_id_auto, genlmsghdr_t[CMD], POLICY]]
type msghdr_ovs_meter_auto[CMD, POLICY] msghdr_netlink[netlink_msg_t[genl_ovs_meter_family_id_auto, genlmsghdr_t[CMD], POLICY]]
type msghdr_ovs_packet_auto[CMD, POLICY] msghdr_netlink[netlink_msg_t[genl_ovs_packet_family_id_auto, genlmsghdr_t[CMD], POLICY]]
type msghdr_ovs_vport_auto[CMD, POLICY] msghdr_netlink[netlink_msg_t[genl_ovs_vport_family_id_auto, genlmsghdr_t[CMD], POLICY]]
type msghdr_tcp_metrics_auto[CMD, POLICY] msghdr_netlink[netlink_msg_t[genl_tcp_metrics_family_id_auto, genlmsghdr_t[CMD], POLICY]]
type msghdr_thermal_auto[CMD, POLICY] msghdr_netlink[netlink_msg_t[genl_thermal_family_id_auto, genlmsghdr_t[CMD], POLICY]]
type msghdr_vdpa_auto[CMD, POLICY] msghdr_netlink[netlink_msg_t[genl_vdpa_family_id_auto, genlmsghdr_t[CMD], POLICY]]
type msghdr_wireguard_auto[CMD, POLICY] msghdr_netlink[netlink_msg_t[genl_wireguard_family_id_auto, genlmsghdr_t[CMD], POLICY]]
type smc_gen_nl_policy$auto_smc_netlink auto_todo
_llseek$auto(fd fd, offset_high intptr, offset_low intptr, result ptr[inout, int64], whence int32) (automatic)
_newselect$auto(n int32, inp ptr[inout, __kernel_fd_set$auto_record], outp ptr[inout, __kernel_fd_set$auto_record], exp ptr[inout, __kernel_fd_set$auto_record], tvp ptr[inout, __kernel_old_timeval$auto_record]) (automatic)
accept$auto(fd fd, upeer_sockaddr ptr[inout, sockaddr$auto_record], upeer_addrlen ptr[inout, int32]) (automatic)
accept4$auto(fd fd, upeer_sockaddr ptr[inout, sockaddr$auto_record], upeer_addrlen ptr[inout, int32], flags int32) (automatic)
access$auto(filename ptr[in, filename], mode int32) (automatic)
acct$auto(name ptr[in, string]) (automatic)
add_key$auto(_type ptr[in, string], _description ptr[in, string], _payload ptr[in, array[auto_todo]], plen intptr, ringid int32) (automatic)
adjtimex$auto(txc_p ptr[inout, __kernel_timex$auto_record]) (automatic)
alarm$auto(seconds int32) (automatic)
arch_prctl$auto(option int32, arg2 intptr) (automatic)
arm_sync_file_range$auto(fd fd, flags int32, offset intptr, nbytes intptr) (automatic)
bind$auto(fd fd, umyaddr ptr[inout, sockaddr$auto_record], addrlen int32) (automatic)
bpf$auto(cmd int32, uattr ptr[inout, bpf_attr$auto_record], size int32) (automatic)
brk$auto(brk intptr) (automatic)
cachestat$auto(fd fd, cstat_range ptr[inout, cachestat_range$auto_record], cstat ptr[inout, cachestat$auto_record], flags int32) (automatic)
capget$auto(header ptr[inout, __user_cap_header_struct$auto_record], dataptr ptr[inout, __user_cap_data_struct$auto_record]) (automatic)
capset$auto(header ptr[inout, __user_cap_header_struct$auto_record], data ptr[inout, __user_cap_data_struct$auto_record]) (automatic)
chdir$auto(filename ptr[in, filename]) (automatic)
chmod$auto(filename ptr[in, filename], mode int16) (automatic)
chown$auto(filename ptr[in, filename], user uid, group gid) (automatic)
chown32$auto(filename ptr[in, filename], user uid, group gid) (automatic)
chroot$auto(filename ptr[in, filename]) (automatic)
clock_adjtime$auto(which_clock int32, utx ptr[inout, __kernel_timex$auto_record]) (automatic)
clock_adjtime64$auto(which_clock int32, utx ptr[inout, __kernel_timex$auto_record]) (automatic)
clock_getres$auto(which_clock int32, tp ptr[inout, __kernel_timespec$auto_record]) (automatic)
clock_getres_time64$auto(which_clock int32, tp ptr[inout, __kernel_timespec$auto_record]) (automatic)
clock_gettime$auto(which_clock int32, tp ptr[inout, __kernel_timespec$auto_record]) (automatic)
clock_gettime64$auto(which_clock int32, tp ptr[inout, __kernel_timespec$auto_record]) (automatic)
clock_nanosleep$auto(which_clock int32, flags int32, rqtp ptr[in, __kernel_timespec$auto_record], rmtp ptr[inout, __kernel_timespec$auto_record]) (automatic)
clock_nanosleep_time64$auto(which_clock int32, flags int32, rqtp ptr[in, __kernel_timespec$auto_record], rmtp ptr[inout, __kernel_timespec$auto_record]) (automatic)
clock_settime$auto(which_clock int32, tp ptr[in, __kernel_timespec$auto_record]) (automatic)
clock_settime64$auto(which_clock int32, tp ptr[in, __kernel_timespec$auto_record]) (automatic)
clone$auto(clone_flags intptr, newsp intptr, parent_tidptr ptr[inout, int32], child_tidptr ptr[inout, int32], tls intptr) (automatic)
clone3$auto(uargs ptr[inout, clone_args$auto_record], size intptr) (automatic)
close$auto(fd fd) (automatic)
close_range$auto(fd fd, max_fd fd, flags int32) (automatic)
connect$auto(fd fd, uservaddr ptr[inout, sockaddr$auto_record], addrlen int32) (automatic)
copy_file_range$auto(fd_in fd, off_in ptr[inout, int64], fd_out fd, off_out ptr[inout, int64], len intptr, flags int32) (automatic)
creat$auto(pathname ptr[in, filename], mode int16) (automatic)
delete_module$auto(name_user ptr[in, string], flags int32) (automatic)
dup$auto(fildes fd) (automatic)
dup2$auto(oldfd fd, newfd fd) (automatic)
dup3$auto(oldfd fd, newfd fd, flags int32) (automatic)
epoll_create$auto(size int32) (automatic)
epoll_create1$auto(flags int32) (automatic)
epoll_ctl$auto(epfd fd, op int32, fd fd, event ptr[inout, epoll_event$auto_record]) (automatic)
epoll_pwait$auto(epfd fd, events ptr[inout, epoll_event$auto_record], maxevents int32, timeout int32, sigmask ptr[in, sigset_t$auto_record], sigsetsize const[8]) (automatic)
epoll_pwait2$auto(epfd fd, events ptr[inout, epoll_event$auto_record], maxevents int32, timeout ptr[in, __kernel_timespec$auto_record], sigmask ptr[in, sigset_t$auto_record], sigsetsize const[8]) (automatic)
epoll_wait$auto(epfd fd, events ptr[inout, epoll_event$auto_record], maxevents int32, timeout int32) (automatic)
eventfd$auto(count int32) (automatic)
eventfd2$auto(count int32, flags int32) (automatic)
execve$auto(filename ptr[in, filename], argv ptr[in, ptr[in, string]], envp ptr[in, ptr[in, string]]) (automatic)
execveat$auto(fd fd, filename ptr[in, filename], argv ptr[in, ptr[in, string]], envp ptr[in, ptr[in, string]], flags int32) (automatic)
exit$auto(error_code int32) (automatic)
exit_group$auto(error_code int32) (automatic)
faccessat$auto(dfd fd_dir, filename ptr[in, filename], mode int32) (automatic)
faccessat2$auto(dfd fd_dir, filename ptr[in, filename], mode int32, flags int32) (automatic)
fadvise64$auto(fd fd, offset intptr, len intptr, advice int32) (automatic)
fadvise64_64$auto(fd fd, offset_low int32, offset_high int32, len_low int32, len_high int32, advice int32) (automatic)
fallocate$auto(fd fd, mode int32, offset intptr, len intptr) (automatic)
fanotify_init$auto(flags int32, event_f_flags int32) (automatic)
fanotify_mark$auto(fanotify_fd fd, flags int32, mask intptr, dfd fd_dir, pathname ptr[in, filename]) (automatic)
fchdir$auto(fd fd) (automatic)
fchmod$auto(fd fd, mode int16) (automatic)
fchmodat$auto(dfd fd_dir, filename ptr[in, filename], mode int16) (automatic)
fchmodat2$auto(dfd fd_dir, filename ptr[in, filename], mode int16, flags int32) (automatic)
fchown$auto(fd fd, user uid, group gid) (automatic)
fchown32$auto(fd fd, user uid, group gid) (automatic)
fchownat$auto(dfd fd_dir, filename ptr[in, filename], user uid, group gid, flag int32) (automatic)
fcntl$auto(fd fd, cmd int32, arg intptr) (automatic)
fdatasync$auto(fd fd) (automatic)
fgetxattr$auto(fd fd, name ptr[in, string], value ptr[inout, array[auto_todo]], size intptr) (automatic)
finit_module$auto(fd fd, uargs ptr[in, string], flags int32) (automatic)
flistxattr$auto(fd fd, list ptr[inout, string], size intptr) (automatic)
flock$auto(fd fd, cmd int32) (automatic)
fremovexattr$auto(fd fd, name ptr[in, string]) (automatic)
fsconfig$auto(fd fd, cmd int32, _key ptr[in, string], _value ptr[in, array[auto_todo]], aux int32) (automatic)
fsetxattr$auto(fd fd, name ptr[in, string], value ptr[in, array[auto_todo]], size intptr, flags int32) (automatic)
fsmount$auto(fs_fd fd, flags int32, attr_flags int32) (automatic)
fsopen$auto(_fs_name ptr[in, string], flags int32) (automatic)
fspick$auto(dfd fd_dir, path ptr[in, filename], flags int32) (automatic)
fstat$auto(fd fd, statbuf ptr[inout, stat$auto_record]) (automatic)
fstatfs$auto(fd fd, buf ptr[inout, statfs$auto_record]) (automatic)
fstatfs64$auto(fd fd, sz intptr, buf ptr[inout, statfs64$auto_record]) (automatic)
fsync$auto(fd fd) (automatic)
ftruncate$auto(fd fd, length intptr) (automatic)
ftruncate64$auto(fd fd, offset_low intptr, offset_high intptr) (automatic)
futex$auto(uaddr ptr[inout, int32], op int32, val int32, utime ptr[in, __kernel_timespec$auto_record], uaddr2 ptr[inout, int32], val3 int32) (automatic)
futex_requeue$auto(waiters ptr[inout, futex_waitv$auto_record], flags int32, nr_wake int32, nr_requeue int32) (automatic)
futex_time64$auto(uaddr ptr[inout, int32], op int32, val int32, utime ptr[in, __kernel_timespec$auto_record], uaddr2 ptr[inout, int32], val3 int32) (automatic)
futex_wait$auto(uaddr ptr[inout, array[auto_todo]], val intptr, mask intptr, flags int32, timeout ptr[inout, __kernel_timespec$auto_record], clockid int32) (automatic)
futex_waitv$auto(waiters ptr[inout, futex_waitv$auto_record], nr_futexes int32, flags int32, timeout ptr[inout, __kernel_timespec$auto_record], clockid int32) (automatic)
futex_wake$auto(uaddr ptr[inout, array[auto_todo]], mask intptr, nr int32, flags int32) (automatic)
futimesat$auto(dfd fd_dir, filename ptr[in, filename], utimes ptr[inout, __kernel_old_timeval$auto_record]) (automatic)
get_mempolicy$auto(policy ptr[inout, int32], nmask ptr[inout, intptr], maxnode intptr, addr intptr, flags intptr) (automatic)
get_robust_list$auto(pid pid, head_ptr ptr[inout, ptr[inout, robust_list_head$auto_record]], len_ptr ptr[inout, intptr]) (automatic)
get_thread_area$auto(u_info ptr[inout, user_desc$auto_record]) (automatic)
getcpu$auto(cpup ptr[inout, int32], nodep ptr[inout, int32], unused ptr[inout, getcpu_cache$auto_record]) (automatic)
getcwd$auto(buf ptr[inout, string], size intptr) (automatic)
getdents$auto(fd fd, dirent ptr[inout, linux_dirent$auto_record], count int32) (automatic)
getdents64$auto(fd fd, dirent ptr[inout, linux_dirent64$auto_record], count int32) (automatic)
getgroups$auto(gidsetsize int32, grouplist ptr[inout, int32]) (automatic)
getgroups32$auto(gidsetsize int32, grouplist ptr[inout, int32]) (automatic)
getitimer$auto(which int32, value ptr[inout, __kernel_old_itimerval$auto_record]) (automatic)
getpeername$auto(fd fd, usockaddr ptr[inout, sockaddr$auto_record], usockaddr_len ptr[inout, int32]) (automatic)
getpgid$auto(pid pid) (automatic)
getpriority$auto(which int32, who int32) (automatic)
getrandom$auto(ubuf ptr[inout, string], len intptr, flags int32) (automatic)
getresgid$auto(rgidp ptr[inout, int32], egidp ptr[inout, int32], sgidp ptr[inout, int32]) (automatic)
getresgid32$auto(rgidp ptr[inout, int32], egidp ptr[inout, int32], sgidp ptr[inout, int32]) (automatic)
getresuid$auto(ruidp ptr[inout, int32], euidp ptr[inout, int32], suidp ptr[inout, int32]) (automatic)
getresuid32$auto(ruidp ptr[inout, int32], euidp ptr[inout, int32], suidp ptr[inout, int32]) (automatic)
getrlimit$auto(_resource int32, rlim ptr[inout, rlimit$auto_record]) (automatic)
getrusage$auto(who int32, ru ptr[inout, rusage$auto_record]) (automatic)
getsid$auto(pid pid) (automatic)
getsockname$auto(fd fd, usockaddr ptr[inout, sockaddr$auto_record], usockaddr_len ptr[inout, int32]) (automatic)
getsockopt$auto(fd fd, level int32, optname int32, optval ptr[inout, string], optlen ptr[inout, int32]) (automatic)
gettimeofday$auto(tv ptr[inout, __kernel_old_timeval$auto_record], tz ptr[inout, timezone$auto_record]) (automatic)
getxattr$auto(pathname ptr[in, filename], name ptr[in, string], value ptr[inout, array[auto_todo]], size intptr) (automatic)
init_module$auto(umod ptr[inout, array[auto_todo]], len intptr, uargs ptr[in, string]) (automatic)
inotify_add_watch$auto(fd fd, pathname ptr[in, filename], mask int32) (automatic)
inotify_init1$auto(flags int32) (automatic)
inotify_rm_watch$auto(fd fd, wd int32) (automatic)
io_cancel$auto(ctx_id intptr, iocb ptr[inout, iocb$auto_record], result ptr[inout, io_event$auto_record]) (automatic)
io_destroy$auto(ctx intptr) (automatic)
io_getevents$auto(ctx_id intptr, min_nr intptr, nr intptr, events ptr[inout, io_event$auto_record], timeout ptr[inout, __kernel_timespec$auto_record]) (automatic)
io_pgetevents$auto(ctx_id intptr, min_nr intptr, nr intptr, events ptr[inout, io_event$auto_record], timeout ptr[inout, __kernel_timespec$auto_record], usig ptr[in, __aio_sigset$auto_record]) (automatic)
io_pgetevents_time64$auto(ctx_id intptr, min_nr intptr, nr intptr, events ptr[inout, io_event$auto_record], timeout ptr[inout, __kernel_timespec$auto_record], usig ptr[in, __aio_sigset$auto_record]) (automatic)
io_setup$auto(nr_events int32, ctxp ptr[inout, intptr]) (automatic)
io_submit$auto(ctx_id intptr, nr intptr, iocbpp ptr[inout, ptr[inout, iocb$auto_record]]) (automatic)
io_uring_enter$auto(fd fd, to_submit int32, min_complete int32, flags int32, argp ptr[in, array[auto_todo]], argsz intptr) (automatic)
io_uring_register$auto(fd fd, opcode int32, arg ptr[inout, array[auto_todo]], nr_args int32) (automatic)
io_uring_setup$auto(entries int32, params ptr[inout, io_uring_params$auto_record]) (automatic)
ioctl$auto(fd fd, cmd int32, arg intptr) (automatic)
ioperm$auto(from intptr, num intptr, turn_on int32) (automatic)
iopl$auto(level int32) (automatic)
ioprio_get$auto(which int32, who int32) (automatic)
ioprio_set$auto(which int32, who int32, ioprio int32) (automatic)
kcmp$auto(pid1 int32, pid2 int32, type int32, idx1 intptr, idx2 intptr) (automatic)
kexec_load$auto(entry intptr, nr_segments intptr, segments ptr[inout, kexec_segment$auto_record], flags intptr) (automatic)
keyctl$auto(option int32, arg2 intptr, arg3 intptr, arg4 intptr, arg5 intptr) (automatic)
kill$auto(pid pid, sig int32) (automatic)
landlock_add_rule$auto(ruleset_fd fd, rule_type flags[landlock_rule_type], rule_attr ptr[in, array[auto_todo]], flags int32) (automatic)
landlock_create_ruleset$auto(attr ptr[in, landlock_ruleset_attr$auto_record], size intptr, flags int32) (automatic)
landlock_restrict_self$auto(ruleset_fd fd, flags int32) (automatic)
lchown$auto(filename ptr[in, filename], user uid, group gid) (automatic)
lchown32$auto(filename ptr[in, filename], user uid, group gid) (automatic)
lgetxattr$auto(pathname ptr[in, filename], name ptr[in, string], value ptr[inout, array[auto_todo]], size intptr) (automatic)
link$auto(oldname ptr[in, filename], newname ptr[in, filename]) (automatic)
linkat$auto(olddfd fd_dir, oldname ptr[in, filename], newdfd fd_dir, newname ptr[in, filename], flags int32) (automatic)
listen$auto(fd fd, backlog int32) (automatic)
listmount$auto(req ptr[in, mnt_id_req$auto_record], mnt_ids ptr[inout, int64], nr_mnt_ids intptr, flags int32) (automatic)
listxattr$auto(pathname ptr[in, filename], list ptr[inout, string], size intptr) (automatic)
llistxattr$auto(pathname ptr[in, filename], list ptr[inout, string], size intptr) (automatic)
lremovexattr$auto(pathname ptr[in, filename], name ptr[in, string]) (automatic)
lseek$auto(fd fd, offset intptr, whence int32) (automatic)
lsetxattr$auto(pathname ptr[in, filename], name ptr[in, string], value ptr[in, array[auto_todo]], size intptr, flags int32) (automatic)
lsm_get_self_attr$auto(attr int32, ctx ptr[inout, lsm_ctx$auto_record], size ptr[inout, int32], flags int32) (automatic)
lsm_list_modules$auto(ids ptr[inout, int64], size ptr[inout, int32], flags int32) (automatic)
lsm_set_self_attr$auto(attr int32, ctx ptr[inout, lsm_ctx$auto_record], size int32, flags int32) (automatic)
lstat$auto(filename ptr[in, filename], statbuf ptr[inout, stat$auto_record]) (automatic)
madvise$auto(start intptr, len_in intptr, behavior int32) (automatic)
map_shadow_stack$auto(addr intptr, size intptr, flags int32) (automatic)
mbind$auto(start intptr, len intptr, mode intptr, nmask ptr[in, intptr], maxnode intptr, flags int32) (automatic)
membarrier$auto(cmd int32, flags int32, cpu_id int32) (automatic)
memfd_create$auto(uname ptr[in, string], flags int32) (automatic)
memfd_secret$auto(flags int32) (automatic)
migrate_pages$auto(pid pid, maxnode intptr, old_nodes ptr[in, intptr], new_nodes ptr[in, intptr]) (automatic)
mincore$auto(start intptr, len intptr, vec ptr[inout, string]) (automatic)
mkdir$auto(pathname ptr[in, filename], mode int16) (automatic)
mkdirat$auto(dfd fd_dir, pathname ptr[in, filename], mode int16) (automatic)
mknod$auto(filename ptr[in, filename], mode int16, dev int32) (automatic)
mknodat$auto(dfd fd_dir, filename ptr[in, filename], mode int16, dev int32) (automatic)
mlock$auto(start intptr, len intptr) (automatic)
mlock2$auto(start intptr, len intptr, flags int32) (automatic)
mlockall$auto(flags int32) (automatic)
mmap$auto(addr intptr, len intptr, prot intptr, flags intptr, fd intptr, off intptr) (automatic)
mmap2$auto(addr intptr, len intptr, prot intptr, flags intptr, fd intptr, pgoff intptr) (automatic)
modify_ldt$auto(func int32, ptr ptr[inout, array[auto_todo]], bytecount intptr) (automatic)
mount$auto(dev_name ptr[inout, devname], dir_name ptr[inout, filename], type ptr[inout, string], flags intptr, data ptr[inout, array[auto_todo]]) (automatic)
mount_setattr$auto(dfd fd_dir, path ptr[in, filename], flags int32, uattr ptr[inout, mount_attr$auto_record], usize intptr) (automatic)
move_mount$auto(from_dfd fd_dir, from_pathname ptr[in, filename], to_dfd fd_dir, to_pathname ptr[in, filename], flags int32) (automatic)
move_pages$auto(pid pid, nr_pages intptr, pages ptr[inout, ptr[in, array[auto_todo]]], nodes ptr[in, int32], status ptr[inout, int32], flags int32) (automatic)
mprotect$auto(start intptr, len intptr, prot intptr) (automatic)
mq_getsetattr$auto(mqdes int32, u_mqstat ptr[in, mq_attr$auto_record], u_omqstat ptr[inout, mq_attr$auto_record]) (automatic)
mq_notify$auto(mqdes int32, u_notification ptr[in, sigevent$auto_record]) (automatic)
mq_open$auto(u_name ptr[in, string], oflag int32, mode int16, u_attr ptr[inout, mq_attr$auto_record]) (automatic)
mq_timedreceive$auto(mqdes int32, u_msg_ptr ptr[inout, string], msg_len intptr, u_msg_prio ptr[inout, int32], u_abs_timeout ptr[in, __kernel_timespec$auto_record]) (automatic)
mq_timedreceive_time64$auto(mqdes int32, u_msg_ptr ptr[inout, string], msg_len intptr, u_msg_prio ptr[inout, int32], u_abs_timeout ptr[in, __kernel_timespec$auto_record]) (automatic)
mq_timedsend$auto(mqdes int32, u_msg_ptr ptr[in, string], msg_len intptr, msg_prio int32, u_abs_timeout ptr[in, __kernel_timespec$auto_record]) (automatic)
mq_timedsend_time64$auto(mqdes int32, u_msg_ptr ptr[in, string], msg_len intptr, msg_prio int32, u_abs_timeout ptr[in, __kernel_timespec$auto_record]) (automatic)
mq_unlink$auto(u_name ptr[in, string]) (automatic)
mremap$auto(addr intptr, old_len intptr, new_len intptr, flags intptr, new_addr intptr) (automatic)
mseal$auto(start intptr, len intptr, flags intptr) (automatic)
msgctl$auto(msqid int32, cmd int32, buf ptr[inout, msqid_ds$auto_record]) (automatic)
msgget$auto(key int32, msgflg int32) (automatic)
msgrcv$auto(msqid int32, msgp ptr[inout, msgbuf$auto_record], msgsz intptr, msgtyp intptr, msgflg int32) (automatic)
msgsnd$auto(msqid int32, msgp ptr[inout, msgbuf$auto_record], msgsz intptr, msgflg int32) (automatic)
msync$auto(start intptr, len intptr, flags int32) (automatic)
munlock$auto(start intptr, len intptr) (automatic)
munmap$auto(addr intptr, len intptr) (automatic)
name_to_handle_at$auto(dfd fd_dir, name ptr[in, string], handle ptr[inout, file_handle$auto_record], mnt_id ptr[inout, array[auto_todo]], flag int32) (automatic)
nanosleep$auto(rqtp ptr[inout, __kernel_timespec$auto_record], rmtp ptr[inout, __kernel_timespec$auto_record]) (automatic)
newfstatat$auto(dfd fd_dir, filename ptr[in, filename], statbuf ptr[inout, stat$auto_record], flag int32) (automatic)
nice$auto(increment int32) (automatic)
oldfstat$auto(fd fd, statbuf ptr[inout, __old_kernel_stat$auto_record]) (automatic)
oldlstat$auto(filename ptr[in, filename], statbuf ptr[inout, __old_kernel_stat$auto_record]) (automatic)
oldolduname$auto(name ptr[inout, oldold_utsname$auto_record]) (automatic)
oldstat$auto(filename ptr[in, filename], statbuf ptr[inout, __old_kernel_stat$auto_record]) (automatic)
olduname$auto(name ptr[inout, old_utsname$auto_record]) (automatic)
open$auto(filename ptr[in, filename], flags int32, mode int16) (automatic)
open_by_handle_at$auto(mountdirfd fd, handle ptr[inout, file_handle$auto_record], flags int32) (automatic)
open_tree$auto(dfd fd_dir, filename ptr[in, filename], flags int32) (automatic)
openat$auto(dfd fd_dir, filename ptr[in, filename], flags int32, mode int16) (automatic)
openat2$auto(dfd fd_dir, filename ptr[in, filename], how ptr[inout, open_how$auto_record], usize intptr) (automatic)
perf_event_open$auto(attr_uptr ptr[inout, perf_event_attr$auto_record], pid pid, cpu int32, group_fd fd, flags intptr) (automatic)
personality$auto(personality int32) (automatic)
pidfd_getfd$auto(pidfd fd, fd fd, flags int32) (automatic)
pidfd_open$auto(pid pid, flags int32) (automatic)
pidfd_send_signal$auto(pidfd fd, sig int32, info ptr[inout, siginfo$auto_record], flags int32) (automatic)
pipe$auto(fildes ptr[inout, fd]) (automatic)
pipe2$auto(fildes ptr[inout, fd], flags int32) (automatic)
pivot_root$auto(new_root ptr[in, string], put_old ptr[in, string]) (automatic)
pkey_alloc$auto(flags intptr, init_val intptr) (automatic)
pkey_free$auto(pkey int32) (automatic)
pkey_mprotect$auto(start intptr, len intptr, prot intptr, pkey int32) (automatic)
poll$auto(ufds ptr[inout, pollfd$auto_record], nfds int32, timeout_msecs int32) (automatic)
ppoll$auto(ufds ptr[inout, pollfd$auto_record], nfds int32, tsp ptr[inout, __kernel_timespec$auto_record], sigmask ptr[in, sigset_t$auto_record], sigsetsize const[8]) (automatic)
ppoll_time64$auto(ufds ptr[inout, pollfd$auto_record], nfds int32, tsp ptr[inout, __kernel_timespec$auto_record], sigmask ptr[in, sigset_t$auto_record], sigsetsize const[8]) (automatic)
prctl$auto(option int32, arg2 intptr, arg3 intptr, arg4 intptr, arg5 intptr) (automatic)
pread64$auto(fd fd, buf ptr[inout, string], count intptr, pos intptr) (automatic)
preadv$auto(fd intptr, vec ptr[in, iovec$auto_record], vlen intptr, pos_l intptr, pos_h intptr) (automatic)
preadv2$auto(fd intptr, vec ptr[in, iovec$auto_record], vlen intptr, pos_l intptr, pos_h intptr, flags int32) (automatic)
prlimit64$auto(pid pid, _resource int32, new_rlim ptr[in, rlimit64$auto_record], old_rlim ptr[inout, rlimit64$auto_record]) (automatic)
process_madvise$auto(pidfd fd, vec ptr[in, iovec$auto_record], vlen intptr, behavior int32, flags int32) (automatic)
process_mrelease$auto(pidfd fd, flags int32) (automatic)
process_vm_readv$auto(pid pid, lvec ptr[in, iovec$auto_record], liovcnt intptr, rvec ptr[in, iovec$auto_record], riovcnt intptr, flags intptr) (automatic)
process_vm_writev$auto(pid pid, lvec ptr[in, iovec$auto_record], liovcnt intptr, rvec ptr[in, iovec$auto_record], riovcnt intptr, flags intptr) (automatic)
pselect6$auto(n int32, inp ptr[inout, __kernel_fd_set$auto_record], outp ptr[inout, __kernel_fd_set$auto_record], exp ptr[inout, __kernel_fd_set$auto_record], tsp ptr[inout, __kernel_timespec$auto_record], sig ptr[inout, array[auto_todo]]) (automatic)
pselect6_time64$auto(n int32, inp ptr[inout, __kernel_fd_set$auto_record], outp ptr[inout, __kernel_fd_set$auto_record], exp ptr[inout, __kernel_fd_set$auto_record], tsp ptr[inout, __kernel_timespec$auto_record], sig ptr[inout, array[auto_todo]]) (automatic)
ptrace$auto(request intptr, pid intptr, addr intptr, data intptr) (automatic)
pwrite64$auto(fd fd, buf ptr[in, string], count intptr, pos intptr) (automatic)
pwritev$auto(fd intptr, vec ptr[in, iovec$auto_record], vlen intptr, pos_l intptr, pos_h intptr) (automatic)
pwritev2$auto(fd intptr, vec ptr[in, iovec$auto_record], vlen intptr, pos_l intptr, pos_h intptr, flags int32) (automatic)
quotactl$auto(cmd int32, special ptr[in, string], id int32, addr ptr[inout, array[auto_todo]]) (automatic)
quotactl_fd$auto(fd fd, cmd int32, id int32, addr ptr[inout, array[auto_todo]]) (automatic)
read$auto(fd fd, buf ptr[inout, string], count intptr) (automatic)
readahead$auto(fd fd, offset intptr, count intptr) (automatic)
readdir$auto(fd fd, dirent ptr[inout, old_linux_dirent$auto_record], count int32) (automatic)
readlink$auto(path ptr[in, filename], buf ptr[inout, string], bufsiz int32) (automatic)
readlinkat$auto(dfd fd_dir, pathname ptr[in, filename], buf ptr[inout, string], bufsiz int32) (automatic)
readv$auto(fd intptr, vec ptr[in, iovec$auto_record], vlen intptr) (automatic)
recv$auto(fd fd, ubuf ptr[inout, array[auto_todo]], size intptr, flags int32) (automatic)
recvfrom$auto(fd fd, ubuf ptr[inout, array[auto_todo]], size intptr, flags int32, addr ptr[inout, sockaddr$auto_record], addr_len ptr[inout, int32]) (automatic)
recvmmsg$auto(fd fd, mmsg ptr[inout, mmsghdr$auto_record], vlen int32, flags int32, timeout ptr[inout, __kernel_timespec$auto_record]) (automatic)
recvmmsg_time64$auto(fd fd, mmsg ptr[inout, mmsghdr$auto_record], vlen int32, flags int32, timeout ptr[inout, __kernel_timespec$auto_record]) (automatic)
recvmsg$auto(fd fd, msg ptr[inout, user_msghdr$auto_record], flags int32) (automatic)
remap_file_pages$auto(start intptr, size intptr, prot intptr, pgoff intptr, flags intptr) (automatic)
removexattr$auto(pathname ptr[in, filename], name ptr[in, string]) (automatic)
rename$auto(oldname ptr[in, filename], newname ptr[in, filename]) (automatic)
renameat$auto(olddfd fd_dir, oldname ptr[in, filename], newdfd fd_dir, newname ptr[in, filename]) (automatic)
renameat2$auto(olddfd fd_dir, oldname ptr[in, filename], newdfd fd_dir, newname ptr[in, filename], flags int32) (automatic)
request_key$auto(_type ptr[in, string], _description ptr[in, string], _callout_info ptr[in, string], destringid int32) (automatic)
rmdir$auto(pathname ptr[in, filename]) (automatic)
rseq$auto(rseq ptr[inout, rseq$auto_record], rseq_len int32, flags int32, sig int32) (automatic)
rt_sigaction$auto(sig int32, act ptr[in, sigaction$auto_record], oact ptr[inout, sigaction$auto_record], sigsetsize const[8]) (automatic)
rt_sigpending$auto(uset ptr[inout, sigset_t$auto_record], sigsetsize const[8]) (automatic)
rt_sigprocmask$auto(how int32, nset ptr[inout, sigset_t$auto_record], oset ptr[inout, sigset_t$auto_record], sigsetsize const[8]) (automatic)
rt_sigqueueinfo$auto(pid pid, sig int32, uinfo ptr[inout, siginfo$auto_record]) (automatic)
rt_sigsuspend$auto(unewset ptr[inout, sigset_t$auto_record], sigsetsize const[8]) (automatic)
rt_sigtimedwait$auto(uthese ptr[in, sigset_t$auto_record], uinfo ptr[inout, siginfo$auto_record], uts ptr[in, __kernel_timespec$auto_record], sigsetsize const[8]) (automatic)
rt_sigtimedwait_time64$auto(uthese ptr[in, sigset_t$auto_record], uinfo ptr[inout, siginfo$auto_record], uts ptr[in, __kernel_timespec$auto_record], sigsetsize const[8]) (automatic)
rt_tgsigqueueinfo$auto(tgid pid, pid pid, sig int32, uinfo ptr[inout, siginfo$auto_record]) (automatic)
sched_get_priority_max$auto(policy int32) (automatic)
sched_get_priority_min$auto(policy int32) (automatic)
sched_getaffinity$auto(pid pid, len int32, user_mask_ptr ptr[inout, intptr]) (automatic)
sched_getattr$auto(pid pid, uattr ptr[inout, sched_attr$auto_record], usize int32, flags int32) (automatic)
sched_getparam$auto(pid pid, param ptr[inout, sched_param$auto_record]) (automatic)
sched_getscheduler$auto(pid pid) (automatic)
sched_rr_get_interval$auto(pid pid, interval ptr[inout, __kernel_timespec$auto_record]) (automatic)
sched_rr_get_interval_time64$auto(pid pid, interval ptr[inout, __kernel_timespec$auto_record]) (automatic)
sched_setaffinity$auto(pid pid, len int32, user_mask_ptr ptr[inout, intptr]) (automatic)
sched_setattr$auto(pid pid, uattr ptr[inout, sched_attr$auto_record], flags int32) (automatic)
sched_setparam$auto(pid pid, param ptr[inout, sched_param$auto_record]) (automatic)
sched_setscheduler$auto(pid pid, policy int32, param ptr[inout, sched_param$auto_record]) (automatic)
seccomp$auto(op int32, flags int32, uargs ptr[inout, array[auto_todo]]) (automatic)
select$auto(n int32, inp ptr[inout, __kernel_fd_set$auto_record], outp ptr[inout, __kernel_fd_set$auto_record], exp ptr[inout, __kernel_fd_set$auto_record], tvp ptr[inout, __kernel_old_timeval$auto_record]) (automatic)
semctl$auto(semid int32, semnum int32, cmd int32, arg intptr) (automatic)
semget$auto(key int32, nsems int32, semflg int32) (automatic)
semop$auto(semid int32, tsops ptr[inout, sembuf$auto_record], nsops int32) (automatic)
semtimedop$auto(semid int32, tsops ptr[inout, sembuf$auto_record], nsops int32, timeout ptr[in, __kernel_timespec$auto_record]) (automatic)
semtimedop_time64$auto(semid int32, tsops ptr[inout, sembuf$auto_record], nsops int32, timeout ptr[in, __kernel_timespec$auto_record]) (automatic)
send$auto(fd fd, buff ptr[inout, array[auto_todo]], len intptr, flags int32) (automatic)
sendfile$auto(out_fd fd, in_fd fd, offset ptr[inout, int64], count intptr) (automatic)
sendfile64$auto(out_fd fd, in_fd fd, offset ptr[inout, int64], count intptr) (automatic)
sendmmsg$auto(fd fd, mmsg ptr[inout, mmsghdr$auto_record], vlen int32, flags int32) (automatic)
sendmsg$auto(fd fd, msg ptr[inout, user_msghdr$auto_record], flags int32) (automatic)
sendmsg$auto_BATADV_CMD_GET_BLA_BACKBONE(fd sock_nl_generic, msg ptr[in, msghdr_batadv_auto[BATADV_CMD_GET_BLA_BACKBONE, batadv_netlink_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_BATADV_CMD_GET_BLA_CLAIM(fd sock_nl_generic, msg ptr[in, msghdr_batadv_auto[BATADV_CMD_GET_BLA_CLAIM, batadv_netlink_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_BATADV_CMD_GET_DAT_CACHE(fd sock_nl_generic, msg ptr[in, msghdr_batadv_auto[BATADV_CMD_GET_DAT_CACHE, batadv_netlink_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_BATADV_CMD_GET_GATEWAYS(fd sock_nl_generic, msg ptr[in, msghdr_batadv_auto[BATADV_CMD_GET_GATEWAYS, batadv_netlink_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_BATADV_CMD_GET_HARDIF(fd sock_nl_generic, msg ptr[in, msghdr_batadv_auto[BATADV_CMD_GET_HARDIF, batadv_netlink_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_BATADV_CMD_GET_MCAST_FLAGS(fd sock_nl_generic, msg ptr[in, msghdr_batadv_auto[BATADV_CMD_GET_MCAST_FLAGS, batadv_netlink_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_BATADV_CMD_GET_MESH(fd sock_nl_generic, msg ptr[in, msghdr_batadv_auto[BATADV_CMD_GET_MESH, batadv_netlink_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_BATADV_CMD_GET_NEIGHBORS(fd sock_nl_generic, msg ptr[in, msghdr_batadv_auto[BATADV_CMD_GET_NEIGHBORS, batadv_netlink_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_BATADV_CMD_GET_ORIGINATORS(fd sock_nl_generic, msg ptr[in, msghdr_batadv_auto[BATADV_CMD_GET_ORIGINATORS, batadv_netlink_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_BATADV_CMD_GET_ROUTING_ALGOS(fd sock_nl_generic, msg ptr[in, msghdr_batadv_auto[BATADV_CMD_GET_ROUTING_ALGOS, batadv_netlink_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_BATADV_CMD_GET_TRANSTABLE_GLOBAL(fd sock_nl_generic, msg ptr[in, msghdr_batadv_auto[BATADV_CMD_GET_TRANSTABLE_GLOBAL, batadv_netlink_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_BATADV_CMD_GET_TRANSTABLE_LOCAL(fd sock_nl_generic, msg ptr[in, msghdr_batadv_auto[BATADV_CMD_GET_TRANSTABLE_LOCAL, batadv_netlink_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_BATADV_CMD_GET_VLAN(fd sock_nl_generic, msg ptr[in, msghdr_batadv_auto[BATADV_CMD_GET_VLAN, batadv_netlink_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_BATADV_CMD_SET_HARDIF(fd sock_nl_generic, msg ptr[in, msghdr_batadv_auto[BATADV_CMD_SET_HARDIF, batadv_netlink_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_BATADV_CMD_SET_MESH(fd sock_nl_generic, msg ptr[in, msghdr_batadv_auto[BATADV_CMD_SET_MESH, batadv_netlink_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_BATADV_CMD_SET_VLAN(fd sock_nl_generic, msg ptr[in, msghdr_batadv_auto[BATADV_CMD_SET_VLAN, batadv_netlink_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_BATADV_CMD_TP_METER(fd sock_nl_generic, msg ptr[in, msghdr_batadv_auto[BATADV_CMD_TP_METER, batadv_netlink_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_BATADV_CMD_TP_METER_CANCEL(fd sock_nl_generic, msg ptr[in, msghdr_batadv_auto[BATADV_CMD_TP_METER_CANCEL, batadv_netlink_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_CGROUPSTATS_CMD_GET(fd sock_nl_generic, msg ptr[in, msghdr_TASKSTATS_auto[CGROUPSTATS_CMD_GET, cgroupstats_cmd_get_policy$auto_taskstats]], f flags[send_flags]) (automatic)
sendmsg$auto_CIFS_GENL_CMD_SWN_NOTIFY(fd sock_nl_generic, msg ptr[in, msghdr_cifs_auto[CIFS_GENL_CMD_SWN_NOTIFY, cifs_genl_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_CTRL_CMD_GETFAMILY(fd sock_nl_generic, msg ptr[in, msghdr_nlctrl_auto[CTRL_CMD_GETFAMILY, ctrl_policy_family$auto_genetlink]], f flags[send_flags]) (automatic)
sendmsg$auto_CTRL_CMD_GETPOLICY(fd sock_nl_generic, msg ptr[in, msghdr_nlctrl_auto[CTRL_CMD_GETPOLICY, ctrl_policy_policy$auto_genetlink]], f flags[send_flags]) (automatic)
sendmsg$auto_ETHTOOL_MSG_CABLE_TEST_ACT(fd sock_nl_generic, msg ptr[in, msghdr_ethtool_auto[ETHTOOL_MSG_CABLE_TEST_ACT, ethnl_cable_test_act_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_ETHTOOL_MSG_CABLE_TEST_TDR_ACT(fd sock_nl_generic, msg ptr[in, msghdr_ethtool_auto[ETHTOOL_MSG_CABLE_TEST_TDR_ACT, ethnl_cable_test_tdr_act_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_ETHTOOL_MSG_CHANNELS_GET(fd sock_nl_generic, msg ptr[in, msghdr_ethtool_auto[ETHTOOL_MSG_CHANNELS_GET, ethnl_channels_get_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_ETHTOOL_MSG_CHANNELS_SET(fd sock_nl_generic, msg ptr[in, msghdr_ethtool_auto[ETHTOOL_MSG_CHANNELS_SET, ethnl_channels_set_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_ETHTOOL_MSG_COALESCE_GET(fd sock_nl_generic, msg ptr[in, msghdr_ethtool_auto[ETHTOOL_MSG_COALESCE_GET, ethnl_coalesce_get_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_ETHTOOL_MSG_COALESCE_SET(fd sock_nl_generic, msg ptr[in, msghdr_ethtool_auto[ETHTOOL_MSG_COALESCE_SET, ethnl_coalesce_set_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_ETHTOOL_MSG_DEBUG_GET(fd sock_nl_generic, msg ptr[in, msghdr_ethtool_auto[ETHTOOL_MSG_DEBUG_GET, ethnl_debug_get_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_ETHTOOL_MSG_DEBUG_SET(fd sock_nl_generic, msg ptr[in, msghdr_ethtool_auto[ETHTOOL_MSG_DEBUG_SET, ethnl_debug_set_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_ETHTOOL_MSG_EEE_GET(fd sock_nl_generic, msg ptr[in, msghdr_ethtool_auto[ETHTOOL_MSG_EEE_GET, ethnl_eee_get_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_ETHTOOL_MSG_EEE_SET(fd sock_nl_generic, msg ptr[in, msghdr_ethtool_auto[ETHTOOL_MSG_EEE_SET, ethnl_eee_set_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_ETHTOOL_MSG_FEATURES_GET(fd sock_nl_generic, msg ptr[in, msghdr_ethtool_auto[ETHTOOL_MSG_FEATURES_GET, ethnl_features_get_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_ETHTOOL_MSG_FEATURES_SET(fd sock_nl_generic, msg ptr[in, msghdr_ethtool_auto[ETHTOOL_MSG_FEATURES_SET, ethnl_features_set_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_ETHTOOL_MSG_FEC_GET(fd sock_nl_generic, msg ptr[in, msghdr_ethtool_auto[ETHTOOL_MSG_FEC_GET, ethnl_fec_get_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_ETHTOOL_MSG_FEC_SET(fd sock_nl_generic, msg ptr[in, msghdr_ethtool_auto[ETHTOOL_MSG_FEC_SET, ethnl_fec_set_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_ETHTOOL_MSG_LINKINFO_GET(fd sock_nl_generic, msg ptr[in, msghdr_ethtool_auto[ETHTOOL_MSG_LINKINFO_GET, ethnl_linkinfo_get_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_ETHTOOL_MSG_LINKINFO_SET(fd sock_nl_generic, msg ptr[in, msghdr_ethtool_auto[ETHTOOL_MSG_LINKINFO_SET, ethnl_linkinfo_set_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_ETHTOOL_MSG_LINKMODES_GET(fd sock_nl_generic, msg ptr[in, msghdr_ethtool_auto[ETHTOOL_MSG_LINKMODES_GET, ethnl_linkmodes_get_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_ETHTOOL_MSG_LINKMODES_SET(fd sock_nl_generic, msg ptr[in, msghdr_ethtool_auto[ETHTOOL_MSG_LINKMODES_SET, ethnl_linkmodes_set_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_ETHTOOL_MSG_LINKSTATE_GET(fd sock_nl_generic, msg ptr[in, msghdr_ethtool_auto[ETHTOOL_MSG_LINKSTATE_GET, ethnl_linkstate_get_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_ETHTOOL_MSG_MM_GET(fd sock_nl_generic, msg ptr[in, msghdr_ethtool_auto[ETHTOOL_MSG_MM_GET, ethnl_mm_get_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_ETHTOOL_MSG_MM_SET(fd sock_nl_generic, msg ptr[in, msghdr_ethtool_auto[ETHTOOL_MSG_MM_SET, ethnl_mm_set_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_ETHTOOL_MSG_MODULE_EEPROM_GET(fd sock_nl_generic, msg ptr[in, msghdr_ethtool_auto[ETHTOOL_MSG_MODULE_EEPROM_GET, ethnl_module_eeprom_get_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_ETHTOOL_MSG_MODULE_FW_FLASH_ACT(fd sock_nl_generic, msg ptr[in, msghdr_ethtool_auto[ETHTOOL_MSG_MODULE_FW_FLASH_ACT, ethnl_module_fw_flash_act_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_ETHTOOL_MSG_MODULE_GET(fd sock_nl_generic, msg ptr[in, msghdr_ethtool_auto[ETHTOOL_MSG_MODULE_GET, ethnl_module_get_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_ETHTOOL_MSG_MODULE_SET(fd sock_nl_generic, msg ptr[in, msghdr_ethtool_auto[ETHTOOL_MSG_MODULE_SET, ethnl_module_set_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_ETHTOOL_MSG_PAUSE_GET(fd sock_nl_generic, msg ptr[in, msghdr_ethtool_auto[ETHTOOL_MSG_PAUSE_GET, ethnl_pause_get_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_ETHTOOL_MSG_PAUSE_SET(fd sock_nl_generic, msg ptr[in, msghdr_ethtool_auto[ETHTOOL_MSG_PAUSE_SET, ethnl_pause_set_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_ETHTOOL_MSG_PHC_VCLOCKS_GET(fd sock_nl_generic, msg ptr[in, msghdr_ethtool_auto[ETHTOOL_MSG_PHC_VCLOCKS_GET, ethnl_phc_vclocks_get_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_ETHTOOL_MSG_PHY_GET(fd sock_nl_generic, msg ptr[in, msghdr_ethtool_auto[ETHTOOL_MSG_PHY_GET, ethnl_phy_get_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_ETHTOOL_MSG_PLCA_GET_CFG(fd sock_nl_generic, msg ptr[in, msghdr_ethtool_auto[ETHTOOL_MSG_PLCA_GET_CFG, ethnl_plca_get_cfg_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_ETHTOOL_MSG_PLCA_GET_STATUS(fd sock_nl_generic, msg ptr[in, msghdr_ethtool_auto[ETHTOOL_MSG_PLCA_GET_STATUS, ethnl_plca_get_status_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_ETHTOOL_MSG_PLCA_SET_CFG(fd sock_nl_generic, msg ptr[in, msghdr_ethtool_auto[ETHTOOL_MSG_PLCA_SET_CFG, ethnl_plca_set_cfg_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_ETHTOOL_MSG_PRIVFLAGS_GET(fd sock_nl_generic, msg ptr[in, msghdr_ethtool_auto[ETHTOOL_MSG_PRIVFLAGS_GET, ethnl_privflags_get_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_ETHTOOL_MSG_PRIVFLAGS_SET(fd sock_nl_generic, msg ptr[in, msghdr_ethtool_auto[ETHTOOL_MSG_PRIVFLAGS_SET, ethnl_privflags_set_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_ETHTOOL_MSG_PSE_GET(fd sock_nl_generic, msg ptr[in, msghdr_ethtool_auto[ETHTOOL_MSG_PSE_GET, ethnl_pse_get_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_ETHTOOL_MSG_PSE_SET(fd sock_nl_generic, msg ptr[in, msghdr_ethtool_auto[ETHTOOL_MSG_PSE_SET, ethnl_pse_set_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_ETHTOOL_MSG_RINGS_GET(fd sock_nl_generic, msg ptr[in, msghdr_ethtool_auto[ETHTOOL_MSG_RINGS_GET, ethnl_rings_get_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_ETHTOOL_MSG_RINGS_SET(fd sock_nl_generic, msg ptr[in, msghdr_ethtool_auto[ETHTOOL_MSG_RINGS_SET, ethnl_rings_set_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_ETHTOOL_MSG_RSS_GET(fd sock_nl_generic, msg ptr[in, msghdr_ethtool_auto[ETHTOOL_MSG_RSS_GET, ethnl_rss_get_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_ETHTOOL_MSG_STATS_GET(fd sock_nl_generic, msg ptr[in, msghdr_ethtool_auto[ETHTOOL_MSG_STATS_GET, ethnl_stats_get_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_ETHTOOL_MSG_STRSET_GET(fd sock_nl_generic, msg ptr[in, msghdr_ethtool_auto[ETHTOOL_MSG_STRSET_GET, ethnl_strset_get_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_ETHTOOL_MSG_TSINFO_GET(fd sock_nl_generic, msg ptr[in, msghdr_ethtool_auto[ETHTOOL_MSG_TSINFO_GET, ethnl_tsinfo_get_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_ETHTOOL_MSG_TUNNEL_INFO_GET(fd sock_nl_generic, msg ptr[in, msghdr_ethtool_auto[ETHTOOL_MSG_TUNNEL_INFO_GET, ethnl_tunnel_info_get_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_ETHTOOL_MSG_WOL_GET(fd sock_nl_generic, msg ptr[in, msghdr_ethtool_auto[ETHTOOL_MSG_WOL_GET, ethnl_wol_get_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_ETHTOOL_MSG_WOL_SET(fd sock_nl_generic, msg ptr[in, msghdr_ethtool_auto[ETHTOOL_MSG_WOL_SET, ethnl_wol_set_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_GTP_CMD_DELPDP(fd sock_nl_generic, msg ptr[in, msghdr_gtp_auto[GTP_CMD_DELPDP, gtp_genl_policy$auto_gtp]], f flags[send_flags]) (automatic)
sendmsg$auto_GTP_CMD_ECHOREQ(fd sock_nl_generic, msg ptr[in, msghdr_gtp_auto[GTP_CMD_ECHOREQ, gtp_genl_policy$auto_gtp]], f flags[send_flags]) (automatic)
sendmsg$auto_GTP_CMD_GETPDP(fd sock_nl_generic, msg ptr[in, msghdr_gtp_auto[GTP_CMD_GETPDP, gtp_genl_policy$auto_gtp]], f flags[send_flags]) (automatic)
sendmsg$auto_GTP_CMD_NEWPDP(fd sock_nl_generic, msg ptr[in, msghdr_gtp_auto[GTP_CMD_NEWPDP, gtp_genl_policy$auto_gtp]], f flags[send_flags]) (automatic)
sendmsg$auto_HANDSHAKE_CMD_ACCEPT(fd sock_nl_generic, msg ptr[in, msghdr_handshake_auto[HANDSHAKE_CMD_ACCEPT, handshake_accept_nl_policy$auto_genl]], f flags[send_flags]) (automatic)
sendmsg$auto_HANDSHAKE_CMD_DONE(fd sock_nl_generic, msg ptr[in, msghdr_handshake_auto[HANDSHAKE_CMD_DONE, handshake_done_nl_policy$auto_genl]], f flags[send_flags]) (automatic)
sendmsg$auto_HSR_C_GET_NODE_LIST(fd sock_nl_generic, msg ptr[in, msghdr_HSR_auto[HSR_C_GET_NODE_LIST, hsr_genl_policy$auto_hsr_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_HSR_C_GET_NODE_STATUS(fd sock_nl_generic, msg ptr[in, msghdr_HSR_auto[HSR_C_GET_NODE_STATUS, hsr_genl_policy$auto_hsr_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_HWSIM_CMD_DEL_RADIO(fd sock_nl_generic, msg ptr[in, msghdr_MAC80211_HWSIM_auto[HWSIM_CMD_DEL_RADIO, hwsim_genl_policy$auto_mac80211_hwsim]], f flags[send_flags]) (automatic)
sendmsg$auto_HWSIM_CMD_FRAME(fd sock_nl_generic, msg ptr[in, msghdr_MAC80211_HWSIM_auto[HWSIM_CMD_FRAME, hwsim_genl_policy$auto_mac80211_hwsim]], f flags[send_flags]) (automatic)
sendmsg$auto_HWSIM_CMD_GET_RADIO(fd sock_nl_generic, msg ptr[in, msghdr_MAC80211_HWSIM_auto[HWSIM_CMD_GET_RADIO, hwsim_genl_policy$auto_mac80211_hwsim]], f flags[send_flags]) (automatic)
sendmsg$auto_HWSIM_CMD_NEW_RADIO(fd sock_nl_generic, msg ptr[in, msghdr_MAC80211_HWSIM_auto[HWSIM_CMD_NEW_RADIO, hwsim_genl_policy$auto_mac80211_hwsim]], f flags[send_flags]) (automatic)
sendmsg$auto_HWSIM_CMD_REGISTER(fd sock_nl_generic, msg ptr[in, msghdr_MAC80211_HWSIM_auto[HWSIM_CMD_REGISTER, hwsim_genl_policy$auto_mac80211_hwsim]], f flags[send_flags]) (automatic)
sendmsg$auto_HWSIM_CMD_REPORT_PMSR(fd sock_nl_generic, msg ptr[in, msghdr_MAC80211_HWSIM_auto[HWSIM_CMD_REPORT_PMSR, hwsim_genl_policy$auto_mac80211_hwsim]], f flags[send_flags]) (automatic)
sendmsg$auto_HWSIM_CMD_TX_INFO_FRAME(fd sock_nl_generic, msg ptr[in, msghdr_MAC80211_HWSIM_auto[HWSIM_CMD_TX_INFO_FRAME, hwsim_genl_policy$auto_mac80211_hwsim]], f flags[send_flags]) (automatic)
sendmsg$auto_IEEE802154_ADD_IFACE(fd sock_nl_generic, msg ptr[in, msghdr_802_15_4_MAC_auto[IEEE802154_ADD_IFACE, ieee802154_policy$auto_nl802154]], f flags[send_flags]) (automatic)
sendmsg$auto_IEEE802154_ASSOCIATE_REQ(fd sock_nl_generic, msg ptr[in, msghdr_802_15_4_MAC_auto[IEEE802154_ASSOCIATE_REQ, ieee802154_policy$auto_nl802154]], f flags[send_flags]) (automatic)
sendmsg$auto_IEEE802154_ASSOCIATE_RESP(fd sock_nl_generic, msg ptr[in, msghdr_802_15_4_MAC_auto[IEEE802154_ASSOCIATE_RESP, ieee802154_policy$auto_nl802154]], f flags[send_flags]) (automatic)
sendmsg$auto_IEEE802154_DEL_IFACE(fd sock_nl_generic, msg ptr[in, msghdr_802_15_4_MAC_auto[IEEE802154_DEL_IFACE, ieee802154_policy$auto_nl802154]], f flags[send_flags]) (automatic)
sendmsg$auto_IEEE802154_DISASSOCIATE_REQ(fd sock_nl_generic, msg ptr[in, msghdr_802_15_4_MAC_auto[IEEE802154_DISASSOCIATE_REQ, ieee802154_policy$auto_nl802154]], f flags[send_flags]) (automatic)
sendmsg$auto_IEEE802154_LIST_IFACE(fd sock_nl_generic, msg ptr[in, msghdr_802_15_4_MAC_auto[IEEE802154_LIST_IFACE, ieee802154_policy$auto_nl802154]], f flags[send_flags]) (automatic)
sendmsg$auto_IEEE802154_LIST_PHY(fd sock_nl_generic, msg ptr[in, msghdr_802_15_4_MAC_auto[IEEE802154_LIST_PHY, ieee802154_policy$auto_nl802154]], f flags[send_flags]) (automatic)
sendmsg$auto_IEEE802154_LLSEC_ADD_DEV(fd sock_nl_generic, msg ptr[in, msghdr_802_15_4_MAC_auto[IEEE802154_LLSEC_ADD_DEV, ieee802154_policy$auto_nl802154]], f flags[send_flags]) (automatic)
sendmsg$auto_IEEE802154_LLSEC_ADD_DEVKEY(fd sock_nl_generic, msg ptr[in, msghdr_802_15_4_MAC_auto[IEEE802154_LLSEC_ADD_DEVKEY, ieee802154_policy$auto_nl802154]], f flags[send_flags]) (automatic)
sendmsg$auto_IEEE802154_LLSEC_ADD_KEY(fd sock_nl_generic, msg ptr[in, msghdr_802_15_4_MAC_auto[IEEE802154_LLSEC_ADD_KEY, ieee802154_policy$auto_nl802154]], f flags[send_flags]) (automatic)
sendmsg$auto_IEEE802154_LLSEC_ADD_SECLEVEL(fd sock_nl_generic, msg ptr[in, msghdr_802_15_4_MAC_auto[IEEE802154_LLSEC_ADD_SECLEVEL, ieee802154_policy$auto_nl802154]], f flags[send_flags]) (automatic)
sendmsg$auto_IEEE802154_LLSEC_DEL_DEV(fd sock_nl_generic, msg ptr[in, msghdr_802_15_4_MAC_auto[IEEE802154_LLSEC_DEL_DEV, ieee802154_policy$auto_nl802154]], f flags[send_flags]) (automatic)
sendmsg$auto_IEEE802154_LLSEC_DEL_DEVKEY(fd sock_nl_generic, msg ptr[in, msghdr_802_15_4_MAC_auto[IEEE802154_LLSEC_DEL_DEVKEY, ieee802154_policy$auto_nl802154]], f flags[send_flags]) (automatic)
sendmsg$auto_IEEE802154_LLSEC_DEL_KEY(fd sock_nl_generic, msg ptr[in, msghdr_802_15_4_MAC_auto[IEEE802154_LLSEC_DEL_KEY, ieee802154_policy$auto_nl802154]], f flags[send_flags]) (automatic)
sendmsg$auto_IEEE802154_LLSEC_DEL_SECLEVEL(fd sock_nl_generic, msg ptr[in, msghdr_802_15_4_MAC_auto[IEEE802154_LLSEC_DEL_SECLEVEL, ieee802154_policy$auto_nl802154]], f flags[send_flags]) (automatic)
sendmsg$auto_IEEE802154_LLSEC_GETPARAMS(fd sock_nl_generic, msg ptr[in, msghdr_802_15_4_MAC_auto[IEEE802154_LLSEC_GETPARAMS, ieee802154_policy$auto_nl802154]], f flags[send_flags]) (automatic)
sendmsg$auto_IEEE802154_LLSEC_LIST_DEV(fd sock_nl_generic, msg ptr[in, msghdr_802_15_4_MAC_auto[IEEE802154_LLSEC_LIST_DEV, ieee802154_policy$auto_nl802154]], f flags[send_flags]) (automatic)
sendmsg$auto_IEEE802154_LLSEC_LIST_DEVKEY(fd sock_nl_generic, msg ptr[in, msghdr_802_15_4_MAC_auto[IEEE802154_LLSEC_LIST_DEVKEY, ieee802154_policy$auto_nl802154]], f flags[send_flags]) (automatic)
sendmsg$auto_IEEE802154_LLSEC_LIST_KEY(fd sock_nl_generic, msg ptr[in, msghdr_802_15_4_MAC_auto[IEEE802154_LLSEC_LIST_KEY, ieee802154_policy$auto_nl802154]], f flags[send_flags]) (automatic)
sendmsg$auto_IEEE802154_LLSEC_LIST_SECLEVEL(fd sock_nl_generic, msg ptr[in, msghdr_802_15_4_MAC_auto[IEEE802154_LLSEC_LIST_SECLEVEL, ieee802154_policy$auto_nl802154]], f flags[send_flags]) (automatic)
sendmsg$auto_IEEE802154_LLSEC_SETPARAMS(fd sock_nl_generic, msg ptr[in, msghdr_802_15_4_MAC_auto[IEEE802154_LLSEC_SETPARAMS, ieee802154_policy$auto_nl802154]], f flags[send_flags]) (automatic)
sendmsg$auto_IEEE802154_SCAN_REQ(fd sock_nl_generic, msg ptr[in, msghdr_802_15_4_MAC_auto[IEEE802154_SCAN_REQ, ieee802154_policy$auto_nl802154]], f flags[send_flags]) (automatic)
sendmsg$auto_IEEE802154_SET_MACPARAMS(fd sock_nl_generic, msg ptr[in, msghdr_802_15_4_MAC_auto[IEEE802154_SET_MACPARAMS, ieee802154_policy$auto_nl802154]], f flags[send_flags]) (automatic)
sendmsg$auto_IEEE802154_START_REQ(fd sock_nl_generic, msg ptr[in, msghdr_802_15_4_MAC_auto[IEEE802154_START_REQ, ieee802154_policy$auto_nl802154]], f flags[send_flags]) (automatic)
sendmsg$auto_ILA_CMD_ADD(fd sock_nl_generic, msg ptr[in, msghdr_ila_auto[ILA_CMD_ADD, ila_nl_policy$auto_ila_main]], f flags[send_flags]) (automatic)
sendmsg$auto_ILA_CMD_DEL(fd sock_nl_generic, msg ptr[in, msghdr_ila_auto[ILA_CMD_DEL, ila_nl_policy$auto_ila_main]], f flags[send_flags]) (automatic)
sendmsg$auto_ILA_CMD_FLUSH(fd sock_nl_generic, msg ptr[in, msghdr_ila_auto[ILA_CMD_FLUSH, ila_nl_policy$auto_ila_main]], f flags[send_flags]) (automatic)
sendmsg$auto_ILA_CMD_GET(fd sock_nl_generic, msg ptr[in, msghdr_ila_auto[ILA_CMD_GET, ila_nl_policy$auto_ila_main]], f flags[send_flags]) (automatic)
sendmsg$auto_IOAM6_CMD_ADD_NAMESPACE(fd sock_nl_generic, msg ptr[in, msghdr_IOAM6_auto[IOAM6_CMD_ADD_NAMESPACE, ioam6_genl_policy_addns$auto_ioam6]], f flags[send_flags]) (automatic)
sendmsg$auto_IOAM6_CMD_ADD_SCHEMA(fd sock_nl_generic, msg ptr[in, msghdr_IOAM6_auto[IOAM6_CMD_ADD_SCHEMA, ioam6_genl_policy_addsc$auto_ioam6]], f flags[send_flags]) (automatic)
sendmsg$auto_IOAM6_CMD_DEL_NAMESPACE(fd sock_nl_generic, msg ptr[in, msghdr_IOAM6_auto[IOAM6_CMD_DEL_NAMESPACE, ioam6_genl_policy_delns$auto_ioam6]], f flags[send_flags]) (automatic)
sendmsg$auto_IOAM6_CMD_DEL_SCHEMA(fd sock_nl_generic, msg ptr[in, msghdr_IOAM6_auto[IOAM6_CMD_DEL_SCHEMA, ioam6_genl_policy_delsc$auto_ioam6]], f flags[send_flags]) (automatic)
sendmsg$auto_IOAM6_CMD_NS_SET_SCHEMA(fd sock_nl_generic, msg ptr[in, msghdr_IOAM6_auto[IOAM6_CMD_NS_SET_SCHEMA, ioam6_genl_policy_ns_sc$auto_ioam6]], f flags[send_flags]) (automatic)
sendmsg$auto_IPVS_CMD_DEL_DAEMON(fd sock_nl_generic, msg ptr[in, msghdr_IPVS_auto[IPVS_CMD_DEL_DAEMON, ip_vs_cmd_policy$auto_ip_vs_ctl]], f flags[send_flags]) (automatic)
sendmsg$auto_IPVS_CMD_DEL_DEST(fd sock_nl_generic, msg ptr[in, msghdr_IPVS_auto[IPVS_CMD_DEL_DEST, ip_vs_cmd_policy$auto_ip_vs_ctl]], f flags[send_flags]) (automatic)
sendmsg$auto_IPVS_CMD_DEL_SERVICE(fd sock_nl_generic, msg ptr[in, msghdr_IPVS_auto[IPVS_CMD_DEL_SERVICE, ip_vs_cmd_policy$auto_ip_vs_ctl]], f flags[send_flags]) (automatic)
sendmsg$auto_IPVS_CMD_FLUSH(fd sock_nl_generic, msg ptr[in, msghdr_IPVS_auto[IPVS_CMD_FLUSH, ip_vs_cmd_policy$auto_ip_vs_ctl]], f flags[send_flags]) (automatic)
sendmsg$auto_IPVS_CMD_GET_CONFIG(fd sock_nl_generic, msg ptr[in, msghdr_IPVS_auto[IPVS_CMD_GET_CONFIG, ip_vs_cmd_policy$auto_ip_vs_ctl]], f flags[send_flags]) (automatic)
sendmsg$auto_IPVS_CMD_GET_DAEMON(fd sock_nl_generic, msg ptr[in, msghdr_IPVS_auto[IPVS_CMD_GET_DAEMON, ip_vs_cmd_policy$auto_ip_vs_ctl]], f flags[send_flags]) (automatic)
sendmsg$auto_IPVS_CMD_GET_DEST(fd sock_nl_generic, msg ptr[in, msghdr_IPVS_auto[IPVS_CMD_GET_DEST, ip_vs_cmd_policy$auto_ip_vs_ctl]], f flags[send_flags]) (automatic)
sendmsg$auto_IPVS_CMD_GET_INFO(fd sock_nl_generic, msg ptr[in, msghdr_IPVS_auto[IPVS_CMD_GET_INFO, ip_vs_cmd_policy$auto_ip_vs_ctl]], f flags[send_flags]) (automatic)
sendmsg$auto_IPVS_CMD_GET_SERVICE(fd sock_nl_generic, msg ptr[in, msghdr_IPVS_auto[IPVS_CMD_GET_SERVICE, ip_vs_cmd_policy$auto_ip_vs_ctl]], f flags[send_flags]) (automatic)
sendmsg$auto_IPVS_CMD_NEW_DAEMON(fd sock_nl_generic, msg ptr[in, msghdr_IPVS_auto[IPVS_CMD_NEW_DAEMON, ip_vs_cmd_policy$auto_ip_vs_ctl]], f flags[send_flags]) (automatic)
sendmsg$auto_IPVS_CMD_NEW_DEST(fd sock_nl_generic, msg ptr[in, msghdr_IPVS_auto[IPVS_CMD_NEW_DEST, ip_vs_cmd_policy$auto_ip_vs_ctl]], f flags[send_flags]) (automatic)
sendmsg$auto_IPVS_CMD_NEW_SERVICE(fd sock_nl_generic, msg ptr[in, msghdr_IPVS_auto[IPVS_CMD_NEW_SERVICE, ip_vs_cmd_policy$auto_ip_vs_ctl]], f flags[send_flags]) (automatic)
sendmsg$auto_IPVS_CMD_SET_CONFIG(fd sock_nl_generic, msg ptr[in, msghdr_IPVS_auto[IPVS_CMD_SET_CONFIG, ip_vs_cmd_policy$auto_ip_vs_ctl]], f flags[send_flags]) (automatic)
sendmsg$auto_IPVS_CMD_SET_DEST(fd sock_nl_generic, msg ptr[in, msghdr_IPVS_auto[IPVS_CMD_SET_DEST, ip_vs_cmd_policy$auto_ip_vs_ctl]], f flags[send_flags]) (automatic)
sendmsg$auto_IPVS_CMD_SET_SERVICE(fd sock_nl_generic, msg ptr[in, msghdr_IPVS_auto[IPVS_CMD_SET_SERVICE, ip_vs_cmd_policy$auto_ip_vs_ctl]], f flags[send_flags]) (automatic)
sendmsg$auto_IPVS_CMD_ZERO(fd sock_nl_generic, msg ptr[in, msghdr_IPVS_auto[IPVS_CMD_ZERO, ip_vs_cmd_policy$auto_ip_vs_ctl]], f flags[send_flags]) (automatic)
sendmsg$auto_L2TP_CMD_NOOP(fd sock_nl_generic, msg ptr[in, msghdr_l2tp_auto[L2TP_CMD_NOOP, l2tp_nl_policy$auto_l2tp_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_L2TP_CMD_SESSION_CREATE(fd sock_nl_generic, msg ptr[in, msghdr_l2tp_auto[L2TP_CMD_SESSION_CREATE, l2tp_nl_policy$auto_l2tp_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_L2TP_CMD_SESSION_DELETE(fd sock_nl_generic, msg ptr[in, msghdr_l2tp_auto[L2TP_CMD_SESSION_DELETE, l2tp_nl_policy$auto_l2tp_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_L2TP_CMD_SESSION_GET(fd sock_nl_generic, msg ptr[in, msghdr_l2tp_auto[L2TP_CMD_SESSION_GET, l2tp_nl_policy$auto_l2tp_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_L2TP_CMD_SESSION_MODIFY(fd sock_nl_generic, msg ptr[in, msghdr_l2tp_auto[L2TP_CMD_SESSION_MODIFY, l2tp_nl_policy$auto_l2tp_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_L2TP_CMD_TUNNEL_CREATE(fd sock_nl_generic, msg ptr[in, msghdr_l2tp_auto[L2TP_CMD_TUNNEL_CREATE, l2tp_nl_policy$auto_l2tp_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_L2TP_CMD_TUNNEL_DELETE(fd sock_nl_generic, msg ptr[in, msghdr_l2tp_auto[L2TP_CMD_TUNNEL_DELETE, l2tp_nl_policy$auto_l2tp_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_L2TP_CMD_TUNNEL_GET(fd sock_nl_generic, msg ptr[in, msghdr_l2tp_auto[L2TP_CMD_TUNNEL_GET, l2tp_nl_policy$auto_l2tp_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_L2TP_CMD_TUNNEL_MODIFY(fd sock_nl_generic, msg ptr[in, msghdr_l2tp_auto[L2TP_CMD_TUNNEL_MODIFY, l2tp_nl_policy$auto_l2tp_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_MAC802154_HWSIM_CMD_DEL_EDGE(fd sock_nl_generic, msg ptr[in, msghdr_MAC802154_HWSIM_auto[MAC802154_HWSIM_CMD_DEL_EDGE, hwsim_genl_policy$auto_mac802154_hwsim]], f flags[send_flags]) (automatic)
sendmsg$auto_MAC802154_HWSIM_CMD_DEL_RADIO(fd sock_nl_generic, msg ptr[in, msghdr_MAC802154_HWSIM_auto[MAC802154_HWSIM_CMD_DEL_RADIO, hwsim_genl_policy$auto_mac802154_hwsim]], f flags[send_flags]) (automatic)
sendmsg$auto_MAC802154_HWSIM_CMD_GET_RADIO(fd sock_nl_generic, msg ptr[in, msghdr_MAC802154_HWSIM_auto[MAC802154_HWSIM_CMD_GET_RADIO, hwsim_genl_policy$auto_mac802154_hwsim]], f flags[send_flags]) (automatic)
sendmsg$auto_MAC802154_HWSIM_CMD_NEW_EDGE(fd sock_nl_generic, msg ptr[in, msghdr_MAC802154_HWSIM_auto[MAC802154_HWSIM_CMD_NEW_EDGE, hwsim_genl_policy$auto_mac802154_hwsim]], f flags[send_flags]) (automatic)
sendmsg$auto_MAC802154_HWSIM_CMD_NEW_RADIO(fd sock_nl_generic, msg ptr[in, msghdr_MAC802154_HWSIM_auto[MAC802154_HWSIM_CMD_NEW_RADIO, hwsim_genl_policy$auto_mac802154_hwsim]], f flags[send_flags]) (automatic)
sendmsg$auto_MAC802154_HWSIM_CMD_SET_EDGE(fd sock_nl_generic, msg ptr[in, msghdr_MAC802154_HWSIM_auto[MAC802154_HWSIM_CMD_SET_EDGE, hwsim_genl_policy$auto_mac802154_hwsim]], f flags[send_flags]) (automatic)
sendmsg$auto_MACSEC_CMD_ADD_RXSA(fd sock_nl_generic, msg ptr[in, msghdr_macsec_auto[MACSEC_CMD_ADD_RXSA, macsec_genl_policy$auto_macsec]], f flags[send_flags]) (automatic)
sendmsg$auto_MACSEC_CMD_ADD_RXSC(fd sock_nl_generic, msg ptr[in, msghdr_macsec_auto[MACSEC_CMD_ADD_RXSC, macsec_genl_policy$auto_macsec]], f flags[send_flags]) (automatic)
sendmsg$auto_MACSEC_CMD_ADD_TXSA(fd sock_nl_generic, msg ptr[in, msghdr_macsec_auto[MACSEC_CMD_ADD_TXSA, macsec_genl_policy$auto_macsec]], f flags[send_flags]) (automatic)
sendmsg$auto_MACSEC_CMD_DEL_RXSA(fd sock_nl_generic, msg ptr[in, msghdr_macsec_auto[MACSEC_CMD_DEL_RXSA, macsec_genl_policy$auto_macsec]], f flags[send_flags]) (automatic)
sendmsg$auto_MACSEC_CMD_DEL_RXSC(fd sock_nl_generic, msg ptr[in, msghdr_macsec_auto[MACSEC_CMD_DEL_RXSC, macsec_genl_policy$auto_macsec]], f flags[send_flags]) (automatic)
sendmsg$auto_MACSEC_CMD_DEL_TXSA(fd sock_nl_generic, msg ptr[in, msghdr_macsec_auto[MACSEC_CMD_DEL_TXSA, macsec_genl_policy$auto_macsec]], f flags[send_flags]) (automatic)
sendmsg$auto_MACSEC_CMD_GET_TXSC(fd sock_nl_generic, msg ptr[in, msghdr_macsec_auto[MACSEC_CMD_GET_TXSC, macsec_genl_policy$auto_macsec]], f flags[send_flags]) (automatic)
sendmsg$auto_MACSEC_CMD_UPD_OFFLOAD(fd sock_nl_generic, msg ptr[in, msghdr_macsec_auto[MACSEC_CMD_UPD_OFFLOAD, macsec_genl_policy$auto_macsec]], f flags[send_flags]) (automatic)
sendmsg$auto_MACSEC_CMD_UPD_RXSA(fd sock_nl_generic, msg ptr[in, msghdr_macsec_auto[MACSEC_CMD_UPD_RXSA, macsec_genl_policy$auto_macsec]], f flags[send_flags]) (automatic)
sendmsg$auto_MACSEC_CMD_UPD_RXSC(fd sock_nl_generic, msg ptr[in, msghdr_macsec_auto[MACSEC_CMD_UPD_RXSC, macsec_genl_policy$auto_macsec]], f flags[send_flags]) (automatic)
sendmsg$auto_MACSEC_CMD_UPD_TXSA(fd sock_nl_generic, msg ptr[in, msghdr_macsec_auto[MACSEC_CMD_UPD_TXSA, macsec_genl_policy$auto_macsec]], f flags[send_flags]) (automatic)
sendmsg$auto_NBD_CMD_CONNECT(fd sock_nl_generic, msg ptr[in, msghdr_nbd_auto[NBD_CMD_CONNECT, nbd_attr_policy$auto_nbd]], f flags[send_flags]) (automatic)
sendmsg$auto_NBD_CMD_DISCONNECT(fd sock_nl_generic, msg ptr[in, msghdr_nbd_auto[NBD_CMD_DISCONNECT, nbd_attr_policy$auto_nbd]], f flags[send_flags]) (automatic)
sendmsg$auto_NBD_CMD_RECONFIGURE(fd sock_nl_generic, msg ptr[in, msghdr_nbd_auto[NBD_CMD_RECONFIGURE, nbd_attr_policy$auto_nbd]], f flags[send_flags]) (automatic)
sendmsg$auto_NBD_CMD_STATUS(fd sock_nl_generic, msg ptr[in, msghdr_nbd_auto[NBD_CMD_STATUS, nbd_attr_policy$auto_nbd]], f flags[send_flags]) (automatic)
sendmsg$auto_NCSI_CMD_CLEAR_INTERFACE(fd sock_nl_generic, msg ptr[in, msghdr_NCSI_auto[NCSI_CMD_CLEAR_INTERFACE, ncsi_genl_policy$auto_ncsi_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_NCSI_CMD_PKG_INFO(fd sock_nl_generic, msg ptr[in, msghdr_NCSI_auto[NCSI_CMD_PKG_INFO, ncsi_genl_policy$auto_ncsi_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_NCSI_CMD_SEND_CMD(fd sock_nl_generic, msg ptr[in, msghdr_NCSI_auto[NCSI_CMD_SEND_CMD, ncsi_genl_policy$auto_ncsi_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_NCSI_CMD_SET_CHANNEL_MASK(fd sock_nl_generic, msg ptr[in, msghdr_NCSI_auto[NCSI_CMD_SET_CHANNEL_MASK, ncsi_genl_policy$auto_ncsi_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_NCSI_CMD_SET_INTERFACE(fd sock_nl_generic, msg ptr[in, msghdr_NCSI_auto[NCSI_CMD_SET_INTERFACE, ncsi_genl_policy$auto_ncsi_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_NCSI_CMD_SET_PACKAGE_MASK(fd sock_nl_generic, msg ptr[in, msghdr_NCSI_auto[NCSI_CMD_SET_PACKAGE_MASK, ncsi_genl_policy$auto_ncsi_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_NETDEV_CMD_BIND_RX(fd sock_nl_generic, msg ptr[in, msghdr_netdev_auto[NETDEV_CMD_BIND_RX, netdev_bind_rx_nl_policy$auto_netdev_genl_gen]], f flags[send_flags]) (automatic)
sendmsg$auto_NETDEV_CMD_DEV_GET(fd sock_nl_generic, msg ptr[in, msghdr_netdev_auto[NETDEV_CMD_DEV_GET, netdev_dev_get_nl_policy$auto_netdev_genl_gen]], f flags[send_flags]) (automatic)
sendmsg$auto_NETDEV_CMD_NAPI_GET(fd sock_nl_generic, msg ptr[in, msghdr_netdev_auto[NETDEV_CMD_NAPI_GET, netdev_napi_get_do_nl_policy$auto_netdev_genl_gen]], f flags[send_flags]) (automatic)
sendmsg$auto_NETDEV_CMD_NAPI_GET0(fd sock_nl_generic, msg ptr[in, msghdr_netdev_auto[NETDEV_CMD_NAPI_GET, netdev_napi_get_dump_nl_policy$auto_netdev_genl_gen]], f flags[send_flags]) (automatic)
sendmsg$auto_NETDEV_CMD_PAGE_POOL_GET(fd sock_nl_generic, msg ptr[in, msghdr_netdev_auto[NETDEV_CMD_PAGE_POOL_GET, netdev_page_pool_get_nl_policy$auto_netdev_genl_gen]], f flags[send_flags]) (automatic)
sendmsg$auto_NETDEV_CMD_QSTATS_GET(fd sock_nl_generic, msg ptr[in, msghdr_netdev_auto[NETDEV_CMD_QSTATS_GET, netdev_qstats_get_nl_policy$auto_netdev_genl_gen]], f flags[send_flags]) (automatic)
sendmsg$auto_NETDEV_CMD_QUEUE_GET(fd sock_nl_generic, msg ptr[in, msghdr_netdev_auto[NETDEV_CMD_QUEUE_GET, netdev_queue_get_do_nl_policy$auto_netdev_genl_gen]], f flags[send_flags]) (automatic)
sendmsg$auto_NETDEV_CMD_QUEUE_GET0(fd sock_nl_generic, msg ptr[in, msghdr_netdev_auto[NETDEV_CMD_QUEUE_GET, netdev_queue_get_dump_nl_policy$auto_netdev_genl_gen]], f flags[send_flags]) (automatic)
sendmsg$auto_NET_DM_CMD_CONFIG(fd sock_nl_generic, msg ptr[in, msghdr_NET_DM_auto[NET_DM_CMD_CONFIG, net_dm_nl_policy$auto_drop_monitor]], f flags[send_flags]) (automatic)
sendmsg$auto_NET_DM_CMD_CONFIG_GET(fd sock_nl_generic, msg ptr[in, msghdr_NET_DM_auto[NET_DM_CMD_CONFIG_GET, net_dm_nl_policy$auto_drop_monitor]], f flags[send_flags]) (automatic)
sendmsg$auto_NET_DM_CMD_START(fd sock_nl_generic, msg ptr[in, msghdr_NET_DM_auto[NET_DM_CMD_START, net_dm_nl_policy$auto_drop_monitor]], f flags[send_flags]) (automatic)
sendmsg$auto_NET_DM_CMD_STATS_GET(fd sock_nl_generic, msg ptr[in, msghdr_NET_DM_auto[NET_DM_CMD_STATS_GET, net_dm_nl_policy$auto_drop_monitor]], f flags[send_flags]) (automatic)
sendmsg$auto_NET_DM_CMD_STOP(fd sock_nl_generic, msg ptr[in, msghdr_NET_DM_auto[NET_DM_CMD_STOP, net_dm_nl_policy$auto_drop_monitor]], f flags[send_flags]) (automatic)
sendmsg$auto_NFC_CMD_ACTIVATE_TARGET(fd sock_nl_generic, msg ptr[in, msghdr_nfc_auto[NFC_CMD_ACTIVATE_TARGET, nfc_genl_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_NFC_CMD_DEACTIVATE_TARGET(fd sock_nl_generic, msg ptr[in, msghdr_nfc_auto[NFC_CMD_DEACTIVATE_TARGET, nfc_genl_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_NFC_CMD_DEP_LINK_DOWN(fd sock_nl_generic, msg ptr[in, msghdr_nfc_auto[NFC_CMD_DEP_LINK_DOWN, nfc_genl_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_NFC_CMD_DEP_LINK_UP(fd sock_nl_generic, msg ptr[in, msghdr_nfc_auto[NFC_CMD_DEP_LINK_UP, nfc_genl_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_NFC_CMD_DEV_DOWN(fd sock_nl_generic, msg ptr[in, msghdr_nfc_auto[NFC_CMD_DEV_DOWN, nfc_genl_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_NFC_CMD_DEV_UP(fd sock_nl_generic, msg ptr[in, msghdr_nfc_auto[NFC_CMD_DEV_UP, nfc_genl_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_NFC_CMD_DISABLE_SE(fd sock_nl_generic, msg ptr[in, msghdr_nfc_auto[NFC_CMD_DISABLE_SE, nfc_genl_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_NFC_CMD_ENABLE_SE(fd sock_nl_generic, msg ptr[in, msghdr_nfc_auto[NFC_CMD_ENABLE_SE, nfc_genl_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_NFC_CMD_FW_DOWNLOAD(fd sock_nl_generic, msg ptr[in, msghdr_nfc_auto[NFC_CMD_FW_DOWNLOAD, nfc_genl_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_NFC_CMD_GET_DEVICE(fd sock_nl_generic, msg ptr[in, msghdr_nfc_auto[NFC_CMD_GET_DEVICE, nfc_genl_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_NFC_CMD_GET_SE(fd sock_nl_generic, msg ptr[in, msghdr_nfc_auto[NFC_CMD_GET_SE, nfc_genl_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_NFC_CMD_GET_TARGET(fd sock_nl_generic, msg ptr[in, msghdr_nfc_auto[NFC_CMD_GET_TARGET, nfc_genl_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_NFC_CMD_LLC_GET_PARAMS(fd sock_nl_generic, msg ptr[in, msghdr_nfc_auto[NFC_CMD_LLC_GET_PARAMS, nfc_genl_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_NFC_CMD_LLC_SDREQ(fd sock_nl_generic, msg ptr[in, msghdr_nfc_auto[NFC_CMD_LLC_SDREQ, nfc_genl_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_NFC_CMD_LLC_SET_PARAMS(fd sock_nl_generic, msg ptr[in, msghdr_nfc_auto[NFC_CMD_LLC_SET_PARAMS, nfc_genl_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_NFC_CMD_SE_IO(fd sock_nl_generic, msg ptr[in, msghdr_nfc_auto[NFC_CMD_SE_IO, nfc_genl_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_NFC_CMD_START_POLL(fd sock_nl_generic, msg ptr[in, msghdr_nfc_auto[NFC_CMD_START_POLL, nfc_genl_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_NFC_CMD_STOP_POLL(fd sock_nl_generic, msg ptr[in, msghdr_nfc_auto[NFC_CMD_STOP_POLL, nfc_genl_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_NFC_CMD_VENDOR(fd sock_nl_generic, msg ptr[in, msghdr_nfc_auto[NFC_CMD_VENDOR, nfc_genl_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_NFSD_CMD_LISTENER_SET(fd sock_nl_generic, msg ptr[in, msghdr_nfsd_auto[NFSD_CMD_LISTENER_SET, nfsd_listener_set_nl_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_NFSD_CMD_POOL_MODE_SET(fd sock_nl_generic, msg ptr[in, msghdr_nfsd_auto[NFSD_CMD_POOL_MODE_SET, nfsd_pool_mode_set_nl_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_NFSD_CMD_THREADS_SET(fd sock_nl_generic, msg ptr[in, msghdr_nfsd_auto[NFSD_CMD_THREADS_SET, nfsd_threads_set_nl_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_NFSD_CMD_VERSION_SET(fd sock_nl_generic, msg ptr[in, msghdr_nfsd_auto[NFSD_CMD_VERSION_SET, nfsd_version_set_nl_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_ABORT_SCAN(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_ABORT_SCAN, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_ADD_LINK(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_ADD_LINK, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_ADD_LINK_STA(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_ADD_LINK_STA, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_ADD_NAN_FUNCTION(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_ADD_NAN_FUNCTION, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_ADD_TX_TS(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_ADD_TX_TS, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_ASSOCIATE(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_ASSOCIATE, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_AUTHENTICATE(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_AUTHENTICATE, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_CANCEL_REMAIN_ON_CHANNEL(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_CANCEL_REMAIN_ON_CHANNEL, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_CHANGE_NAN_CONFIG(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_CHANGE_NAN_CONFIG, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_CHANNEL_SWITCH(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_CHANNEL_SWITCH, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_COLOR_CHANGE_REQUEST(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_COLOR_CHANGE_REQUEST, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_CONNECT(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_CONNECT, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_CONTROL_PORT_FRAME(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_CONTROL_PORT_FRAME, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_CRIT_PROTOCOL_START(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_CRIT_PROTOCOL_START, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_CRIT_PROTOCOL_STOP(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_CRIT_PROTOCOL_STOP, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_DEAUTHENTICATE(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_DEAUTHENTICATE, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_DEL_INTERFACE(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_DEL_INTERFACE, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_DEL_KEY(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_DEL_KEY, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_DEL_MPATH(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_DEL_MPATH, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_DEL_NAN_FUNCTION(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_DEL_NAN_FUNCTION, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_DEL_PMK(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_DEL_PMK, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_DEL_PMKSA(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_DEL_PMKSA, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_DEL_STATION(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_DEL_STATION, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_DEL_TX_TS(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_DEL_TX_TS, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_DISASSOCIATE(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_DISASSOCIATE, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_DISCONNECT(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_DISCONNECT, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_EXTERNAL_AUTH(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_EXTERNAL_AUTH, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_FLUSH_PMKSA(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_FLUSH_PMKSA, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_FRAME(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_FRAME, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_FRAME_WAIT_CANCEL(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_FRAME_WAIT_CANCEL, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_GET_COALESCE(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_GET_COALESCE, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_GET_FTM_RESPONDER_STATS(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_GET_FTM_RESPONDER_STATS, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_GET_INTERFACE(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_GET_INTERFACE, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_GET_KEY(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_GET_KEY, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_GET_MESH_CONFIG(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_GET_MESH_CONFIG, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_GET_MPATH(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_GET_MPATH, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_GET_MPP(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_GET_MPP, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_GET_POWER_SAVE(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_GET_POWER_SAVE, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_GET_PROTOCOL_FEATURES(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_GET_PROTOCOL_FEATURES, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_GET_REG(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_GET_REG, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_GET_SCAN(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_GET_SCAN, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_GET_STATION(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_GET_STATION, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_GET_SURVEY(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_GET_SURVEY, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_GET_WIPHY(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_GET_WIPHY, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_GET_WOWLAN(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_GET_WOWLAN, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_JOIN_IBSS(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_JOIN_IBSS, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_JOIN_MESH(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_JOIN_MESH, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_JOIN_OCB(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_JOIN_OCB, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_LEAVE_IBSS(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_LEAVE_IBSS, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_LEAVE_MESH(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_LEAVE_MESH, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_LEAVE_OCB(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_LEAVE_OCB, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_MODIFY_LINK_STA(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_MODIFY_LINK_STA, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_NEW_INTERFACE(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_NEW_INTERFACE, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_NEW_KEY(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_NEW_KEY, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_NEW_MPATH(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_NEW_MPATH, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_NEW_STATION(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_NEW_STATION, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_NOTIFY_RADAR(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_NOTIFY_RADAR, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_PEER_MEASUREMENT_START(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_PEER_MEASUREMENT_START, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_PROBE_CLIENT(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_PROBE_CLIENT, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_PROBE_MESH_LINK(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_PROBE_MESH_LINK, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_RADAR_DETECT(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_RADAR_DETECT, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_REGISTER_BEACONS(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_REGISTER_BEACONS, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_REGISTER_FRAME(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_REGISTER_FRAME, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_RELOAD_REGDB(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_RELOAD_REGDB, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_REMAIN_ON_CHANNEL(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_REMAIN_ON_CHANNEL, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_REMOVE_LINK(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_REMOVE_LINK, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_REMOVE_LINK_STA(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_REMOVE_LINK_STA, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_REQ_SET_REG(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_REQ_SET_REG, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_SET_BEACON(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_SET_BEACON, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_SET_BSS(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_SET_BSS, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_SET_CHANNEL(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_SET_CHANNEL, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_SET_COALESCE(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_SET_COALESCE, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_SET_CQM(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_SET_CQM, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_SET_FILS_AAD(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_SET_FILS_AAD, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_SET_HW_TIMESTAMP(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_SET_HW_TIMESTAMP, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_SET_INTERFACE(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_SET_INTERFACE, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_SET_KEY(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_SET_KEY, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_SET_MAC_ACL(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_SET_MAC_ACL, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_SET_MCAST_RATE(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_SET_MCAST_RATE, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_SET_MESH_CONFIG(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_SET_MESH_CONFIG, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_SET_MPATH(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_SET_MPATH, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_SET_MULTICAST_TO_UNICAST(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_SET_MULTICAST_TO_UNICAST, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_SET_NOACK_MAP(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_SET_NOACK_MAP, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_SET_PMK(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_SET_PMK, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_SET_PMKSA(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_SET_PMKSA, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_SET_POWER_SAVE(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_SET_POWER_SAVE, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_SET_QOS_MAP(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_SET_QOS_MAP, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_SET_REG(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_SET_REG, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_SET_REKEY_OFFLOAD(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_SET_REKEY_OFFLOAD, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_SET_SAR_SPECS(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_SET_SAR_SPECS, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_SET_STATION(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_SET_STATION, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_SET_TID_CONFIG(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_SET_TID_CONFIG, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_SET_TID_TO_LINK_MAPPING(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_SET_TID_TO_LINK_MAPPING, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_SET_TX_BITRATE_MASK(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_SET_TX_BITRATE_MASK, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_SET_WIPHY(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_SET_WIPHY, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_SET_WIPHY_NETNS(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_SET_WIPHY_NETNS, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_SET_WOWLAN(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_SET_WOWLAN, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_START_AP(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_START_AP, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_START_NAN(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_START_NAN, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_START_P2P_DEVICE(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_START_P2P_DEVICE, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_START_SCHED_SCAN(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_START_SCHED_SCAN, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_STOP_AP(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_STOP_AP, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_STOP_NAN(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_STOP_NAN, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_STOP_P2P_DEVICE(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_STOP_P2P_DEVICE, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_STOP_SCHED_SCAN(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_STOP_SCHED_SCAN, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_TDLS_CANCEL_CHANNEL_SWITCH(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_TDLS_CANCEL_CHANNEL_SWITCH, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_TDLS_CHANNEL_SWITCH(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_TDLS_CHANNEL_SWITCH, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_TDLS_MGMT(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_TDLS_MGMT, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_TDLS_OPER(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_TDLS_OPER, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_TRIGGER_SCAN(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_TRIGGER_SCAN, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_UNEXPECTED_FRAME(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_UNEXPECTED_FRAME, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_UPDATE_CONNECT_PARAMS(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_UPDATE_CONNECT_PARAMS, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_UPDATE_FT_IES(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_UPDATE_FT_IES, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_UPDATE_OWE_INFO(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_UPDATE_OWE_INFO, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_VENDOR(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_VENDOR, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL802154_CMD_ABORT_SCAN(fd sock_nl_generic, msg ptr[in, msghdr_nl802154_auto[NL802154_CMD_ABORT_SCAN, nl802154_policy$auto_nl802154]], f flags[send_flags]) (automatic)
sendmsg$auto_NL802154_CMD_ASSOCIATE(fd sock_nl_generic, msg ptr[in, msghdr_nl802154_auto[NL802154_CMD_ASSOCIATE, nl802154_policy$auto_nl802154]], f flags[send_flags]) (automatic)
sendmsg$auto_NL802154_CMD_DEL_INTERFACE(fd sock_nl_generic, msg ptr[in, msghdr_nl802154_auto[NL802154_CMD_DEL_INTERFACE, nl802154_policy$auto_nl802154]], f flags[send_flags]) (automatic)
sendmsg$auto_NL802154_CMD_DEL_SEC_DEV(fd sock_nl_generic, msg ptr[in, msghdr_nl802154_auto[NL802154_CMD_DEL_SEC_DEV, nl802154_policy$auto_nl802154]], f flags[send_flags]) (automatic)
sendmsg$auto_NL802154_CMD_DEL_SEC_DEVKEY(fd sock_nl_generic, msg ptr[in, msghdr_nl802154_auto[NL802154_CMD_DEL_SEC_DEVKEY, nl802154_policy$auto_nl802154]], f flags[send_flags]) (automatic)
sendmsg$auto_NL802154_CMD_DEL_SEC_KEY(fd sock_nl_generic, msg ptr[in, msghdr_nl802154_auto[NL802154_CMD_DEL_SEC_KEY, nl802154_policy$auto_nl802154]], f flags[send_flags]) (automatic)
sendmsg$auto_NL802154_CMD_DEL_SEC_LEVEL(fd sock_nl_generic, msg ptr[in, msghdr_nl802154_auto[NL802154_CMD_DEL_SEC_LEVEL, nl802154_policy$auto_nl802154]], f flags[send_flags]) (automatic)
sendmsg$auto_NL802154_CMD_DISASSOCIATE(fd sock_nl_generic, msg ptr[in, msghdr_nl802154_auto[NL802154_CMD_DISASSOCIATE, nl802154_policy$auto_nl802154]], f flags[send_flags]) (automatic)
sendmsg$auto_NL802154_CMD_GET_INTERFACE(fd sock_nl_generic, msg ptr[in, msghdr_nl802154_auto[NL802154_CMD_GET_INTERFACE, nl802154_policy$auto_nl802154]], f flags[send_flags]) (automatic)
sendmsg$auto_NL802154_CMD_GET_SEC_DEV(fd sock_nl_generic, msg ptr[in, msghdr_nl802154_auto[NL802154_CMD_GET_SEC_DEV, nl802154_policy$auto_nl802154]], f flags[send_flags]) (automatic)
sendmsg$auto_NL802154_CMD_GET_SEC_DEVKEY(fd sock_nl_generic, msg ptr[in, msghdr_nl802154_auto[NL802154_CMD_GET_SEC_DEVKEY, nl802154_policy$auto_nl802154]], f flags[send_flags]) (automatic)
sendmsg$auto_NL802154_CMD_GET_SEC_KEY(fd sock_nl_generic, msg ptr[in, msghdr_nl802154_auto[NL802154_CMD_GET_SEC_KEY, nl802154_policy$auto_nl802154]], f flags[send_flags]) (automatic)
sendmsg$auto_NL802154_CMD_GET_SEC_LEVEL(fd sock_nl_generic, msg ptr[in, msghdr_nl802154_auto[NL802154_CMD_GET_SEC_LEVEL, nl802154_policy$auto_nl802154]], f flags[send_flags]) (automatic)
sendmsg$auto_NL802154_CMD_GET_WPAN_PHY(fd sock_nl_generic, msg ptr[in, msghdr_nl802154_auto[NL802154_CMD_GET_WPAN_PHY, nl802154_policy$auto_nl802154]], f flags[send_flags]) (automatic)
sendmsg$auto_NL802154_CMD_LIST_ASSOCIATIONS(fd sock_nl_generic, msg ptr[in, msghdr_nl802154_auto[NL802154_CMD_LIST_ASSOCIATIONS, nl802154_policy$auto_nl802154]], f flags[send_flags]) (automatic)
sendmsg$auto_NL802154_CMD_NEW_INTERFACE(fd sock_nl_generic, msg ptr[in, msghdr_nl802154_auto[NL802154_CMD_NEW_INTERFACE, nl802154_policy$auto_nl802154]], f flags[send_flags]) (automatic)
sendmsg$auto_NL802154_CMD_NEW_SEC_DEV(fd sock_nl_generic, msg ptr[in, msghdr_nl802154_auto[NL802154_CMD_NEW_SEC_DEV, nl802154_policy$auto_nl802154]], f flags[send_flags]) (automatic)
sendmsg$auto_NL802154_CMD_NEW_SEC_DEVKEY(fd sock_nl_generic, msg ptr[in, msghdr_nl802154_auto[NL802154_CMD_NEW_SEC_DEVKEY, nl802154_policy$auto_nl802154]], f flags[send_flags]) (automatic)
sendmsg$auto_NL802154_CMD_NEW_SEC_KEY(fd sock_nl_generic, msg ptr[in, msghdr_nl802154_auto[NL802154_CMD_NEW_SEC_KEY, nl802154_policy$auto_nl802154]], f flags[send_flags]) (automatic)
sendmsg$auto_NL802154_CMD_NEW_SEC_LEVEL(fd sock_nl_generic, msg ptr[in, msghdr_nl802154_auto[NL802154_CMD_NEW_SEC_LEVEL, nl802154_policy$auto_nl802154]], f flags[send_flags]) (automatic)
sendmsg$auto_NL802154_CMD_SEND_BEACONS(fd sock_nl_generic, msg ptr[in, msghdr_nl802154_auto[NL802154_CMD_SEND_BEACONS, nl802154_policy$auto_nl802154]], f flags[send_flags]) (automatic)
sendmsg$auto_NL802154_CMD_SET_ACKREQ_DEFAULT(fd sock_nl_generic, msg ptr[in, msghdr_nl802154_auto[NL802154_CMD_SET_ACKREQ_DEFAULT, nl802154_policy$auto_nl802154]], f flags[send_flags]) (automatic)
sendmsg$auto_NL802154_CMD_SET_BACKOFF_EXPONENT(fd sock_nl_generic, msg ptr[in, msghdr_nl802154_auto[NL802154_CMD_SET_BACKOFF_EXPONENT, nl802154_policy$auto_nl802154]], f flags[send_flags]) (automatic)
sendmsg$auto_NL802154_CMD_SET_CCA_ED_LEVEL(fd sock_nl_generic, msg ptr[in, msghdr_nl802154_auto[NL802154_CMD_SET_CCA_ED_LEVEL, nl802154_policy$auto_nl802154]], f flags[send_flags]) (automatic)
sendmsg$auto_NL802154_CMD_SET_CCA_MODE(fd sock_nl_generic, msg ptr[in, msghdr_nl802154_auto[NL802154_CMD_SET_CCA_MODE, nl802154_policy$auto_nl802154]], f flags[send_flags]) (automatic)
sendmsg$auto_NL802154_CMD_SET_CHANNEL(fd sock_nl_generic, msg ptr[in, msghdr_nl802154_auto[NL802154_CMD_SET_CHANNEL, nl802154_policy$auto_nl802154]], f flags[send_flags]) (automatic)
sendmsg$auto_NL802154_CMD_SET_LBT_MODE(fd sock_nl_generic, msg ptr[in, msghdr_nl802154_auto[NL802154_CMD_SET_LBT_MODE, nl802154_policy$auto_nl802154]], f flags[send_flags]) (automatic)
sendmsg$auto_NL802154_CMD_SET_MAX_ASSOCIATIONS(fd sock_nl_generic, msg ptr[in, msghdr_nl802154_auto[NL802154_CMD_SET_MAX_ASSOCIATIONS, nl802154_policy$auto_nl802154]], f flags[send_flags]) (automatic)
sendmsg$auto_NL802154_CMD_SET_MAX_CSMA_BACKOFFS(fd sock_nl_generic, msg ptr[in, msghdr_nl802154_auto[NL802154_CMD_SET_MAX_CSMA_BACKOFFS, nl802154_policy$auto_nl802154]], f flags[send_flags]) (automatic)
sendmsg$auto_NL802154_CMD_SET_MAX_FRAME_RETRIES(fd sock_nl_generic, msg ptr[in, msghdr_nl802154_auto[NL802154_CMD_SET_MAX_FRAME_RETRIES, nl802154_policy$auto_nl802154]], f flags[send_flags]) (automatic)
sendmsg$auto_NL802154_CMD_SET_PAN_ID(fd sock_nl_generic, msg ptr[in, msghdr_nl802154_auto[NL802154_CMD_SET_PAN_ID, nl802154_policy$auto_nl802154]], f flags[send_flags]) (automatic)
sendmsg$auto_NL802154_CMD_SET_SEC_PARAMS(fd sock_nl_generic, msg ptr[in, msghdr_nl802154_auto[NL802154_CMD_SET_SEC_PARAMS, nl802154_policy$auto_nl802154]], f flags[send_flags]) (automatic)
sendmsg$auto_NL802154_CMD_SET_SHORT_ADDR(fd sock_nl_generic, msg ptr[in, msghdr_nl802154_auto[NL802154_CMD_SET_SHORT_ADDR, nl802154_policy$auto_nl802154]], f flags[send_flags]) (automatic)
sendmsg$auto_NL802154_CMD_SET_TX_POWER(fd sock_nl_generic, msg ptr[in, msghdr_nl802154_auto[NL802154_CMD_SET_TX_POWER, nl802154_policy$auto_nl802154]], f flags[send_flags]) (automatic)
sendmsg$auto_NL802154_CMD_SET_WPAN_PHY_NETNS(fd sock_nl_generic, msg ptr[in, msghdr_nl802154_auto[NL802154_CMD_SET_WPAN_PHY_NETNS, nl802154_policy$auto_nl802154]], f flags[send_flags]) (automatic)
sendmsg$auto_NL802154_CMD_STOP_BEACONS(fd sock_nl_generic, msg ptr[in, msghdr_nl802154_auto[NL802154_CMD_STOP_BEACONS, nl802154_policy$auto_nl802154]], f flags[send_flags]) (automatic)
sendmsg$auto_NL802154_CMD_TRIGGER_SCAN(fd sock_nl_generic, msg ptr[in, msghdr_nl802154_auto[NL802154_CMD_TRIGGER_SCAN, nl802154_policy$auto_nl802154]], f flags[send_flags]) (automatic)
sendmsg$auto_NLBL_CALIPSO_C_ADD(fd sock_nl_generic, msg ptr[in, msghdr_NLBL_CALIPSO_auto[NLBL_CALIPSO_C_ADD, calipso_genl_policy$auto_netlabel_calipso]], f flags[send_flags]) (automatic)
sendmsg$auto_NLBL_CALIPSO_C_LIST(fd sock_nl_generic, msg ptr[in, msghdr_NLBL_CALIPSO_auto[NLBL_CALIPSO_C_LIST, calipso_genl_policy$auto_netlabel_calipso]], f flags[send_flags]) (automatic)
sendmsg$auto_NLBL_CALIPSO_C_LISTALL(fd sock_nl_generic, msg ptr[in, msghdr_NLBL_CALIPSO_auto[NLBL_CALIPSO_C_LISTALL, calipso_genl_policy$auto_netlabel_calipso]], f flags[send_flags]) (automatic)
sendmsg$auto_NLBL_CALIPSO_C_REMOVE(fd sock_nl_generic, msg ptr[in, msghdr_NLBL_CALIPSO_auto[NLBL_CALIPSO_C_REMOVE, calipso_genl_policy$auto_netlabel_calipso]], f flags[send_flags]) (automatic)
sendmsg$auto_NLBL_CIPSOV4_C_ADD(fd sock_nl_generic, msg ptr[in, msghdr_NLBL_CIPSOv4_auto[NLBL_CIPSOV4_C_ADD, netlbl_cipsov4_genl_policy$auto_netlabel_cipso_v4]], f flags[send_flags]) (automatic)
sendmsg$auto_NLBL_CIPSOV4_C_LIST(fd sock_nl_generic, msg ptr[in, msghdr_NLBL_CIPSOv4_auto[NLBL_CIPSOV4_C_LIST, netlbl_cipsov4_genl_policy$auto_netlabel_cipso_v4]], f flags[send_flags]) (automatic)
sendmsg$auto_NLBL_CIPSOV4_C_LISTALL(fd sock_nl_generic, msg ptr[in, msghdr_NLBL_CIPSOv4_auto[NLBL_CIPSOV4_C_LISTALL, netlbl_cipsov4_genl_policy$auto_netlabel_cipso_v4]], f flags[send_flags]) (automatic)
sendmsg$auto_NLBL_CIPSOV4_C_REMOVE(fd sock_nl_generic, msg ptr[in, msghdr_NLBL_CIPSOv4_auto[NLBL_CIPSOV4_C_REMOVE, netlbl_cipsov4_genl_policy$auto_netlabel_cipso_v4]], f flags[send_flags]) (automatic)
sendmsg$auto_NLBL_MGMT_C_ADD(fd sock_nl_generic, msg ptr[in, msghdr_NLBL_MGMT_auto[NLBL_MGMT_C_ADD, netlbl_mgmt_genl_policy$auto_netlabel_mgmt]], f flags[send_flags]) (automatic)
sendmsg$auto_NLBL_MGMT_C_ADDDEF(fd sock_nl_generic, msg ptr[in, msghdr_NLBL_MGMT_auto[NLBL_MGMT_C_ADDDEF, netlbl_mgmt_genl_policy$auto_netlabel_mgmt]], f flags[send_flags]) (automatic)
sendmsg$auto_NLBL_MGMT_C_LISTALL(fd sock_nl_generic, msg ptr[in, msghdr_NLBL_MGMT_auto[NLBL_MGMT_C_LISTALL, netlbl_mgmt_genl_policy$auto_netlabel_mgmt]], f flags[send_flags]) (automatic)
sendmsg$auto_NLBL_MGMT_C_LISTDEF(fd sock_nl_generic, msg ptr[in, msghdr_NLBL_MGMT_auto[NLBL_MGMT_C_LISTDEF, netlbl_mgmt_genl_policy$auto_netlabel_mgmt]], f flags[send_flags]) (automatic)
sendmsg$auto_NLBL_MGMT_C_PROTOCOLS(fd sock_nl_generic, msg ptr[in, msghdr_NLBL_MGMT_auto[NLBL_MGMT_C_PROTOCOLS, netlbl_mgmt_genl_policy$auto_netlabel_mgmt]], f flags[send_flags]) (automatic)
sendmsg$auto_NLBL_MGMT_C_REMOVE(fd sock_nl_generic, msg ptr[in, msghdr_NLBL_MGMT_auto[NLBL_MGMT_C_REMOVE, netlbl_mgmt_genl_policy$auto_netlabel_mgmt]], f flags[send_flags]) (automatic)
sendmsg$auto_NLBL_MGMT_C_REMOVEDEF(fd sock_nl_generic, msg ptr[in, msghdr_NLBL_MGMT_auto[NLBL_MGMT_C_REMOVEDEF, netlbl_mgmt_genl_policy$auto_netlabel_mgmt]], f flags[send_flags]) (automatic)
sendmsg$auto_NLBL_MGMT_C_VERSION(fd sock_nl_generic, msg ptr[in, msghdr_NLBL_MGMT_auto[NLBL_MGMT_C_VERSION, netlbl_mgmt_genl_policy$auto_netlabel_mgmt]], f flags[send_flags]) (automatic)
sendmsg$auto_NLBL_UNLABEL_C_ACCEPT(fd sock_nl_generic, msg ptr[in, msghdr_NLBL_UNLBL_auto[NLBL_UNLABEL_C_ACCEPT, netlbl_unlabel_genl_policy$auto_netlabel_unlabeled]], f flags[send_flags]) (automatic)
sendmsg$auto_NLBL_UNLABEL_C_LIST(fd sock_nl_generic, msg ptr[in, msghdr_NLBL_UNLBL_auto[NLBL_UNLABEL_C_LIST, netlbl_unlabel_genl_policy$auto_netlabel_unlabeled]], f flags[send_flags]) (automatic)
sendmsg$auto_NLBL_UNLABEL_C_STATICADD(fd sock_nl_generic, msg ptr[in, msghdr_NLBL_UNLBL_auto[NLBL_UNLABEL_C_STATICADD, netlbl_unlabel_genl_policy$auto_netlabel_unlabeled]], f flags[send_flags]) (automatic)
sendmsg$auto_NLBL_UNLABEL_C_STATICADDDEF(fd sock_nl_generic, msg ptr[in, msghdr_NLBL_UNLBL_auto[NLBL_UNLABEL_C_STATICADDDEF, netlbl_unlabel_genl_policy$auto_netlabel_unlabeled]], f flags[send_flags]) (automatic)
sendmsg$auto_NLBL_UNLABEL_C_STATICLIST(fd sock_nl_generic, msg ptr[in, msghdr_NLBL_UNLBL_auto[NLBL_UNLABEL_C_STATICLIST, netlbl_unlabel_genl_policy$auto_netlabel_unlabeled]], f flags[send_flags]) (automatic)
sendmsg$auto_NLBL_UNLABEL_C_STATICLISTDEF(fd sock_nl_generic, msg ptr[in, msghdr_NLBL_UNLBL_auto[NLBL_UNLABEL_C_STATICLISTDEF, netlbl_unlabel_genl_policy$auto_netlabel_unlabeled]], f flags[send_flags]) (automatic)
sendmsg$auto_NLBL_UNLABEL_C_STATICREMOVE(fd sock_nl_generic, msg ptr[in, msghdr_NLBL_UNLBL_auto[NLBL_UNLABEL_C_STATICREMOVE, netlbl_unlabel_genl_policy$auto_netlabel_unlabeled]], f flags[send_flags]) (automatic)
sendmsg$auto_NLBL_UNLABEL_C_STATICREMOVEDEF(fd sock_nl_generic, msg ptr[in, msghdr_NLBL_UNLBL_auto[NLBL_UNLABEL_C_STATICREMOVEDEF, netlbl_unlabel_genl_policy$auto_netlabel_unlabeled]], f flags[send_flags]) (automatic)
sendmsg$auto_OVS_CT_LIMIT_CMD_DEL(fd sock_nl_generic, msg ptr[in, msghdr_ovs_ct_limit_auto[OVS_CT_LIMIT_CMD_DEL, ct_limit_policy$auto_conntrack]], f flags[send_flags]) (automatic)
sendmsg$auto_OVS_CT_LIMIT_CMD_GET(fd sock_nl_generic, msg ptr[in, msghdr_ovs_ct_limit_auto[OVS_CT_LIMIT_CMD_GET, ct_limit_policy$auto_conntrack]], f flags[send_flags]) (automatic)
sendmsg$auto_OVS_CT_LIMIT_CMD_SET(fd sock_nl_generic, msg ptr[in, msghdr_ovs_ct_limit_auto[OVS_CT_LIMIT_CMD_SET, ct_limit_policy$auto_conntrack]], f flags[send_flags]) (automatic)
sendmsg$auto_OVS_DP_CMD_DEL(fd sock_nl_generic, msg ptr[in, msghdr_ovs_datapath_auto[OVS_DP_CMD_DEL, datapath_policy$auto_datapath]], f flags[send_flags]) (automatic)
sendmsg$auto_OVS_DP_CMD_GET(fd sock_nl_generic, msg ptr[in, msghdr_ovs_datapath_auto[OVS_DP_CMD_GET, datapath_policy$auto_datapath]], f flags[send_flags]) (automatic)
sendmsg$auto_OVS_DP_CMD_NEW(fd sock_nl_generic, msg ptr[in, msghdr_ovs_datapath_auto[OVS_DP_CMD_NEW, datapath_policy$auto_datapath]], f flags[send_flags]) (automatic)
sendmsg$auto_OVS_DP_CMD_SET(fd sock_nl_generic, msg ptr[in, msghdr_ovs_datapath_auto[OVS_DP_CMD_SET, datapath_policy$auto_datapath]], f flags[send_flags]) (automatic)
sendmsg$auto_OVS_FLOW_CMD_DEL(fd sock_nl_generic, msg ptr[in, msghdr_ovs_flow_auto[OVS_FLOW_CMD_DEL, flow_policy$auto_datapath]], f flags[send_flags]) (automatic)
sendmsg$auto_OVS_FLOW_CMD_GET(fd sock_nl_generic, msg ptr[in, msghdr_ovs_flow_auto[OVS_FLOW_CMD_GET, flow_policy$auto_datapath]], f flags[send_flags]) (automatic)
sendmsg$auto_OVS_FLOW_CMD_NEW(fd sock_nl_generic, msg ptr[in, msghdr_ovs_flow_auto[OVS_FLOW_CMD_NEW, flow_policy$auto_datapath]], f flags[send_flags]) (automatic)
sendmsg$auto_OVS_FLOW_CMD_SET(fd sock_nl_generic, msg ptr[in, msghdr_ovs_flow_auto[OVS_FLOW_CMD_SET, flow_policy$auto_datapath]], f flags[send_flags]) (automatic)
sendmsg$auto_OVS_METER_CMD_DEL(fd sock_nl_generic, msg ptr[in, msghdr_ovs_meter_auto[OVS_METER_CMD_DEL, meter_policy$auto_meter]], f flags[send_flags]) (automatic)
sendmsg$auto_OVS_METER_CMD_FEATURES(fd sock_nl_generic, msg ptr[in, msghdr_ovs_meter_auto[OVS_METER_CMD_FEATURES, meter_policy$auto_meter]], f flags[send_flags]) (automatic)
sendmsg$auto_OVS_METER_CMD_GET(fd sock_nl_generic, msg ptr[in, msghdr_ovs_meter_auto[OVS_METER_CMD_GET, meter_policy$auto_meter]], f flags[send_flags]) (automatic)
sendmsg$auto_OVS_METER_CMD_SET(fd sock_nl_generic, msg ptr[in, msghdr_ovs_meter_auto[OVS_METER_CMD_SET, meter_policy$auto_meter]], f flags[send_flags]) (automatic)
sendmsg$auto_OVS_PACKET_CMD_EXECUTE(fd sock_nl_generic, msg ptr[in, msghdr_ovs_packet_auto[OVS_PACKET_CMD_EXECUTE, packet_policy$auto_datapath]], f flags[send_flags]) (automatic)
sendmsg$auto_OVS_VPORT_CMD_DEL(fd sock_nl_generic, msg ptr[in, msghdr_ovs_vport_auto[OVS_VPORT_CMD_DEL, vport_policy$auto_datapath]], f flags[send_flags]) (automatic)
sendmsg$auto_OVS_VPORT_CMD_GET(fd sock_nl_generic, msg ptr[in, msghdr_ovs_vport_auto[OVS_VPORT_CMD_GET, vport_policy$auto_datapath]], f flags[send_flags]) (automatic)
sendmsg$auto_OVS_VPORT_CMD_NEW(fd sock_nl_generic, msg ptr[in, msghdr_ovs_vport_auto[OVS_VPORT_CMD_NEW, vport_policy$auto_datapath]], f flags[send_flags]) (automatic)
sendmsg$auto_OVS_VPORT_CMD_SET(fd sock_nl_generic, msg ptr[in, msghdr_ovs_vport_auto[OVS_VPORT_CMD_SET, vport_policy$auto_datapath]], f flags[send_flags]) (automatic)
sendmsg$auto_SEG6_CMD_DUMPHMAC(fd sock_nl_generic, msg ptr[in, msghdr_SEG6_auto[SEG6_CMD_DUMPHMAC, seg6_genl_policy$auto_seg6]], f flags[send_flags]) (automatic)
sendmsg$auto_SEG6_CMD_GET_TUNSRC(fd sock_nl_generic, msg ptr[in, msghdr_SEG6_auto[SEG6_CMD_GET_TUNSRC, seg6_genl_policy$auto_seg6]], f flags[send_flags]) (automatic)
sendmsg$auto_SEG6_CMD_SETHMAC(fd sock_nl_generic, msg ptr[in, msghdr_SEG6_auto[SEG6_CMD_SETHMAC, seg6_genl_policy$auto_seg6]], f flags[send_flags]) (automatic)
sendmsg$auto_SEG6_CMD_SET_TUNSRC(fd sock_nl_generic, msg ptr[in, msghdr_SEG6_auto[SEG6_CMD_SET_TUNSRC, seg6_genl_policy$auto_seg6]], f flags[send_flags]) (automatic)
sendmsg$auto_SMC_NETLINK_ADD_UEID(fd sock_nl_generic, msg ptr[in, msghdr_SMC_GEN_NETLINK_auto[SMC_NETLINK_ADD_UEID, smc_gen_ueid_policy$auto_smc_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_SMC_NETLINK_DISABLE_HS_LIMITATION(fd sock_nl_generic, msg ptr[in, msghdr_SMC_GEN_NETLINK_auto[SMC_NETLINK_DISABLE_HS_LIMITATION, smc_gen_nl_policy$auto_smc_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_SMC_NETLINK_DISABLE_SEID(fd sock_nl_generic, msg ptr[in, msghdr_SMC_GEN_NETLINK_auto[SMC_NETLINK_DISABLE_SEID, smc_gen_nl_policy$auto_smc_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_SMC_NETLINK_DUMP_HS_LIMITATION(fd sock_nl_generic, msg ptr[in, msghdr_SMC_GEN_NETLINK_auto[SMC_NETLINK_DUMP_HS_LIMITATION, smc_gen_nl_policy$auto_smc_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_SMC_NETLINK_DUMP_SEID(fd sock_nl_generic, msg ptr[in, msghdr_SMC_GEN_NETLINK_auto[SMC_NETLINK_DUMP_SEID, smc_gen_nl_policy$auto_smc_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_SMC_NETLINK_DUMP_UEID(fd sock_nl_generic, msg ptr[in, msghdr_SMC_GEN_NETLINK_auto[SMC_NETLINK_DUMP_UEID, smc_gen_nl_policy$auto_smc_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_SMC_NETLINK_ENABLE_HS_LIMITATION(fd sock_nl_generic, msg ptr[in, msghdr_SMC_GEN_NETLINK_auto[SMC_NETLINK_ENABLE_HS_LIMITATION, smc_gen_nl_policy$auto_smc_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_SMC_NETLINK_ENABLE_SEID(fd sock_nl_generic, msg ptr[in, msghdr_SMC_GEN_NETLINK_auto[SMC_NETLINK_ENABLE_SEID, smc_gen_nl_policy$auto_smc_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_SMC_NETLINK_FLUSH_UEID(fd sock_nl_generic, msg ptr[in, msghdr_SMC_GEN_NETLINK_auto[SMC_NETLINK_FLUSH_UEID, smc_gen_nl_policy$auto_smc_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_SMC_NETLINK_GET_DEV_SMCD(fd sock_nl_generic, msg ptr[in, msghdr_SMC_GEN_NETLINK_auto[SMC_NETLINK_GET_DEV_SMCD, smc_gen_nl_policy$auto_smc_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_SMC_NETLINK_GET_DEV_SMCR(fd sock_nl_generic, msg ptr[in, msghdr_SMC_GEN_NETLINK_auto[SMC_NETLINK_GET_DEV_SMCR, smc_gen_nl_policy$auto_smc_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_SMC_NETLINK_GET_FBACK_STATS(fd sock_nl_generic, msg ptr[in, msghdr_SMC_GEN_NETLINK_auto[SMC_NETLINK_GET_FBACK_STATS, smc_gen_nl_policy$auto_smc_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_SMC_NETLINK_GET_LGR_SMCD(fd sock_nl_generic, msg ptr[in, msghdr_SMC_GEN_NETLINK_auto[SMC_NETLINK_GET_LGR_SMCD, smc_gen_nl_policy$auto_smc_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_SMC_NETLINK_GET_LGR_SMCR(fd sock_nl_generic, msg ptr[in, msghdr_SMC_GEN_NETLINK_auto[SMC_NETLINK_GET_LGR_SMCR, smc_gen_nl_policy$auto_smc_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_SMC_NETLINK_GET_LINK_SMCR(fd sock_nl_generic, msg ptr[in, msghdr_SMC_GEN_NETLINK_auto[SMC_NETLINK_GET_LINK_SMCR, smc_gen_nl_policy$auto_smc_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_SMC_NETLINK_GET_STATS(fd sock_nl_generic, msg ptr[in, msghdr_SMC_GEN_NETLINK_auto[SMC_NETLINK_GET_STATS, smc_gen_nl_policy$auto_smc_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_SMC_NETLINK_GET_SYS_INFO(fd sock_nl_generic, msg ptr[in, msghdr_SMC_GEN_NETLINK_auto[SMC_NETLINK_GET_SYS_INFO, smc_gen_nl_policy$auto_smc_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_SMC_NETLINK_REMOVE_UEID(fd sock_nl_generic, msg ptr[in, msghdr_SMC_GEN_NETLINK_auto[SMC_NETLINK_REMOVE_UEID, smc_gen_ueid_policy$auto_smc_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_SMC_PNETID_ADD(fd sock_nl_generic, msg ptr[in, msghdr_SMC_PNETID_auto[SMC_PNETID_ADD, smc_pnet_policy$auto_smc_pnet]], f flags[send_flags]) (automatic)
sendmsg$auto_SMC_PNETID_DEL(fd sock_nl_generic, msg ptr[in, msghdr_SMC_PNETID_auto[SMC_PNETID_DEL, smc_pnet_policy$auto_smc_pnet]], f flags[send_flags]) (automatic)
sendmsg$auto_SMC_PNETID_FLUSH(fd sock_nl_generic, msg ptr[in, msghdr_SMC_PNETID_auto[SMC_PNETID_FLUSH, smc_pnet_policy$auto_smc_pnet]], f flags[send_flags]) (automatic)
sendmsg$auto_SMC_PNETID_GET(fd sock_nl_generic, msg ptr[in, msghdr_SMC_PNETID_auto[SMC_PNETID_GET, smc_pnet_policy$auto_smc_pnet]], f flags[send_flags]) (automatic)
sendmsg$auto_TASKSTATS_CMD_GET(fd sock_nl_generic, msg ptr[in, msghdr_TASKSTATS_auto[TASKSTATS_CMD_GET, taskstats_cmd_get_policy$auto_taskstats]], f flags[send_flags]) (automatic)
sendmsg$auto_TCP_METRICS_CMD_DEL(fd sock_nl_generic, msg ptr[in, msghdr_tcp_metrics_auto[TCP_METRICS_CMD_DEL, tcp_metrics_nl_policy$auto_tcp_metrics]], f flags[send_flags]) (automatic)
sendmsg$auto_TCP_METRICS_CMD_GET(fd sock_nl_generic, msg ptr[in, msghdr_tcp_metrics_auto[TCP_METRICS_CMD_GET, tcp_metrics_nl_policy$auto_tcp_metrics]], f flags[send_flags]) (automatic)
sendmsg$auto_THERMAL_GENL_CMD_CDEV_GET(fd sock_nl_generic, msg ptr[in, msghdr_thermal_auto[THERMAL_GENL_CMD_CDEV_GET, thermal_genl_policy$auto_thermal_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_THERMAL_GENL_CMD_TZ_GET_GOV(fd sock_nl_generic, msg ptr[in, msghdr_thermal_auto[THERMAL_GENL_CMD_TZ_GET_GOV, thermal_genl_policy$auto_thermal_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_THERMAL_GENL_CMD_TZ_GET_ID(fd sock_nl_generic, msg ptr[in, msghdr_thermal_auto[THERMAL_GENL_CMD_TZ_GET_ID, thermal_genl_policy$auto_thermal_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_THERMAL_GENL_CMD_TZ_GET_TEMP(fd sock_nl_generic, msg ptr[in, msghdr_thermal_auto[THERMAL_GENL_CMD_TZ_GET_TEMP, thermal_genl_policy$auto_thermal_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_THERMAL_GENL_CMD_TZ_GET_TRIP(fd sock_nl_generic, msg ptr[in, msghdr_thermal_auto[THERMAL_GENL_CMD_TZ_GET_TRIP, thermal_genl_policy$auto_thermal_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_TIPC_NL_ADDR_LEGACY_GET(fd sock_nl_generic, msg ptr[in, msghdr_TIPCv2_auto[TIPC_NL_ADDR_LEGACY_GET, tipc_nl_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_TIPC_NL_BEARER_ADD(fd sock_nl_generic, msg ptr[in, msghdr_TIPCv2_auto[TIPC_NL_BEARER_ADD, tipc_nl_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_TIPC_NL_BEARER_DISABLE(fd sock_nl_generic, msg ptr[in, msghdr_TIPCv2_auto[TIPC_NL_BEARER_DISABLE, tipc_nl_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_TIPC_NL_BEARER_ENABLE(fd sock_nl_generic, msg ptr[in, msghdr_TIPCv2_auto[TIPC_NL_BEARER_ENABLE, tipc_nl_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_TIPC_NL_BEARER_GET(fd sock_nl_generic, msg ptr[in, msghdr_TIPCv2_auto[TIPC_NL_BEARER_GET, tipc_nl_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_TIPC_NL_BEARER_SET(fd sock_nl_generic, msg ptr[in, msghdr_TIPCv2_auto[TIPC_NL_BEARER_SET, tipc_nl_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_TIPC_NL_KEY_FLUSH(fd sock_nl_generic, msg ptr[in, msghdr_TIPCv2_auto[TIPC_NL_KEY_FLUSH, tipc_nl_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_TIPC_NL_KEY_SET(fd sock_nl_generic, msg ptr[in, msghdr_TIPCv2_auto[TIPC_NL_KEY_SET, tipc_nl_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_TIPC_NL_LINK_GET(fd sock_nl_generic, msg ptr[in, msghdr_TIPCv2_auto[TIPC_NL_LINK_GET, tipc_nl_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_TIPC_NL_LINK_RESET_STATS(fd sock_nl_generic, msg ptr[in, msghdr_TIPCv2_auto[TIPC_NL_LINK_RESET_STATS, tipc_nl_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_TIPC_NL_LINK_SET(fd sock_nl_generic, msg ptr[in, msghdr_TIPCv2_auto[TIPC_NL_LINK_SET, tipc_nl_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_TIPC_NL_MEDIA_GET(fd sock_nl_generic, msg ptr[in, msghdr_TIPCv2_auto[TIPC_NL_MEDIA_GET, tipc_nl_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_TIPC_NL_MEDIA_SET(fd sock_nl_generic, msg ptr[in, msghdr_TIPCv2_auto[TIPC_NL_MEDIA_SET, tipc_nl_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_TIPC_NL_MON_GET(fd sock_nl_generic, msg ptr[in, msghdr_TIPCv2_auto[TIPC_NL_MON_GET, tipc_nl_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_TIPC_NL_MON_PEER_GET(fd sock_nl_generic, msg ptr[in, msghdr_TIPCv2_auto[TIPC_NL_MON_PEER_GET, tipc_nl_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_TIPC_NL_MON_SET(fd sock_nl_generic, msg ptr[in, msghdr_TIPCv2_auto[TIPC_NL_MON_SET, tipc_nl_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_TIPC_NL_NAME_TABLE_GET(fd sock_nl_generic, msg ptr[in, msghdr_TIPCv2_auto[TIPC_NL_NAME_TABLE_GET, tipc_nl_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_TIPC_NL_NET_GET(fd sock_nl_generic, msg ptr[in, msghdr_TIPCv2_auto[TIPC_NL_NET_GET, tipc_nl_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_TIPC_NL_NET_SET(fd sock_nl_generic, msg ptr[in, msghdr_TIPCv2_auto[TIPC_NL_NET_SET, tipc_nl_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_TIPC_NL_NODE_GET(fd sock_nl_generic, msg ptr[in, msghdr_TIPCv2_auto[TIPC_NL_NODE_GET, tipc_nl_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_TIPC_NL_PEER_REMOVE(fd sock_nl_generic, msg ptr[in, msghdr_TIPCv2_auto[TIPC_NL_PEER_REMOVE, tipc_nl_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_TIPC_NL_PUBL_GET(fd sock_nl_generic, msg ptr[in, msghdr_TIPCv2_auto[TIPC_NL_PUBL_GET, tipc_nl_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_TIPC_NL_SOCK_GET(fd sock_nl_generic, msg ptr[in, msghdr_TIPCv2_auto[TIPC_NL_SOCK_GET, tipc_nl_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_TIPC_NL_UDP_GET_REMOTEIP(fd sock_nl_generic, msg ptr[in, msghdr_TIPCv2_auto[TIPC_NL_UDP_GET_REMOTEIP, tipc_nl_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_VDPA_CMD_DEV_ATTR_SET(fd sock_nl_generic, msg ptr[in, msghdr_vdpa_auto[VDPA_CMD_DEV_ATTR_SET, vdpa_nl_policy$auto_vdpa]], f flags[send_flags]) (automatic)
sendmsg$auto_VDPA_CMD_DEV_CONFIG_GET(fd sock_nl_generic, msg ptr[in, msghdr_vdpa_auto[VDPA_CMD_DEV_CONFIG_GET, vdpa_nl_policy$auto_vdpa]], f flags[send_flags]) (automatic)
sendmsg$auto_VDPA_CMD_DEV_DEL(fd sock_nl_generic, msg ptr[in, msghdr_vdpa_auto[VDPA_CMD_DEV_DEL, vdpa_nl_policy$auto_vdpa]], f flags[send_flags]) (automatic)
sendmsg$auto_VDPA_CMD_DEV_GET(fd sock_nl_generic, msg ptr[in, msghdr_vdpa_auto[VDPA_CMD_DEV_GET, vdpa_nl_policy$auto_vdpa]], f flags[send_flags]) (automatic)
sendmsg$auto_VDPA_CMD_DEV_NEW(fd sock_nl_generic, msg ptr[in, msghdr_vdpa_auto[VDPA_CMD_DEV_NEW, vdpa_nl_policy$auto_vdpa]], f flags[send_flags]) (automatic)
sendmsg$auto_VDPA_CMD_DEV_VSTATS_GET(fd sock_nl_generic, msg ptr[in, msghdr_vdpa_auto[VDPA_CMD_DEV_VSTATS_GET, vdpa_nl_policy$auto_vdpa]], f flags[send_flags]) (automatic)
sendmsg$auto_VDPA_CMD_MGMTDEV_GET(fd sock_nl_generic, msg ptr[in, msghdr_vdpa_auto[VDPA_CMD_MGMTDEV_GET, vdpa_nl_policy$auto_vdpa]], f flags[send_flags]) (automatic)
sendmsg$auto_WG_CMD_GET_DEVICE(fd sock_nl_generic, msg ptr[in, msghdr_wireguard_auto[WG_CMD_GET_DEVICE, device_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_WG_CMD_SET_DEVICE(fd sock_nl_generic, msg ptr[in, msghdr_wireguard_auto[WG_CMD_SET_DEVICE, device_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendto$auto(fd fd, buff ptr[inout, array[auto_todo]], len intptr, flags int32, addr ptr[inout, sockaddr$auto_record], addr_len int32) (automatic)
set_mempolicy$auto(mode int32, nmask ptr[in, intptr], maxnode intptr) (automatic)
set_mempolicy_home_node$auto(start intptr, len intptr, home_node intptr, flags intptr) (automatic)
set_robust_list$auto(head ptr[inout, robust_list_head$auto_record], len intptr) (automatic)
set_thread_area$auto(u_info ptr[inout, user_desc$auto_record]) (automatic)
set_tid_address$auto(tidptr ptr[inout, int32]) (automatic)
setdomainname$auto(name ptr[inout, string], len int32) (automatic)
setfsgid$auto(gid gid) (automatic)
setfsgid32$auto(gid gid) (automatic)
setfsuid$auto(uid uid) (automatic)
setfsuid32$auto(uid uid) (automatic)
setgid$auto(gid gid) (automatic)
setgid32$auto(gid gid) (automatic)
setgroups$auto(gidsetsize int32, grouplist ptr[inout, int32]) (automatic)
setgroups32$auto(gidsetsize int32, grouplist ptr[inout, int32]) (automatic)
sethostname$auto(name ptr[inout, string], len int32) (automatic)
setitimer$auto(which int32, value ptr[inout, __kernel_old_itimerval$auto_record], ovalue ptr[inout, __kernel_old_itimerval$auto_record]) (automatic)
setns$auto(fd fd, flags int32) (automatic)
setpgid$auto(pid pid, pgid pid) (automatic)
setpriority$auto(which int32, who int32, niceval int32) (automatic)
setregid$auto(rgid gid, egid gid) (automatic)
setregid32$auto(rgid gid, egid gid) (automatic)
setresgid$auto(rgid gid, egid gid, sgid gid) (automatic)
setresgid32$auto(rgid gid, egid gid, sgid gid) (automatic)
setresuid$auto(ruid uid, euid uid, suid uid) (automatic)
setresuid32$auto(ruid uid, euid uid, suid uid) (automatic)
setreuid$auto(ruid uid, euid uid) (automatic)
setreuid32$auto(ruid uid, euid uid) (automatic)
setrlimit$auto(_resource int32, rlim ptr[inout, rlimit$auto_record]) (automatic)
setsockopt$auto(fd fd, level int32, optname int32, optval ptr[inout, string], optlen int32) (automatic)
settimeofday$auto(tv ptr[inout, __kernel_old_timeval$auto_record], tz ptr[inout, timezone$auto_record]) (automatic)
setuid$auto(uid uid) (automatic)
setuid32$auto(uid uid) (automatic)
setxattr$auto(pathname ptr[in, filename], name ptr[in, string], value ptr[in, array[auto_todo]], size intptr, flags int32) (automatic)
shmat$auto(shmid int32, shmaddr ptr[inout, string], shmflg int32) (automatic)
shmctl$auto(shmid int32, cmd int32, buf ptr[inout, shmid_ds$auto_record]) (automatic)
shmdt$auto(shmaddr ptr[inout, string]) (automatic)
shmget$auto(key int32, size intptr, shmflg int32) (automatic)
shutdown$auto(fd fd, how int32) (automatic)
sigaltstack$auto(uss ptr[in, sigaltstack$auto_record], uoss ptr[inout, sigaltstack$auto_record]) (automatic)
signal$auto(sig int32, handler ptr[inout, ptr[in, auto_todo]]) (automatic)
signalfd$auto(ufd fd, user_mask ptr[inout, sigset_t$auto_record], sizemask intptr) (automatic)
signalfd4$auto(ufd fd, user_mask ptr[inout, sigset_t$auto_record], sizemask intptr, flags int32) (automatic)
sigpending$auto(uset ptr[inout, intptr]) (automatic)
sigprocmask$auto(how int32, nset ptr[inout, intptr], oset ptr[inout, intptr]) (automatic)
sigsuspend$auto(unused1 const[0], unused2 const[0], mask intptr) (automatic)
socket$auto(family int32, type int32, protocol int32) (automatic)
socketcall$auto(call int32, args ptr[inout, intptr]) (automatic)
socketpair$auto(family int32, type int32, protocol int32, usockvec ptr[inout, int32]) (automatic)
splice$auto(fd_in fd, off_in ptr[inout, int64], fd_out fd, off_out ptr[inout, int64], len intptr, flags int32) (automatic)
ssetmask$auto(newmask int32) (automatic)
stat$auto(filename ptr[in, filename], statbuf ptr[inout, stat$auto_record]) (automatic)
statfs$auto(pathname ptr[in, filename], buf ptr[inout, statfs$auto_record]) (automatic)
statfs64$auto(pathname ptr[in, filename], sz intptr, buf ptr[inout, statfs64$auto_record]) (automatic)
statmount$auto(req ptr[in, mnt_id_req$auto_record], buf ptr[inout, statmount$auto_record], bufsize intptr, flags int32) (automatic)
statx$auto(dfd fd_dir, filename ptr[in, filename], flags int32, mask int32, buffer ptr[inout, statx$auto_record]) (automatic)
stime$auto(tptr ptr[inout, int32]) (automatic)
swapoff$auto(specialfile ptr[in, string]) (automatic)
swapon$auto(specialfile ptr[in, string], swap_flags int32) (automatic)
symlink$auto(oldname ptr[in, filename], newname ptr[in, filename]) (automatic)
symlinkat$auto(oldname ptr[in, filename], newdfd fd_dir, newname ptr[in, filename]) (automatic)
sync_file_range$auto(fd fd, offset intptr, nbytes intptr, flags int32) (automatic)
sync_file_range2$auto(fd fd, flags int32, offset intptr, nbytes intptr) (automatic)
syncfs$auto(fd fd) (automatic)
sysfs$auto(option int32, arg1 intptr, arg2 intptr) (automatic)
sysinfo$auto(info ptr[inout, sysinfo$auto_record]) (automatic)
syslog$auto(type int32, buf ptr[inout, string], len int32) (automatic)
syz_genetlink_get_family_id$auto_802_15_4_MAC(name ptr[in, string["802.15.4 MAC"]], fd sock_nl_generic) genl_802_15_4_MAC_family_id_auto (automatic)
syz_genetlink_get_family_id$auto_HSR(name ptr[in, string["HSR"]], fd sock_nl_generic) genl_HSR_family_id_auto (automatic)
syz_genetlink_get_family_id$auto_IOAM6(name ptr[in, string["IOAM6"]], fd sock_nl_generic) genl_IOAM6_family_id_auto (automatic)
syz_genetlink_get_family_id$auto_IPVS(name ptr[in, string["IPVS"]], fd sock_nl_generic) genl_IPVS_family_id_auto (automatic)
syz_genetlink_get_family_id$auto_MAC80211_HWSIM(name ptr[in, string["MAC80211_HWSIM"]], fd sock_nl_generic) genl_MAC80211_HWSIM_family_id_auto (automatic)
syz_genetlink_get_family_id$auto_MAC802154_HWSIM(name ptr[in, string["MAC802154_HWSIM"]], fd sock_nl_generic) genl_MAC802154_HWSIM_family_id_auto (automatic)
syz_genetlink_get_family_id$auto_NCSI(name ptr[in, string["NCSI"]], fd sock_nl_generic) genl_NCSI_family_id_auto (automatic)
syz_genetlink_get_family_id$auto_NET_DM(name ptr[in, string["NET_DM"]], fd sock_nl_generic) genl_NET_DM_family_id_auto (automatic)
syz_genetlink_get_family_id$auto_NLBL_CALIPSO(name ptr[in, string["NLBL_CALIPSO"]], fd sock_nl_generic) genl_NLBL_CALIPSO_family_id_auto (automatic)
syz_genetlink_get_family_id$auto_NLBL_CIPSOv4(name ptr[in, string["NLBL_CIPSOv4"]], fd sock_nl_generic) genl_NLBL_CIPSOv4_family_id_auto (automatic)
syz_genetlink_get_family_id$auto_NLBL_MGMT(name ptr[in, string["NLBL_MGMT"]], fd sock_nl_generic) genl_NLBL_MGMT_family_id_auto (automatic)
syz_genetlink_get_family_id$auto_NLBL_UNLBL(name ptr[in, string["NLBL_UNLBL"]], fd sock_nl_generic) genl_NLBL_UNLBL_family_id_auto (automatic)
syz_genetlink_get_family_id$auto_SEG6(name ptr[in, string["SEG6"]], fd sock_nl_generic) genl_SEG6_family_id_auto (automatic)
syz_genetlink_get_family_id$auto_SMC_GEN_NETLINK(name ptr[in, string["SMC_GEN_NETLINK"]], fd sock_nl_generic) genl_SMC_GEN_NETLINK_family_id_auto (automatic)
syz_genetlink_get_family_id$auto_SMC_PNETID(name ptr[in, string["SMC_PNETID"]], fd sock_nl_generic) genl_SMC_PNETID_family_id_auto (automatic)
syz_genetlink_get_family_id$auto_TASKSTATS(name ptr[in, string["TASKSTATS"]], fd sock_nl_generic) genl_TASKSTATS_family_id_auto (automatic)
syz_genetlink_get_family_id$auto_TIPCv2(name ptr[in, string["TIPCv2"]], fd sock_nl_generic) genl_TIPCv2_family_id_auto (automatic)
syz_genetlink_get_family_id$auto_batadv(name ptr[in, string["batadv"]], fd sock_nl_generic) genl_batadv_family_id_auto (automatic)
syz_genetlink_get_family_id$auto_cifs(name ptr[in, string["cifs"]], fd sock_nl_generic) genl_cifs_family_id_auto (automatic)
syz_genetlink_get_family_id$auto_ethtool(name ptr[in, string["ethtool"]], fd sock_nl_generic) genl_ethtool_family_id_auto (automatic)
syz_genetlink_get_family_id$auto_gtp(name ptr[in, string["gtp"]], fd sock_nl_generic) genl_gtp_family_id_auto (automatic)
syz_genetlink_get_family_id$auto_handshake(name ptr[in, string["handshake"]], fd sock_nl_generic) genl_handshake_family_id_auto (automatic)
syz_genetlink_get_family_id$auto_ila(name ptr[in, string["ila"]], fd sock_nl_generic) genl_ila_family_id_auto (automatic)
syz_genetlink_get_family_id$auto_l2tp(name ptr[in, string["l2tp"]], fd sock_nl_generic) genl_l2tp_family_id_auto (automatic)
syz_genetlink_get_family_id$auto_macsec(name ptr[in, string["macsec"]], fd sock_nl_generic) genl_macsec_family_id_auto (automatic)
syz_genetlink_get_family_id$auto_nbd(name ptr[in, string["nbd"]], fd sock_nl_generic) genl_nbd_family_id_auto (automatic)
syz_genetlink_get_family_id$auto_netdev(name ptr[in, string["netdev"]], fd sock_nl_generic) genl_netdev_family_id_auto (automatic)
syz_genetlink_get_family_id$auto_nfc(name ptr[in, string["nfc"]], fd sock_nl_generic) genl_nfc_family_id_auto (automatic)
syz_genetlink_get_family_id$auto_nfsd(name ptr[in, string["nfsd"]], fd sock_nl_generic) genl_nfsd_family_id_auto (automatic)
syz_genetlink_get_family_id$auto_nl80211(name ptr[in, string["nl80211"]], fd sock_nl_generic) genl_nl80211_family_id_auto (automatic)
syz_genetlink_get_family_id$auto_nl802154(name ptr[in, string["nl802154"]], fd sock_nl_generic) genl_nl802154_family_id_auto (automatic)
syz_genetlink_get_family_id$auto_nlctrl(name ptr[in, string["nlctrl"]], fd sock_nl_generic) genl_nlctrl_family_id_auto (automatic)
syz_genetlink_get_family_id$auto_ovs_ct_limit(name ptr[in, string["ovs_ct_limit"]], fd sock_nl_generic) genl_ovs_ct_limit_family_id_auto (automatic)
syz_genetlink_get_family_id$auto_ovs_datapath(name ptr[in, string["ovs_datapath"]], fd sock_nl_generic) genl_ovs_datapath_family_id_auto (automatic)
syz_genetlink_get_family_id$auto_ovs_flow(name ptr[in, string["ovs_flow"]], fd sock_nl_generic) genl_ovs_flow_family_id_auto (automatic)
syz_genetlink_get_family_id$auto_ovs_meter(name ptr[in, string["ovs_meter"]], fd sock_nl_generic) genl_ovs_meter_family_id_auto (automatic)
syz_genetlink_get_family_id$auto_ovs_packet(name ptr[in, string["ovs_packet"]], fd sock_nl_generic) genl_ovs_packet_family_id_auto (automatic)
syz_genetlink_get_family_id$auto_ovs_vport(name ptr[in, string["ovs_vport"]], fd sock_nl_generic) genl_ovs_vport_family_id_auto (automatic)
syz_genetlink_get_family_id$auto_tcp_metrics(name ptr[in, string["tcp_metrics"]], fd sock_nl_generic) genl_tcp_metrics_family_id_auto (automatic)
syz_genetlink_get_family_id$auto_thermal(name ptr[in, string["thermal"]], fd sock_nl_generic) genl_thermal_family_id_auto (automatic)
syz_genetlink_get_family_id$auto_vdpa(name ptr[in, string["vdpa"]], fd sock_nl_generic) genl_vdpa_family_id_auto (automatic)
syz_genetlink_get_family_id$auto_wireguard(name ptr[in, string["wireguard"]], fd sock_nl_generic) genl_wireguard_family_id_auto (automatic)
tee$auto(fdin fd, fdout fd, len intptr, flags int32) (automatic)
tgkill$auto(tgid pid, pid pid, sig int32) (automatic)
time$auto(tloc ptr[inout, intptr]) (automatic)
timer_create$auto(which_clock int32, timer_event_spec ptr[inout, sigevent$auto_record], created_timer_id ptr[inout, int32]) (automatic)
timer_delete$auto(timer_id int32) (automatic)
timer_getoverrun$auto(timer_id int32) (automatic)
timer_gettime$auto(timer_id int32, setting ptr[inout, __kernel_itimerspec$auto_record]) (automatic)
timer_gettime64$auto(timer_id int32, setting ptr[inout, __kernel_itimerspec$auto_record]) (automatic)
timer_settime$auto(timer_id int32, flags int32, new_setting ptr[in, __kernel_itimerspec$auto_record], old_setting ptr[inout, __kernel_itimerspec$auto_record]) (automatic)
timer_settime64$auto(timer_id int32, flags int32, new_setting ptr[in, __kernel_itimerspec$auto_record], old_setting ptr[inout, __kernel_itimerspec$auto_record]) (automatic)
timerfd_create$auto(clockid int32, flags int32) (automatic)
timerfd_gettime$auto(ufd fd, otmr ptr[inout, __kernel_itimerspec$auto_record]) (automatic)
timerfd_gettime64$auto(ufd fd, otmr ptr[inout, __kernel_itimerspec$auto_record]) (automatic)
timerfd_settime$auto(ufd fd, flags int32, utmr ptr[in, __kernel_itimerspec$auto_record], otmr ptr[inout, __kernel_itimerspec$auto_record]) (automatic)
timerfd_settime64$auto(ufd fd, flags int32, utmr ptr[in, __kernel_itimerspec$auto_record], otmr ptr[inout, __kernel_itimerspec$auto_record]) (automatic)
times$auto(tbuf ptr[inout, tms$auto_record]) (automatic)
tkill$auto(pid pid, sig int32) (automatic)
truncate$auto(path ptr[in, filename], length intptr) (automatic)
truncate64$auto(filename ptr[in, filename], offset_low intptr, offset_high intptr) (automatic)
ugetrlimit$auto(_resource int32, rlim ptr[inout, rlimit$auto_record]) (automatic)
umask$auto(mask int32) (automatic)
umount$auto(name ptr[inout, string]) (automatic)
umount2$auto(name ptr[inout, string], flags int32) (automatic)
uname$auto(name ptr[inout, new_utsname$auto_record]) (automatic)
unlink$auto(pathname ptr[in, filename]) (automatic)
unlinkat$auto(dfd fd_dir, pathname ptr[in, filename], flag int32) (automatic)
unshare$auto(unshare_flags intptr) (automatic)
userfaultfd$auto(flags int32) (automatic)
ustat$auto(dev int32, ubuf ptr[inout, ustat$auto_record]) (automatic)
utime$auto(filename ptr[inout, filename], times ptr[inout, utimbuf$auto_record]) (automatic)
utimensat$auto(dfd fd_dir, filename ptr[in, filename], utimes ptr[inout, __kernel_timespec$auto_record], flags int32) (automatic)
utimensat_time64$auto(dfd fd_dir, filename ptr[in, filename], utimes ptr[inout, __kernel_timespec$auto_record], flags int32) (automatic)
utimes$auto(filename ptr[inout, filename], utimes ptr[inout, __kernel_old_timeval$auto_record]) (automatic)
vmsplice$auto(fd fd, uiov ptr[in, iovec$auto_record], nr_segs intptr, flags int32) (automatic)
wait4$auto(upid int32, stat_addr ptr[inout, int32], options int32, ru ptr[inout, rusage$auto_record]) (automatic)
waitid$auto(which int32, upid int32, infop ptr[inout, siginfo$auto_record], options int32, ru ptr[inout, rusage$auto_record]) (automatic)
waitpid$auto(pid pid, stat_addr ptr[inout, int32], options int32) (automatic)
write$auto(fd fd, buf ptr[in, string], count intptr) (automatic)
writev$auto(fd intptr, vec ptr[in, iovec$auto_record], vlen intptr) (automatic)

__aio_sigset$auto_record {
	sigmask		ptr[in, sigset_t$auto_record]
	sigsetsize	const[8, intptr]
}

__kernel_fd_set$auto_record {
	fds_bits	array[intptr, 16]
}

__kernel_itimerspec$auto_record {
	it_interval	__kernel_timespec$auto_record
	it_value	__kernel_timespec$auto_record
}

__kernel_old_itimerval$auto_record {
	it_interval	__kernel_old_timeval$auto_record
	it_value	__kernel_old_timeval$auto_record
}

__kernel_old_timeval$auto_record {
	tv_sec	intptr
	tv_usec	intptr
}

__kernel_sockaddr_storage$auto_record {
	__kernel_sockaddr_storage_0	__kernel_sockaddr_storage_0$auto_record
}

__kernel_sockaddr_storage_0$auto_record [
	__kernel_sockaddr_storage_0_0	__kernel_sockaddr_storage_0_0$auto_record
	__align				ptr[inout, array[auto_todo]]
]

__kernel_sockaddr_storage_0_0$auto_record {
	ss_family	int16
	__data		array[int8, 126]
}

__kernel_timespec$auto_record {
	tv_sec	int64
	tv_nsec	int64
}

__kernel_timex$auto_record {
	modes			int32
	__kernel_timex_1	const[0, int32]
	offset			int64
	freq			int64
	maxerror		int64
	esterror		int64
	status			int32
	__kernel_timex_7	const[0, int32]
	constant		int64
	precision		int64
	tolerance		int64
	time			__kernel_timex_timeval$auto_record
	tick			int64
	ppsfreq			int64
	jitter			int64
	shift			int32
	__kernel_timex_16	const[0, int32]
	stabil			int64
	jitcnt			int64
	calcnt			int64
	errcnt			int64
	stbcnt			int64
	tai			int32
	__kernel_timex_23	const[0, int32]
	__kernel_timex_24	const[0, int32]
	__kernel_timex_25	const[0, int32]
	__kernel_timex_26	const[0, int32]
	__kernel_timex_27	const[0, int32]
	__kernel_timex_28	const[0, int32]
	__kernel_timex_29	const[0, int32]
	__kernel_timex_30	const[0, int32]
	__kernel_timex_31	const[0, int32]
	__kernel_timex_32	const[0, int32]
	__kernel_timex_33	const[0, int32]
}

__kernel_timex_timeval$auto_record {
	tv_sec	int64
	tv_usec	int64
}

__old_kernel_stat$auto_record {
	st_dev		int16
	st_ino		int16
	st_mode		int16
	st_nlink	int16
	st_uid		int16
	st_gid		int16
	st_rdev		int16
	st_size		int32
	st_atime	int32
	st_mtime	int32
	st_ctime	int32
}

__sifields$auto_record [
	_kill		__sifields__kill$auto_record
	_timer		__sifields__timer$auto_record
	_rt		__sifields__rt$auto_record
	_sigchld	__sifields__sigchld$auto_record
	_sigfault	__sifields__sigfault$auto_record
	_sigpoll	__sifields__sigpoll$auto_record
	_sigsys		__sifields__sigsys$auto_record
]

__sifields__kill$auto_record {
	_pid	pid
	_uid	uid
}

__sifields__rt$auto_record {
	_pid	pid
	_uid	uid
	_sigval	sigval$auto_record
}

__sifields__sigchld$auto_record {
	_pid	pid
	_uid	uid
	_status	int32
	_utime	intptr
	_stime	intptr
}

__sifields__sigfault$auto_record {
	_addr			ptr[inout, array[auto_todo]]
	__sifields__sigfault_1	__sifields__sigfault_1$auto_record
}

__sifields__sigfault_1$auto_record [
	_trapno		int32
	_addr_lsb	int16
	_addr_bnd	__sifields__sigfault_1__addr_bnd$auto_record
	_addr_pkey	__sifields__sigfault_1__addr_pkey$auto_record
	_perf		__sifields__sigfault_1__perf$auto_record
]

__sifields__sigfault_1__addr_bnd$auto_record {
	_dummy_bnd	array[int8, 8]
	_lower		ptr[inout, array[auto_todo]]
	_upper		ptr[inout, array[auto_todo]]
}

__sifields__sigfault_1__addr_pkey$auto_record {
	_dummy_pkey	array[int8, 8]
	_pkey		int32
}

__sifields__sigfault_1__perf$auto_record {
	_data	intptr
	_type	int32
	_flags	int32
}

__sifields__sigpoll$auto_record {
	_band	intptr
	_fd	fd
}

__sifields__sigsys$auto_record {
	_call_addr	ptr[inout, array[auto_todo]]
	_syscall	int32
	_arch		int32
}

__sifields__timer$auto_record {
	_tid		pid
	_overrun	int32
	_sigval		sigval$auto_record
	_sys_private	int32
}

__user_cap_data_struct$auto_record {
	effective	int32
	permitted	int32
	inheritable	int32
}

__user_cap_header_struct$auto_record {
	version	int32
	pid	pid
}

batadv_netlink_policy$auto_netlink [
	BATADV_ATTR_VERSION				nlattr[BATADV_ATTR_VERSION, stringnoz]
	BATADV_ATTR_ALGO_NAME				nlattr[BATADV_ATTR_ALGO_NAME, stringnoz]
	BATADV_ATTR_MESH_IFINDEX			nlattr[BATADV_ATTR_MESH_IFINDEX, ifindex]
	BATADV_ATTR_MESH_IFNAME				nlattr[BATADV_ATTR_MESH_IFNAME, devname]
	BATADV_ATTR_MESH_ADDRESS			nlattr[BATADV_ATTR_MESH_ADDRESS, array[int8, 6]]
	BATADV_ATTR_HARD_IFINDEX			nlattr[BATADV_ATTR_HARD_IFINDEX, ifindex]
	BATADV_ATTR_HARD_IFNAME				nlattr[BATADV_ATTR_HARD_IFNAME, devname]
	BATADV_ATTR_HARD_ADDRESS			nlattr[BATADV_ATTR_HARD_ADDRESS, array[int8, 6]]
	BATADV_ATTR_ORIG_ADDRESS			nlattr[BATADV_ATTR_ORIG_ADDRESS, array[int8, 6]]
	BATADV_ATTR_TPMETER_RESULT			nlattr[BATADV_ATTR_TPMETER_RESULT, int8]
	BATADV_ATTR_TPMETER_TEST_TIME			nlattr[BATADV_ATTR_TPMETER_TEST_TIME, int32]
	BATADV_ATTR_TPMETER_BYTES			nlattr[BATADV_ATTR_TPMETER_BYTES, int64]
	BATADV_ATTR_TPMETER_COOKIE			nlattr[BATADV_ATTR_TPMETER_COOKIE, int32]
	BATADV_ATTR_ACTIVE				nlattr[BATADV_ATTR_ACTIVE, void]
	BATADV_ATTR_TT_ADDRESS				nlattr[BATADV_ATTR_TT_ADDRESS, array[int8, 6]]
	BATADV_ATTR_TT_TTVN				nlattr[BATADV_ATTR_TT_TTVN, int8]
	BATADV_ATTR_TT_LAST_TTVN			nlattr[BATADV_ATTR_TT_LAST_TTVN, int8]
	BATADV_ATTR_TT_CRC32				nlattr[BATADV_ATTR_TT_CRC32, int32]
	BATADV_ATTR_TT_VID				nlattr[BATADV_ATTR_TT_VID, int16]
	BATADV_ATTR_TT_FLAGS				nlattr[BATADV_ATTR_TT_FLAGS, int32]
	BATADV_ATTR_FLAG_BEST				nlattr[BATADV_ATTR_FLAG_BEST, void]
	BATADV_ATTR_LAST_SEEN_MSECS			nlattr[BATADV_ATTR_LAST_SEEN_MSECS, int32]
	BATADV_ATTR_NEIGH_ADDRESS			nlattr[BATADV_ATTR_NEIGH_ADDRESS, array[int8, 6]]
	BATADV_ATTR_TQ					nlattr[BATADV_ATTR_TQ, int8]
	BATADV_ATTR_THROUGHPUT				nlattr[BATADV_ATTR_THROUGHPUT, int32]
	BATADV_ATTR_BANDWIDTH_UP			nlattr[BATADV_ATTR_BANDWIDTH_UP, int32]
	BATADV_ATTR_BANDWIDTH_DOWN			nlattr[BATADV_ATTR_BANDWIDTH_DOWN, int32]
	BATADV_ATTR_ROUTER				nlattr[BATADV_ATTR_ROUTER, array[int8, 6]]
	BATADV_ATTR_BLA_OWN				nlattr[BATADV_ATTR_BLA_OWN, void]
	BATADV_ATTR_BLA_ADDRESS				nlattr[BATADV_ATTR_BLA_ADDRESS, array[int8, 6]]
	BATADV_ATTR_BLA_VID				nlattr[BATADV_ATTR_BLA_VID, int16]
	BATADV_ATTR_BLA_BACKBONE			nlattr[BATADV_ATTR_BLA_BACKBONE, array[int8, 6]]
	BATADV_ATTR_BLA_CRC				nlattr[BATADV_ATTR_BLA_CRC, int16]
	BATADV_ATTR_DAT_CACHE_IP4ADDRESS		nlattr[BATADV_ATTR_DAT_CACHE_IP4ADDRESS, int32]
	BATADV_ATTR_DAT_CACHE_HWADDRESS			nlattr[BATADV_ATTR_DAT_CACHE_HWADDRESS, array[int8, 6]]
	BATADV_ATTR_DAT_CACHE_VID			nlattr[BATADV_ATTR_DAT_CACHE_VID, int16]
	BATADV_ATTR_MCAST_FLAGS				nlattr[BATADV_ATTR_MCAST_FLAGS, int32]
	BATADV_ATTR_MCAST_FLAGS_PRIV			nlattr[BATADV_ATTR_MCAST_FLAGS_PRIV, int32]
	BATADV_ATTR_VLANID				nlattr[BATADV_ATTR_VLANID, int16]
	BATADV_ATTR_AGGREGATED_OGMS_ENABLED		nlattr[BATADV_ATTR_AGGREGATED_OGMS_ENABLED, bool8]
	BATADV_ATTR_AP_ISOLATION_ENABLED		nlattr[BATADV_ATTR_AP_ISOLATION_ENABLED, bool8]
	BATADV_ATTR_ISOLATION_MARK			nlattr[BATADV_ATTR_ISOLATION_MARK, int32]
	BATADV_ATTR_ISOLATION_MASK			nlattr[BATADV_ATTR_ISOLATION_MASK, int32]
	BATADV_ATTR_BONDING_ENABLED			nlattr[BATADV_ATTR_BONDING_ENABLED, bool8]
	BATADV_ATTR_BRIDGE_LOOP_AVOIDANCE_ENABLED	nlattr[BATADV_ATTR_BRIDGE_LOOP_AVOIDANCE_ENABLED, bool8]
	BATADV_ATTR_DISTRIBUTED_ARP_TABLE_ENABLED	nlattr[BATADV_ATTR_DISTRIBUTED_ARP_TABLE_ENABLED, bool8]
	BATADV_ATTR_FRAGMENTATION_ENABLED		nlattr[BATADV_ATTR_FRAGMENTATION_ENABLED, bool8]
	BATADV_ATTR_GW_BANDWIDTH_DOWN			nlattr[BATADV_ATTR_GW_BANDWIDTH_DOWN, int32]
	BATADV_ATTR_GW_BANDWIDTH_UP			nlattr[BATADV_ATTR_GW_BANDWIDTH_UP, int32]
	BATADV_ATTR_GW_MODE				nlattr[BATADV_ATTR_GW_MODE, int8]
	BATADV_ATTR_GW_SEL_CLASS			nlattr[BATADV_ATTR_GW_SEL_CLASS, int32]
	BATADV_ATTR_HOP_PENALTY				nlattr[BATADV_ATTR_HOP_PENALTY, int8]
	BATADV_ATTR_LOG_LEVEL				nlattr[BATADV_ATTR_LOG_LEVEL, int32]
	BATADV_ATTR_MULTICAST_FORCEFLOOD_ENABLED	nlattr[BATADV_ATTR_MULTICAST_FORCEFLOOD_ENABLED, bool8]
	BATADV_ATTR_NETWORK_CODING_ENABLED		nlattr[BATADV_ATTR_NETWORK_CODING_ENABLED, bool8]
	BATADV_ATTR_ORIG_INTERVAL			nlattr[BATADV_ATTR_ORIG_INTERVAL, int32]
	BATADV_ATTR_ELP_INTERVAL			nlattr[BATADV_ATTR_ELP_INTERVAL, int32]
	BATADV_ATTR_THROUGHPUT_OVERRIDE			nlattr[BATADV_ATTR_THROUGHPUT_OVERRIDE, int32]
	BATADV_ATTR_MULTICAST_FANOUT			nlattr[BATADV_ATTR_MULTICAST_FANOUT, int32]
] [varlen]

bpf_attr$auto_record [
	bpf_attr_0	bpf_attr_0$auto_record
	bpf_attr_1	bpf_attr_1$auto_record
	batch		bpf_attr_batch$auto_record
	bpf_attr_3	bpf_attr_3$auto_record
	bpf_attr_4	bpf_attr_4$auto_record
	bpf_attr_5	bpf_attr_5$auto_record
	test		bpf_attr_test$auto_record
	bpf_attr_7	bpf_attr_7$auto_record
	info		bpf_attr_info$auto_record
	query		bpf_attr_query$auto_record
	raw_tracepoint	bpf_attr_raw_tracepoint$auto_record
	bpf_attr_11	bpf_attr_11$auto_record
	task_fd_query	bpf_attr_task_fd_query$auto_record
	link_create	bpf_attr_link_create$auto_record
	link_update	bpf_attr_link_update$auto_record
	link_detach	bpf_attr_link_detach$auto_record
	enable_stats	bpf_attr_enable_stats$auto_record
	iter_create	bpf_attr_iter_create$auto_record
	prog_bind_map	bpf_attr_prog_bind_map$auto_record
	token_create	bpf_attr_token_create$auto_record
]

bpf_attr_0$auto_record {
	map_type			int32
	key_size			int32
	value_size			int32
	max_entries			int32
	map_flags			int32
	inner_map_fd			fd
	numa_node			int32
	map_name			array[int8, 16]
	map_ifindex			ifindex
	btf_fd				fd
	btf_key_type_id			int32
	btf_value_type_id		int32
	btf_vmlinux_value_type_id	int32
	map_extra			int64
	value_type_btf_obj_fd		fd
	map_token_fd			fd
}

bpf_attr_1$auto_record {
	map_fd		fd
	key		int64
	bpf_attr_1_2	bpf_attr_1_2$auto_record
	flags		int64
}

bpf_attr_11$auto_record {
	btf			int64
	btf_log_buf		int64
	btf_size		int32
	btf_log_size		int32
	btf_log_level		int32
	btf_log_true_size	int32
	btf_flags		int32
	btf_token_fd		fd
}

bpf_attr_1_2$auto_record [
	value		int64
	next_key	int64
]

bpf_attr_3$auto_record {
	prog_type		int32
	insn_cnt		int32
	insns			int64
	license			int64
	log_level		int32
	log_size		int32
	log_buf			int64
	kern_version		int32
	prog_flags		int32
	prog_name		array[int8, 16]
	prog_ifindex		ifindex
	expected_attach_type	int32
	prog_btf_fd		fd
	func_info_rec_size	int32
	func_info		int64
	func_info_cnt		int32
	line_info_rec_size	int32
	line_info		int64
	line_info_cnt		int32
	attach_btf_id		int32
	bpf_attr_3_20		bpf_attr_3_20$auto_record
	core_relo_cnt		int32
	fd_array		int64
	core_relos		int64
	core_relo_rec_size	int32
	log_true_size		int32
	prog_token_fd		fd
}

bpf_attr_3_20$auto_record [
	attach_prog_fd		fd
	attach_btf_obj_fd	fd
]

bpf_attr_4$auto_record {
	pathname	int64
	bpf_fd		fd
	file_flags	int32
	path_fd		fd
}

bpf_attr_5$auto_record {
	bpf_attr_5_0		bpf_attr_5_0$auto_record
	attach_bpf_fd		fd
	attach_type		int32
	attach_flags		int32
	replace_bpf_fd		fd
	bpf_attr_5_5		bpf_attr_5_5$auto_record
	expected_revision	int64
}

bpf_attr_5_0$auto_record [
	target_fd	fd
	target_ifindex	ifindex
]

bpf_attr_5_5$auto_record [
	relative_fd	fd
	relative_id	int32
]

bpf_attr_7$auto_record {
	bpf_attr_7_0	bpf_attr_7_0$auto_record
	next_id		int32
	open_flags	int32
}

bpf_attr_7_0$auto_record [
	start_id	int32
	prog_id		int32
	map_id		int32
	btf_id		int32
	link_id		int32
]

bpf_attr_batch$auto_record {
	in_batch	int64
	out_batch	int64
	keys		int64
	values		int64
	count		int32
	map_fd		fd
	elem_flags	int64
	flags		int64
}

bpf_attr_enable_stats$auto_record {
	type	int32
}

bpf_attr_info$auto_record {
	bpf_fd		fd
	info_len	int32
	info		int64
}

bpf_attr_iter_create$auto_record {
	link_fd	fd
	flags	int32
}

bpf_attr_link_create$auto_record {
	bpf_attr_link_create_0	bpf_attr_link_create_0$auto_record
	bpf_attr_link_create_1	bpf_attr_link_create_1$auto_record
	attach_type		int32
	flags			int32
	bpf_attr_link_create_4	bpf_attr_link_create_4$auto_record
}

bpf_attr_link_create_0$auto_record [
	prog_fd	fd
	map_fd	fd
]

bpf_attr_link_create_1$auto_record [
	target_fd	fd
	target_ifindex	ifindex
]

bpf_attr_link_create_4$auto_record [
	target_btf_id			int32
	bpf_attr_link_create_4_1	bpf_attr_link_create_4_1$auto_record
	perf_event			bpf_attr_link_create_4_perf_event$auto_record
	kprobe_multi			bpf_attr_link_create_4_kprobe_multi$auto_record
	tracing				bpf_attr_link_create_4_tracing$auto_record
	netfilter			bpf_attr_link_create_4_netfilter$auto_record
	tcx				bpf_attr_link_create_4_tcx$auto_record
	uprobe_multi			bpf_attr_link_create_4_uprobe_multi$auto_record
	netkit				bpf_attr_link_create_4_netkit$auto_record
]

bpf_attr_link_create_4_1$auto_record {
	iter_info	int64
	iter_info_len	int32
}

bpf_attr_link_create_4_kprobe_multi$auto_record {
	flags	int32
	cnt	int32
	syms	int64
	addrs	int64
	cookies	int64
}

bpf_attr_link_create_4_netfilter$auto_record {
	pf		int32
	hooknum		int32
	priority	int32
	flags		int32
}

bpf_attr_link_create_4_netkit$auto_record {
	bpf_attr_link_create_4_netkit_0	bpf_attr_link_create_4_netkit_0$auto_record
	expected_revision		int64
}

bpf_attr_link_create_4_netkit_0$auto_record [
	relative_fd	fd
	relative_id	int32
]

bpf_attr_link_create_4_perf_event$auto_record {
	bpf_cookie	int64
}

bpf_attr_link_create_4_tcx$auto_record {
	bpf_attr_link_create_4_tcx_0	bpf_attr_link_create_4_tcx_0$auto_record
	expected_revision		int64
}

bpf_attr_link_create_4_tcx_0$auto_record [
	relative_fd	fd
	relative_id	int32
]

bpf_attr_link_create_4_tracing$auto_record {
	target_btf_id	int32
	cookie		int64
}

bpf_attr_link_create_4_uprobe_multi$auto_record {
	path		int64
	offsets		int64
	ref_ctr_offsets	int64
	cookies		int64
	cnt		int32
	flags		int32
	pid		pid
}

bpf_attr_link_detach$auto_record {
	link_fd	fd
}

bpf_attr_link_update$auto_record {
	link_fd			fd
	bpf_attr_link_update_1	bpf_attr_link_update_1$auto_record
	flags			int32
	bpf_attr_link_update_3	bpf_attr_link_update_3$auto_record
}

bpf_attr_link_update_1$auto_record [
	new_prog_fd	fd
	new_map_fd	fd
]

bpf_attr_link_update_3$auto_record [
	old_prog_fd	fd
	old_map_fd	fd
]

bpf_attr_prog_bind_map$auto_record {
	prog_fd	fd
	map_fd	fd
	flags	int32
}

bpf_attr_query$auto_record {
	bpf_attr_query_0	bpf_attr_query_0$auto_record
	attach_type		int32
	query_flags		int32
	attach_flags		int32
	prog_ids		int64
	bpf_attr_query_5	bpf_attr_query_5$auto_record
	bpf_attr_query_6	const[0, int32]
	prog_attach_flags	int64
	link_ids		int64
	link_attach_flags	int64
	revision		int64
}

bpf_attr_query_0$auto_record [
	target_fd	fd
	target_ifindex	ifindex
]

bpf_attr_query_5$auto_record [
	prog_cnt	int32
	count		int32
]

bpf_attr_raw_tracepoint$auto_record {
	name				int64
	prog_fd				fd
	bpf_attr_raw_tracepoint_2	const[0, int32]
	cookie				int64
}

bpf_attr_task_fd_query$auto_record {
	pid		pid
	fd		fd
	flags		int32
	buf_len		int32
	buf		int64
	prog_id		int32
	fd_type		fd
	probe_offset	int64
	probe_addr	int64
}

bpf_attr_test$auto_record {
	prog_fd		fd
	retval		int32
	data_size_in	int32
	data_size_out	int32
	data_in		int64
	data_out	int64
	repeat		int32
	duration	int32
	ctx_size_in	int32
	ctx_size_out	int32
	ctx_in		int64
	ctx_out		int64
	flags		int32
	cpu		int32
	batch_size	int32
}

bpf_attr_token_create$auto_record {
	flags		int32
	bpffs_fd	fd
}

cachestat$auto_record {
	nr_cache		int64
	nr_dirty		int64
	nr_writeback		int64
	nr_evicted		int64
	nr_recently_evicted	int64
}

cachestat_range$auto_record {
	off	int64
	len	int64
}

calipso_genl_policy$auto_netlabel_calipso [
	NLBL_CALIPSO_A_DOI	nlattr[NLBL_CALIPSO_A_DOI, int32]
	NLBL_CALIPSO_A_MTYPE	nlattr[NLBL_CALIPSO_A_MTYPE, int32]
] [varlen]

cgroupstats_cmd_get_policy$auto_taskstats [
	CGROUPSTATS_CMD_ATTR_FD	nlattr[CGROUPSTATS_CMD_ATTR_FD, fd]
] [varlen]

cifs_genl_policy$auto_netlink [
	CIFS_GENL_ATTR_SWN_REGISTRATION_ID	nlattr[CIFS_GENL_ATTR_SWN_REGISTRATION_ID, int32]
	CIFS_GENL_ATTR_SWN_NET_NAME		nlattr[CIFS_GENL_ATTR_SWN_NET_NAME, stringnoz]
	CIFS_GENL_ATTR_SWN_SHARE_NAME		nlattr[CIFS_GENL_ATTR_SWN_SHARE_NAME, stringnoz]
	CIFS_GENL_ATTR_SWN_IP			nlattr[CIFS_GENL_ATTR_SWN_IP, __kernel_sockaddr_storage$auto_record]
	CIFS_GENL_ATTR_SWN_NET_NAME_NOTIFY	nlattr[CIFS_GENL_ATTR_SWN_NET_NAME_NOTIFY, void]
	CIFS_GENL_ATTR_SWN_SHARE_NAME_NOTIFY	nlattr[CIFS_GENL_ATTR_SWN_SHARE_NAME_NOTIFY, void]
	CIFS_GENL_ATTR_SWN_IP_NOTIFY		nlattr[CIFS_GENL_ATTR_SWN_IP_NOTIFY, void]
	CIFS_GENL_ATTR_SWN_KRB_AUTH		nlattr[CIFS_GENL_ATTR_SWN_KRB_AUTH, void]
	CIFS_GENL_ATTR_SWN_USER_NAME		nlattr[CIFS_GENL_ATTR_SWN_USER_NAME, stringnoz]
	CIFS_GENL_ATTR_SWN_PASSWORD		nlattr[CIFS_GENL_ATTR_SWN_PASSWORD, stringnoz]
	CIFS_GENL_ATTR_SWN_DOMAIN_NAME		nlattr[CIFS_GENL_ATTR_SWN_DOMAIN_NAME, stringnoz]
	CIFS_GENL_ATTR_SWN_NOTIFICATION_TYPE	nlattr[CIFS_GENL_ATTR_SWN_NOTIFICATION_TYPE, int32]
	CIFS_GENL_ATTR_SWN_RESOURCE_STATE	nlattr[CIFS_GENL_ATTR_SWN_RESOURCE_STATE, int32]
	CIFS_GENL_ATTR_SWN_RESOURCE_NAME	nlattr[CIFS_GENL_ATTR_SWN_RESOURCE_NAME, stringnoz]
] [varlen]

clone_args$auto_record {
	flags		int64
	pidfd		int64
	child_tid	int64
	parent_tid	int64
	exit_signal	int64
	stack		int64
	stack_size	int64
	tls		int64
	set_tid		int64
	set_tid_size	int64
	cgroup		int64
}

ct_limit_policy$auto_conntrack [
	OVS_CT_LIMIT_ATTR_ZONE_LIMIT	nlattr[OVS_CT_LIMIT_ATTR_ZONE_LIMIT, array[int8]]
] [varlen]

ctrl_policy_family$auto_genetlink [
	CTRL_ATTR_FAMILY_ID	nlattr[CTRL_ATTR_FAMILY_ID, int16]
	CTRL_ATTR_FAMILY_NAME	nlattr[CTRL_ATTR_FAMILY_NAME, string]
] [varlen]

ctrl_policy_policy$auto_genetlink [
	CTRL_ATTR_FAMILY_ID	nlattr[CTRL_ATTR_FAMILY_ID, int16]
	CTRL_ATTR_FAMILY_NAME	nlattr[CTRL_ATTR_FAMILY_NAME, string]
	CTRL_ATTR_OP		nlattr[CTRL_ATTR_OP, int32]
] [varlen]

datapath_policy$auto_datapath [
	OVS_DP_ATTR_NAME		nlattr[OVS_DP_ATTR_NAME, string]
	OVS_DP_ATTR_UPCALL_PID		nlattr[OVS_DP_ATTR_UPCALL_PID, pid]
	OVS_DP_ATTR_USER_FEATURES	nlattr[OVS_DP_ATTR_USER_FEATURES, int32]
	OVS_DP_ATTR_MASKS_CACHE_SIZE	nlattr[OVS_DP_ATTR_MASKS_CACHE_SIZE, int32]
	OVS_DP_ATTR_IFINDEX		nlattr[OVS_DP_ATTR_IFINDEX, ifindex]
] [varlen]

device_policy$auto_netlink [
	WGDEVICE_A_IFINDEX	nlattr[WGDEVICE_A_IFINDEX, ifindex]
	WGDEVICE_A_IFNAME	nlattr[WGDEVICE_A_IFNAME, devname]
	WGDEVICE_A_PRIVATE_KEY	nlattr[WGDEVICE_A_PRIVATE_KEY, array[int8]]
	WGDEVICE_A_PUBLIC_KEY	nlattr[WGDEVICE_A_PUBLIC_KEY, array[int8]]
	WGDEVICE_A_FLAGS	nlattr[WGDEVICE_A_FLAGS, int32]
	WGDEVICE_A_LISTEN_PORT	nlattr[WGDEVICE_A_LISTEN_PORT, sock_port]
	WGDEVICE_A_FWMARK	nlattr[WGDEVICE_A_FWMARK, int32]
	WGDEVICE_A_PEERS	nlattr[WGDEVICE_A_PEERS, array[int8]]
] [varlen]

epoll_event$auto_record {
	events	int32
	data	int64
} [packed]

ethnl_cable_test_act_policy$auto_netlink [
	ETHTOOL_A_CABLE_TEST_HEADER	nlattr[ETHTOOL_A_CABLE_TEST_HEADER, int32]
] [varlen]

ethnl_cable_test_tdr_act_policy$auto_netlink [
	ETHTOOL_A_CABLE_TEST_TDR_HEADER	nlattr[ETHTOOL_A_CABLE_TEST_TDR_HEADER, int32]
	ETHTOOL_A_CABLE_TEST_TDR_CFG	nlattr[ETHTOOL_A_CABLE_TEST_TDR_CFG, array[int8]]
] [varlen]

ethnl_channels_get_policy$auto_netlink [
	ETHTOOL_A_CHANNELS_HEADER	nlattr[ETHTOOL_A_CHANNELS_HEADER, array[int8, 3]]
] [varlen]

ethnl_channels_set_policy$auto_netlink [
	ETHTOOL_A_CHANNELS_HEADER		nlattr[ETHTOOL_A_CHANNELS_HEADER, array[int8, 3]]
	ETHTOOL_A_CHANNELS_RX_COUNT		nlattr[ETHTOOL_A_CHANNELS_RX_COUNT, int32]
	ETHTOOL_A_CHANNELS_TX_COUNT		nlattr[ETHTOOL_A_CHANNELS_TX_COUNT, int32]
	ETHTOOL_A_CHANNELS_OTHER_COUNT		nlattr[ETHTOOL_A_CHANNELS_OTHER_COUNT, int32]
	ETHTOOL_A_CHANNELS_COMBINED_COUNT	nlattr[ETHTOOL_A_CHANNELS_COMBINED_COUNT, int32]
] [varlen]

ethnl_coalesce_get_policy$auto_netlink [
	ETHTOOL_A_COALESCE_HEADER	nlattr[ETHTOOL_A_COALESCE_HEADER, array[int8, 3]]
] [varlen]

ethnl_coalesce_set_policy$auto_netlink [
	ETHTOOL_A_COALESCE_HEADER		nlattr[ETHTOOL_A_COALESCE_HEADER, array[int8, 3]]
	ETHTOOL_A_COALESCE_RX_USECS		nlattr[ETHTOOL_A_COALESCE_RX_USECS, int32]
	ETHTOOL_A_COALESCE_RX_MAX_FRAMES	nlattr[ETHTOOL_A_COALESCE_RX_MAX_FRAMES, int32]
	ETHTOOL_A_COALESCE_RX_USECS_IRQ		nlattr[ETHTOOL_A_COALESCE_RX_USECS_IRQ, int32]
	ETHTOOL_A_COALESCE_RX_MAX_FRAMES_IRQ	nlattr[ETHTOOL_A_COALESCE_RX_MAX_FRAMES_IRQ, int32]
	ETHTOOL_A_COALESCE_TX_USECS		nlattr[ETHTOOL_A_COALESCE_TX_USECS, int32]
	ETHTOOL_A_COALESCE_TX_MAX_FRAMES	nlattr[ETHTOOL_A_COALESCE_TX_MAX_FRAMES, int32]
	ETHTOOL_A_COALESCE_TX_USECS_IRQ		nlattr[ETHTOOL_A_COALESCE_TX_USECS_IRQ, int32]
	ETHTOOL_A_COALESCE_TX_MAX_FRAMES_IRQ	nlattr[ETHTOOL_A_COALESCE_TX_MAX_FRAMES_IRQ, int32]
	ETHTOOL_A_COALESCE_STATS_BLOCK_USECS	nlattr[ETHTOOL_A_COALESCE_STATS_BLOCK_USECS, int32]
	ETHTOOL_A_COALESCE_USE_ADAPTIVE_RX	nlattr[ETHTOOL_A_COALESCE_USE_ADAPTIVE_RX, int8]
	ETHTOOL_A_COALESCE_USE_ADAPTIVE_TX	nlattr[ETHTOOL_A_COALESCE_USE_ADAPTIVE_TX, int8]
	ETHTOOL_A_COALESCE_PKT_RATE_LOW		nlattr[ETHTOOL_A_COALESCE_PKT_RATE_LOW, int32]
	ETHTOOL_A_COALESCE_RX_USECS_LOW		nlattr[ETHTOOL_A_COALESCE_RX_USECS_LOW, int32]
	ETHTOOL_A_COALESCE_RX_MAX_FRAMES_LOW	nlattr[ETHTOOL_A_COALESCE_RX_MAX_FRAMES_LOW, int32]
	ETHTOOL_A_COALESCE_TX_USECS_LOW		nlattr[ETHTOOL_A_COALESCE_TX_USECS_LOW, int32]
	ETHTOOL_A_COALESCE_TX_MAX_FRAMES_LOW	nlattr[ETHTOOL_A_COALESCE_TX_MAX_FRAMES_LOW, int32]
	ETHTOOL_A_COALESCE_PKT_RATE_HIGH	nlattr[ETHTOOL_A_COALESCE_PKT_RATE_HIGH, int32]
	ETHTOOL_A_COALESCE_RX_USECS_HIGH	nlattr[ETHTOOL_A_COALESCE_RX_USECS_HIGH, int32]
	ETHTOOL_A_COALESCE_RX_MAX_FRAMES_HIGH	nlattr[ETHTOOL_A_COALESCE_RX_MAX_FRAMES_HIGH, int32]
	ETHTOOL_A_COALESCE_TX_USECS_HIGH	nlattr[ETHTOOL_A_COALESCE_TX_USECS_HIGH, int32]
	ETHTOOL_A_COALESCE_TX_MAX_FRAMES_HIGH	nlattr[ETHTOOL_A_COALESCE_TX_MAX_FRAMES_HIGH, int32]
	ETHTOOL_A_COALESCE_RATE_SAMPLE_INTERVAL	nlattr[ETHTOOL_A_COALESCE_RATE_SAMPLE_INTERVAL, int32]
	ETHTOOL_A_COALESCE_USE_CQE_MODE_TX	nlattr[ETHTOOL_A_COALESCE_USE_CQE_MODE_TX, int8]
	ETHTOOL_A_COALESCE_USE_CQE_MODE_RX	nlattr[ETHTOOL_A_COALESCE_USE_CQE_MODE_RX, int8]
	ETHTOOL_A_COALESCE_TX_AGGR_MAX_BYTES	nlattr[ETHTOOL_A_COALESCE_TX_AGGR_MAX_BYTES, int32]
	ETHTOOL_A_COALESCE_TX_AGGR_MAX_FRAMES	nlattr[ETHTOOL_A_COALESCE_TX_AGGR_MAX_FRAMES, int32]
	ETHTOOL_A_COALESCE_TX_AGGR_TIME_USECS	nlattr[ETHTOOL_A_COALESCE_TX_AGGR_TIME_USECS, int32]
	ETHTOOL_A_COALESCE_RX_PROFILE		nlattr[ETHTOOL_A_COALESCE_RX_PROFILE, int8]
	ETHTOOL_A_COALESCE_TX_PROFILE		nlattr[ETHTOOL_A_COALESCE_TX_PROFILE, int8]
] [varlen]

ethnl_debug_get_policy$auto_netlink [
	ETHTOOL_A_DEBUG_HEADER	nlattr[ETHTOOL_A_DEBUG_HEADER, array[int8, 3]]
] [varlen]

ethnl_debug_set_policy$auto_netlink [
	ETHTOOL_A_DEBUG_HEADER	nlattr[ETHTOOL_A_DEBUG_HEADER, array[int8, 3]]
	ETHTOOL_A_DEBUG_MSGMASK	nlattr[ETHTOOL_A_DEBUG_MSGMASK, array[int8]]
] [varlen]

ethnl_eee_get_policy$auto_netlink [
	ETHTOOL_A_EEE_HEADER	nlattr[ETHTOOL_A_EEE_HEADER, array[int8, 3]]
] [varlen]

ethnl_eee_set_policy$auto_netlink [
	ETHTOOL_A_EEE_HEADER		nlattr[ETHTOOL_A_EEE_HEADER, array[int8, 3]]
	ETHTOOL_A_EEE_MODES_OURS	nlattr[ETHTOOL_A_EEE_MODES_OURS, array[int8]]
	ETHTOOL_A_EEE_ENABLED		nlattr[ETHTOOL_A_EEE_ENABLED, bool8]
	ETHTOOL_A_EEE_TX_LPI_ENABLED	nlattr[ETHTOOL_A_EEE_TX_LPI_ENABLED, bool8]
	ETHTOOL_A_EEE_TX_LPI_TIMER	nlattr[ETHTOOL_A_EEE_TX_LPI_TIMER, int32]
] [varlen]

ethnl_features_get_policy$auto_netlink [
	ETHTOOL_A_FEATURES_HEADER	nlattr[ETHTOOL_A_FEATURES_HEADER, array[int8, 3]]
] [varlen]

ethnl_features_set_policy$auto_netlink [
	ETHTOOL_A_FEATURES_HEADER	nlattr[ETHTOOL_A_FEATURES_HEADER, array[int8, 3]]
	ETHTOOL_A_FEATURES_WANTED	nlattr[ETHTOOL_A_FEATURES_WANTED, array[int8]]
] [varlen]

ethnl_fec_get_policy$auto_netlink [
	ETHTOOL_A_FEC_HEADER	nlattr[ETHTOOL_A_FEC_HEADER, array[int8, 3]]
] [varlen]

ethnl_fec_set_policy$auto_netlink [
	ETHTOOL_A_FEC_HEADER	nlattr[ETHTOOL_A_FEC_HEADER, array[int8, 3]]
	ETHTOOL_A_FEC_MODES	nlattr[ETHTOOL_A_FEC_MODES, array[int8]]
	ETHTOOL_A_FEC_AUTO	nlattr[ETHTOOL_A_FEC_AUTO, int8]
] [varlen]

ethnl_linkinfo_get_policy$auto_netlink [
	ETHTOOL_A_LINKINFO_HEADER	nlattr[ETHTOOL_A_LINKINFO_HEADER, array[int8, 3]]
] [varlen]

ethnl_linkinfo_set_policy$auto_netlink [
	ETHTOOL_A_LINKINFO_HEADER	nlattr[ETHTOOL_A_LINKINFO_HEADER, array[int8, 3]]
	ETHTOOL_A_LINKINFO_PORT		nlattr[ETHTOOL_A_LINKINFO_PORT, int8]
	ETHTOOL_A_LINKINFO_PHYADDR	nlattr[ETHTOOL_A_LINKINFO_PHYADDR, int8]
	ETHTOOL_A_LINKINFO_TP_MDIX_CTRL	nlattr[ETHTOOL_A_LINKINFO_TP_MDIX_CTRL, int8]
] [varlen]

ethnl_linkmodes_get_policy$auto_netlink [
	ETHTOOL_A_LINKMODES_HEADER	nlattr[ETHTOOL_A_LINKMODES_HEADER, array[int8, 3]]
] [varlen]

ethnl_linkmodes_set_policy$auto_netlink [
	ETHTOOL_A_LINKMODES_HEADER		nlattr[ETHTOOL_A_LINKMODES_HEADER, array[int8, 3]]
	ETHTOOL_A_LINKMODES_AUTONEG		nlattr[ETHTOOL_A_LINKMODES_AUTONEG, int8]
	ETHTOOL_A_LINKMODES_OURS		nlattr[ETHTOOL_A_LINKMODES_OURS, array[int8]]
	ETHTOOL_A_LINKMODES_SPEED		nlattr[ETHTOOL_A_LINKMODES_SPEED, int32]
	ETHTOOL_A_LINKMODES_DUPLEX		nlattr[ETHTOOL_A_LINKMODES_DUPLEX, int8]
	ETHTOOL_A_LINKMODES_MASTER_SLAVE_CFG	nlattr[ETHTOOL_A_LINKMODES_MASTER_SLAVE_CFG, int8]
	ETHTOOL_A_LINKMODES_LANES		nlattr[ETHTOOL_A_LINKMODES_LANES, int32]
] [varlen]

ethnl_linkstate_get_policy$auto_netlink [
	ETHTOOL_A_LINKSTATE_HEADER	nlattr[ETHTOOL_A_LINKSTATE_HEADER, array[int8, 3]]
] [varlen]

ethnl_mm_get_policy$auto_netlink [
	ETHTOOL_A_MM_HEADER	nlattr[ETHTOOL_A_MM_HEADER, array[int8, 3]]
] [varlen]

ethnl_mm_set_policy$auto_netlink [
	ETHTOOL_A_MM_HEADER		nlattr[ETHTOOL_A_MM_HEADER, array[int8, 3]]
	ETHTOOL_A_MM_PMAC_ENABLED	nlattr[ETHTOOL_A_MM_PMAC_ENABLED, bool8]
	ETHTOOL_A_MM_TX_ENABLED		nlattr[ETHTOOL_A_MM_TX_ENABLED, bool8]
	ETHTOOL_A_MM_TX_MIN_FRAG_SIZE	nlattr[ETHTOOL_A_MM_TX_MIN_FRAG_SIZE, int32]
	ETHTOOL_A_MM_VERIFY_ENABLED	nlattr[ETHTOOL_A_MM_VERIFY_ENABLED, bool8]
	ETHTOOL_A_MM_VERIFY_TIME	nlattr[ETHTOOL_A_MM_VERIFY_TIME, int32]
] [varlen]

ethnl_module_eeprom_get_policy$auto_netlink [
	ETHTOOL_A_MODULE_EEPROM_HEADER		nlattr[ETHTOOL_A_MODULE_EEPROM_HEADER, array[int8, 3]]
	ETHTOOL_A_MODULE_EEPROM_OFFSET		nlattr[ETHTOOL_A_MODULE_EEPROM_OFFSET, int32]
	ETHTOOL_A_MODULE_EEPROM_LENGTH		nlattr[ETHTOOL_A_MODULE_EEPROM_LENGTH, int32]
	ETHTOOL_A_MODULE_EEPROM_PAGE		nlattr[ETHTOOL_A_MODULE_EEPROM_PAGE, int8]
	ETHTOOL_A_MODULE_EEPROM_BANK		nlattr[ETHTOOL_A_MODULE_EEPROM_BANK, int8]
	ETHTOOL_A_MODULE_EEPROM_I2C_ADDRESS	nlattr[ETHTOOL_A_MODULE_EEPROM_I2C_ADDRESS, int8]
] [varlen]

ethnl_module_fw_flash_act_policy$auto_netlink [
	ETHTOOL_A_MODULE_FW_FLASH_HEADER	nlattr[ETHTOOL_A_MODULE_FW_FLASH_HEADER, array[int8, 3]]
	ETHTOOL_A_MODULE_FW_FLASH_FILE_NAME	nlattr[ETHTOOL_A_MODULE_FW_FLASH_FILE_NAME, string]
	ETHTOOL_A_MODULE_FW_FLASH_PASSWORD	nlattr[ETHTOOL_A_MODULE_FW_FLASH_PASSWORD, int32]
] [varlen]

ethnl_module_get_policy$auto_netlink [
	ETHTOOL_A_MODULE_HEADER	nlattr[ETHTOOL_A_MODULE_HEADER, array[int8, 3]]
] [varlen]

ethnl_module_set_policy$auto_netlink [
	ETHTOOL_A_MODULE_HEADER			nlattr[ETHTOOL_A_MODULE_HEADER, array[int8, 3]]
	ETHTOOL_A_MODULE_POWER_MODE_POLICY	nlattr[ETHTOOL_A_MODULE_POWER_MODE_POLICY, int8]
] [varlen]

ethnl_pause_get_policy$auto_netlink [
	ETHTOOL_A_PAUSE_HEADER		nlattr[ETHTOOL_A_PAUSE_HEADER, array[int8, 3]]
	ETHTOOL_A_PAUSE_STATS_SRC	nlattr[ETHTOOL_A_PAUSE_STATS_SRC, int32]
] [varlen]

ethnl_pause_set_policy$auto_netlink [
	ETHTOOL_A_PAUSE_HEADER	nlattr[ETHTOOL_A_PAUSE_HEADER, array[int8, 3]]
	ETHTOOL_A_PAUSE_AUTONEG	nlattr[ETHTOOL_A_PAUSE_AUTONEG, int8]
	ETHTOOL_A_PAUSE_RX	nlattr[ETHTOOL_A_PAUSE_RX, int8]
	ETHTOOL_A_PAUSE_TX	nlattr[ETHTOOL_A_PAUSE_TX, int8]
] [varlen]

ethnl_phc_vclocks_get_policy$auto_netlink [
	ETHTOOL_A_PHC_VCLOCKS_HEADER	nlattr[ETHTOOL_A_PHC_VCLOCKS_HEADER, array[int8, 3]]
] [varlen]

ethnl_phy_get_policy$auto_netlink [
	ETHTOOL_A_PHY_HEADER	nlattr[ETHTOOL_A_PHY_HEADER, array[int8, 3]]
] [varlen]

ethnl_plca_get_cfg_policy$auto_netlink [
	ETHTOOL_A_PLCA_HEADER	nlattr[ETHTOOL_A_PLCA_HEADER, int32]
] [varlen]

ethnl_plca_get_status_policy$auto_netlink [
	ETHTOOL_A_PLCA_HEADER	nlattr[ETHTOOL_A_PLCA_HEADER, int32]
] [varlen]

ethnl_plca_set_cfg_policy$auto_netlink [
	ETHTOOL_A_PLCA_HEADER		nlattr[ETHTOOL_A_PLCA_HEADER, int32]
	ETHTOOL_A_PLCA_ENABLED		nlattr[ETHTOOL_A_PLCA_ENABLED, bool8]
	ETHTOOL_A_PLCA_NODE_CNT		nlattr[ETHTOOL_A_PLCA_NODE_CNT, int32]
	ETHTOOL_A_PLCA_NODE_ID		nlattr[ETHTOOL_A_PLCA_NODE_ID, int32]
	ETHTOOL_A_PLCA_TO_TMR		nlattr[ETHTOOL_A_PLCA_TO_TMR, int32]
	ETHTOOL_A_PLCA_BURST_CNT	nlattr[ETHTOOL_A_PLCA_BURST_CNT, int32]
	ETHTOOL_A_PLCA_BURST_TMR	nlattr[ETHTOOL_A_PLCA_BURST_TMR, int32]
] [varlen]

ethnl_privflags_get_policy$auto_netlink [
	ETHTOOL_A_PRIVFLAGS_HEADER	nlattr[ETHTOOL_A_PRIVFLAGS_HEADER, array[int8, 3]]
] [varlen]

ethnl_privflags_set_policy$auto_netlink [
	ETHTOOL_A_PRIVFLAGS_HEADER	nlattr[ETHTOOL_A_PRIVFLAGS_HEADER, array[int8, 3]]
	ETHTOOL_A_PRIVFLAGS_FLAGS	nlattr[ETHTOOL_A_PRIVFLAGS_FLAGS, array[int8]]
] [varlen]

ethnl_pse_get_policy$auto_netlink [
	ETHTOOL_A_PSE_HEADER	nlattr[ETHTOOL_A_PSE_HEADER, int32]
] [varlen]

ethnl_pse_set_policy$auto_netlink [
	ETHTOOL_A_PSE_HEADER			nlattr[ETHTOOL_A_PSE_HEADER, int32]
	ETHTOOL_A_PODL_PSE_ADMIN_CONTROL	nlattr[ETHTOOL_A_PODL_PSE_ADMIN_CONTROL, int32]
	ETHTOOL_A_C33_PSE_ADMIN_CONTROL		nlattr[ETHTOOL_A_C33_PSE_ADMIN_CONTROL, int32]
	ETHTOOL_A_C33_PSE_AVAIL_PW_LIMIT	nlattr[ETHTOOL_A_C33_PSE_AVAIL_PW_LIMIT, int32]
] [varlen]

ethnl_rings_get_policy$auto_netlink [
	ETHTOOL_A_RINGS_HEADER	nlattr[ETHTOOL_A_RINGS_HEADER, array[int8, 3]]
] [varlen]

ethnl_rings_set_policy$auto_netlink [
	ETHTOOL_A_RINGS_HEADER		nlattr[ETHTOOL_A_RINGS_HEADER, array[int8, 3]]
	ETHTOOL_A_RINGS_RX		nlattr[ETHTOOL_A_RINGS_RX, int32]
	ETHTOOL_A_RINGS_RX_MINI		nlattr[ETHTOOL_A_RINGS_RX_MINI, int32]
	ETHTOOL_A_RINGS_RX_JUMBO	nlattr[ETHTOOL_A_RINGS_RX_JUMBO, int32]
	ETHTOOL_A_RINGS_TX		nlattr[ETHTOOL_A_RINGS_TX, int32]
	ETHTOOL_A_RINGS_RX_BUF_LEN	nlattr[ETHTOOL_A_RINGS_RX_BUF_LEN, int32]
	ETHTOOL_A_RINGS_TCP_DATA_SPLIT	nlattr[ETHTOOL_A_RINGS_TCP_DATA_SPLIT, int8]
	ETHTOOL_A_RINGS_CQE_SIZE	nlattr[ETHTOOL_A_RINGS_CQE_SIZE, int32]
	ETHTOOL_A_RINGS_TX_PUSH		nlattr[ETHTOOL_A_RINGS_TX_PUSH, int8]
	ETHTOOL_A_RINGS_RX_PUSH		nlattr[ETHTOOL_A_RINGS_RX_PUSH, int8]
	ETHTOOL_A_RINGS_TX_PUSH_BUF_LEN	nlattr[ETHTOOL_A_RINGS_TX_PUSH_BUF_LEN, int32]
] [varlen]

ethnl_rss_get_policy$auto_netlink [
	ETHTOOL_A_RSS_HEADER		nlattr[ETHTOOL_A_RSS_HEADER, array[int8, 3]]
	ETHTOOL_A_RSS_CONTEXT		nlattr[ETHTOOL_A_RSS_CONTEXT, int32]
	ETHTOOL_A_RSS_START_CONTEXT	nlattr[ETHTOOL_A_RSS_START_CONTEXT, int32]
] [varlen]

ethnl_stats_get_policy$auto_netlink [
	ETHTOOL_A_STATS_HEADER	nlattr[ETHTOOL_A_STATS_HEADER, array[int8, 3]]
	ETHTOOL_A_STATS_GROUPS	nlattr[ETHTOOL_A_STATS_GROUPS, array[int8]]
	ETHTOOL_A_STATS_SRC	nlattr[ETHTOOL_A_STATS_SRC, int32]
] [varlen]

ethnl_strset_get_policy$auto_netlink [
	ETHTOOL_A_STRSET_HEADER		nlattr[ETHTOOL_A_STRSET_HEADER, int32]
	ETHTOOL_A_STRSET_STRINGSETS	nlattr[ETHTOOL_A_STRSET_STRINGSETS, array[int8]]
	ETHTOOL_A_STRSET_COUNTS_ONLY	nlattr[ETHTOOL_A_STRSET_COUNTS_ONLY, void]
] [varlen]

ethnl_tsinfo_get_policy$auto_netlink [
	ETHTOOL_A_TSINFO_HEADER	nlattr[ETHTOOL_A_TSINFO_HEADER, array[int8, 3]]
] [varlen]

ethnl_tunnel_info_get_policy$auto_netlink [
	ETHTOOL_A_TUNNEL_INFO_HEADER	nlattr[ETHTOOL_A_TUNNEL_INFO_HEADER, array[int8, 3]]
] [varlen]

ethnl_wol_get_policy$auto_netlink [
	ETHTOOL_A_WOL_HEADER	nlattr[ETHTOOL_A_WOL_HEADER, array[int8, 3]]
] [varlen]

ethnl_wol_set_policy$auto_netlink [
	ETHTOOL_A_WOL_HEADER	nlattr[ETHTOOL_A_WOL_HEADER, array[int8, 3]]
	ETHTOOL_A_WOL_MODES	nlattr[ETHTOOL_A_WOL_MODES, array[int8]]
	ETHTOOL_A_WOL_SOPASS	nlattr[ETHTOOL_A_WOL_SOPASS, array[int8, 0:6]]
] [varlen]

file_handle$auto_record {
	handle_bytes	len[f_handle, int32]
	handle_type	int32
	f_handle	array[int8]
}

flow_policy$auto_datapath [
	OVS_FLOW_ATTR_KEY		nlattr[OVS_FLOW_ATTR_KEY, array[int8]]
	OVS_FLOW_ATTR_ACTIONS		nlattr[OVS_FLOW_ATTR_ACTIONS, array[int8]]
	OVS_FLOW_ATTR_CLEAR		nlattr[OVS_FLOW_ATTR_CLEAR, void]
	OVS_FLOW_ATTR_MASK		nlattr[OVS_FLOW_ATTR_MASK, array[int8]]
	OVS_FLOW_ATTR_PROBE		nlattr[OVS_FLOW_ATTR_PROBE, void]
	OVS_FLOW_ATTR_UFID		nlattr[OVS_FLOW_ATTR_UFID, int8]
	OVS_FLOW_ATTR_UFID_FLAGS	nlattr[OVS_FLOW_ATTR_UFID_FLAGS, int32]
] [varlen]

futex_waitv$auto_record {
	val		int64
	uaddr		int64
	flags		int32
	__reserved	const[0, int32]
}

getcpu_cache$auto_record {
	blob	array[intptr, 16]
}

gtp_genl_policy$auto_gtp [
	GTPA_LINK		nlattr[GTPA_LINK, int32]
	GTPA_VERSION		nlattr[GTPA_VERSION, int32]
	GTPA_TID		nlattr[GTPA_TID, int64]
	GTPA_PEER_ADDRESS	nlattr[GTPA_PEER_ADDRESS, int32]
	GTPA_MS_ADDRESS		nlattr[GTPA_MS_ADDRESS, int32]
	GTPA_FLOW		nlattr[GTPA_FLOW, int16]
	GTPA_NET_NS_FD		nlattr[GTPA_NET_NS_FD, fd_namespace]
	GTPA_I_TEI		nlattr[GTPA_I_TEI, int32]
	GTPA_O_TEI		nlattr[GTPA_O_TEI, int32]
	GTPA_PEER_ADDR6		nlattr[GTPA_PEER_ADDR6, in6_addr$auto_record]
	GTPA_MS_ADDR6		nlattr[GTPA_MS_ADDR6, in6_addr$auto_record]
	GTPA_FAMILY		nlattr[GTPA_FAMILY, int8]
] [varlen]

handshake_accept_nl_policy$auto_genl [
	HANDSHAKE_A_ACCEPT_HANDLER_CLASS	nlattr[HANDSHAKE_A_ACCEPT_HANDLER_CLASS, int32]
] [varlen]

handshake_done_nl_policy$auto_genl [
	HANDSHAKE_A_DONE_STATUS		nlattr[HANDSHAKE_A_DONE_STATUS, int32]
	HANDSHAKE_A_DONE_SOCKFD		nlattr[HANDSHAKE_A_DONE_SOCKFD, fd]
	HANDSHAKE_A_DONE_REMOTE_AUTH	nlattr[HANDSHAKE_A_DONE_REMOTE_AUTH, int32]
] [varlen]

hsr_genl_policy$auto_hsr_netlink [
	HSR_A_NODE_ADDR		nlattr[HSR_A_NODE_ADDR, array[int8, 6]]
	HSR_A_IFINDEX		nlattr[HSR_A_IFINDEX, ifindex]
	HSR_A_IF1_AGE		nlattr[HSR_A_IF1_AGE, int32]
	HSR_A_IF2_AGE		nlattr[HSR_A_IF2_AGE, int32]
	HSR_A_NODE_ADDR_B	nlattr[HSR_A_NODE_ADDR_B, array[int8, 6]]
	HSR_A_IF1_SEQ		nlattr[HSR_A_IF1_SEQ, int16]
	HSR_A_IF2_SEQ		nlattr[HSR_A_IF2_SEQ, int16]
] [varlen]

hwsim_genl_policy$auto_mac80211_hwsim [
	HWSIM_ATTR_ADDR_RECEIVER		nlattr[HWSIM_ATTR_ADDR_RECEIVER, array[int8]]
	HWSIM_ATTR_ADDR_TRANSMITTER		nlattr[HWSIM_ATTR_ADDR_TRANSMITTER, array[int8]]
	HWSIM_ATTR_FRAME			nlattr[HWSIM_ATTR_FRAME, array[int8, 0:2304]]
	HWSIM_ATTR_FLAGS			nlattr[HWSIM_ATTR_FLAGS, int32]
	HWSIM_ATTR_RX_RATE			nlattr[HWSIM_ATTR_RX_RATE, int32]
	HWSIM_ATTR_SIGNAL			nlattr[HWSIM_ATTR_SIGNAL, int32]
	HWSIM_ATTR_TX_INFO			nlattr[HWSIM_ATTR_TX_INFO, array[hwsim_tx_rate$auto_record, 0:4]]
	HWSIM_ATTR_COOKIE			nlattr[HWSIM_ATTR_COOKIE, int64]
	HWSIM_ATTR_CHANNELS			nlattr[HWSIM_ATTR_CHANNELS, int32]
	HWSIM_ATTR_RADIO_ID			nlattr[HWSIM_ATTR_RADIO_ID, int32]
	HWSIM_ATTR_REG_HINT_ALPHA2		nlattr[HWSIM_ATTR_REG_HINT_ALPHA2, stringnoz]
	HWSIM_ATTR_REG_CUSTOM_REG		nlattr[HWSIM_ATTR_REG_CUSTOM_REG, int32]
	HWSIM_ATTR_REG_STRICT_REG		nlattr[HWSIM_ATTR_REG_STRICT_REG, void]
	HWSIM_ATTR_SUPPORT_P2P_DEVICE		nlattr[HWSIM_ATTR_SUPPORT_P2P_DEVICE, void]
	HWSIM_ATTR_USE_CHANCTX			nlattr[HWSIM_ATTR_USE_CHANCTX, void]
	HWSIM_ATTR_DESTROY_RADIO_ON_CLOSE	nlattr[HWSIM_ATTR_DESTROY_RADIO_ON_CLOSE, void]
	HWSIM_ATTR_RADIO_NAME			nlattr[HWSIM_ATTR_RADIO_NAME, stringnoz]
	HWSIM_ATTR_NO_VIF			nlattr[HWSIM_ATTR_NO_VIF, void]
	HWSIM_ATTR_FREQ				nlattr[HWSIM_ATTR_FREQ, int32]
	HWSIM_ATTR_TX_INFO_FLAGS		nlattr[HWSIM_ATTR_TX_INFO_FLAGS, array[int8]]
	HWSIM_ATTR_PERM_ADDR			nlattr[HWSIM_ATTR_PERM_ADDR, array[int8]]
	HWSIM_ATTR_IFTYPE_SUPPORT		nlattr[HWSIM_ATTR_IFTYPE_SUPPORT, int32]
	HWSIM_ATTR_CIPHER_SUPPORT		nlattr[HWSIM_ATTR_CIPHER_SUPPORT, array[int8]]
	HWSIM_ATTR_MLO_SUPPORT			nlattr[HWSIM_ATTR_MLO_SUPPORT, void]
	HWSIM_ATTR_PMSR_SUPPORT			nlattr[HWSIM_ATTR_PMSR_SUPPORT, array[int8, 5]]
	HWSIM_ATTR_PMSR_RESULT			nlattr[HWSIM_ATTR_PMSR_RESULT, array[int8, 5]]
	HWSIM_ATTR_MULTI_RADIO			nlattr[HWSIM_ATTR_MULTI_RADIO, void]
] [varlen]

hwsim_genl_policy$auto_mac802154_hwsim [
	MAC802154_HWSIM_ATTR_RADIO_ID		nlattr[MAC802154_HWSIM_ATTR_RADIO_ID, int32]
	MAC802154_HWSIM_ATTR_RADIO_EDGE		nlattr[MAC802154_HWSIM_ATTR_RADIO_EDGE, array[int8]]
	MAC802154_HWSIM_ATTR_RADIO_EDGES	nlattr[MAC802154_HWSIM_ATTR_RADIO_EDGES, array[int8]]
] [varlen]

hwsim_tx_rate$auto_record {
	idx	int8
	count	int8
} [packed]

ieee802154_policy$auto_nl802154 [
	IEEE802154_ATTR_DEV_NAME			nlattr[IEEE802154_ATTR_DEV_NAME, devname]
	IEEE802154_ATTR_DEV_INDEX			nlattr[IEEE802154_ATTR_DEV_INDEX, ifindex]
	IEEE802154_ATTR_STATUS				nlattr[IEEE802154_ATTR_STATUS, int8]
	IEEE802154_ATTR_SHORT_ADDR			nlattr[IEEE802154_ATTR_SHORT_ADDR, int16]
	IEEE802154_ATTR_HW_ADDR				nlattr[IEEE802154_ATTR_HW_ADDR, int64]
	IEEE802154_ATTR_PAN_ID				nlattr[IEEE802154_ATTR_PAN_ID, int16]
	IEEE802154_ATTR_CHANNEL				nlattr[IEEE802154_ATTR_CHANNEL, int8]
	IEEE802154_ATTR_COORD_SHORT_ADDR		nlattr[IEEE802154_ATTR_COORD_SHORT_ADDR, int16]
	IEEE802154_ATTR_COORD_HW_ADDR			nlattr[IEEE802154_ATTR_COORD_HW_ADDR, int64]
	IEEE802154_ATTR_COORD_PAN_ID			nlattr[IEEE802154_ATTR_COORD_PAN_ID, int16]
	IEEE802154_ATTR_SRC_SHORT_ADDR			nlattr[IEEE802154_ATTR_SRC_SHORT_ADDR, int16]
	IEEE802154_ATTR_SRC_HW_ADDR			nlattr[IEEE802154_ATTR_SRC_HW_ADDR, int64]
	IEEE802154_ATTR_SRC_PAN_ID			nlattr[IEEE802154_ATTR_SRC_PAN_ID, int16]
	IEEE802154_ATTR_DEST_SHORT_ADDR			nlattr[IEEE802154_ATTR_DEST_SHORT_ADDR, int16]
	IEEE802154_ATTR_DEST_HW_ADDR			nlattr[IEEE802154_ATTR_DEST_HW_ADDR, int64]
	IEEE802154_ATTR_DEST_PAN_ID			nlattr[IEEE802154_ATTR_DEST_PAN_ID, int16]
	IEEE802154_ATTR_CAPABILITY			nlattr[IEEE802154_ATTR_CAPABILITY, int8]
	IEEE802154_ATTR_REASON				nlattr[IEEE802154_ATTR_REASON, int8]
	IEEE802154_ATTR_SCAN_TYPE			nlattr[IEEE802154_ATTR_SCAN_TYPE, int8]
	IEEE802154_ATTR_CHANNELS			nlattr[IEEE802154_ATTR_CHANNELS, int32]
	IEEE802154_ATTR_DURATION			nlattr[IEEE802154_ATTR_DURATION, int8]
	IEEE802154_ATTR_ED_LIST				nlattr[IEEE802154_ATTR_ED_LIST, array[int8, 27]]
	IEEE802154_ATTR_BCN_ORD				nlattr[IEEE802154_ATTR_BCN_ORD, int8]
	IEEE802154_ATTR_SF_ORD				nlattr[IEEE802154_ATTR_SF_ORD, int8]
	IEEE802154_ATTR_PAN_COORD			nlattr[IEEE802154_ATTR_PAN_COORD, int8]
	IEEE802154_ATTR_BAT_EXT				nlattr[IEEE802154_ATTR_BAT_EXT, int8]
	IEEE802154_ATTR_COORD_REALIGN			nlattr[IEEE802154_ATTR_COORD_REALIGN, int8]
	IEEE802154_ATTR_PAGE				nlattr[IEEE802154_ATTR_PAGE, int8]
	IEEE802154_ATTR_CHANNEL_PAGE_LIST		nlattr[IEEE802154_ATTR_CHANNEL_PAGE_LIST, array[int8, 128]]
	IEEE802154_ATTR_PHY_NAME			nlattr[IEEE802154_ATTR_PHY_NAME, stringnoz]
	IEEE802154_ATTR_DEV_TYPE			nlattr[IEEE802154_ATTR_DEV_TYPE, int8]
	IEEE802154_ATTR_TXPOWER				nlattr[IEEE802154_ATTR_TXPOWER, int8]
	IEEE802154_ATTR_LBT_ENABLED			nlattr[IEEE802154_ATTR_LBT_ENABLED, bool8]
	IEEE802154_ATTR_CCA_MODE			nlattr[IEEE802154_ATTR_CCA_MODE, int8]
	IEEE802154_ATTR_CCA_ED_LEVEL			nlattr[IEEE802154_ATTR_CCA_ED_LEVEL, int32]
	IEEE802154_ATTR_CSMA_RETRIES			nlattr[IEEE802154_ATTR_CSMA_RETRIES, int8]
	IEEE802154_ATTR_CSMA_MIN_BE			nlattr[IEEE802154_ATTR_CSMA_MIN_BE, int8]
	IEEE802154_ATTR_CSMA_MAX_BE			nlattr[IEEE802154_ATTR_CSMA_MAX_BE, int8]
	IEEE802154_ATTR_FRAME_RETRIES			nlattr[IEEE802154_ATTR_FRAME_RETRIES, int8]
	IEEE802154_ATTR_LLSEC_ENABLED			nlattr[IEEE802154_ATTR_LLSEC_ENABLED, bool8]
	IEEE802154_ATTR_LLSEC_SECLEVEL			nlattr[IEEE802154_ATTR_LLSEC_SECLEVEL, int8]
	IEEE802154_ATTR_LLSEC_KEY_MODE			nlattr[IEEE802154_ATTR_LLSEC_KEY_MODE, int8]
	IEEE802154_ATTR_LLSEC_KEY_SOURCE_SHORT		nlattr[IEEE802154_ATTR_LLSEC_KEY_SOURCE_SHORT, int32]
	IEEE802154_ATTR_LLSEC_KEY_SOURCE_EXTENDED	nlattr[IEEE802154_ATTR_LLSEC_KEY_SOURCE_EXTENDED, int64]
	IEEE802154_ATTR_LLSEC_KEY_ID			nlattr[IEEE802154_ATTR_LLSEC_KEY_ID, int8]
	IEEE802154_ATTR_LLSEC_FRAME_COUNTER		nlattr[IEEE802154_ATTR_LLSEC_FRAME_COUNTER, int32]
	IEEE802154_ATTR_LLSEC_KEY_BYTES			nlattr[IEEE802154_ATTR_LLSEC_KEY_BYTES, array[int8, 16]]
	IEEE802154_ATTR_LLSEC_KEY_USAGE_FRAME_TYPES	nlattr[IEEE802154_ATTR_LLSEC_KEY_USAGE_FRAME_TYPES, int8]
	IEEE802154_ATTR_LLSEC_KEY_USAGE_COMMANDS	nlattr[IEEE802154_ATTR_LLSEC_KEY_USAGE_COMMANDS, array[int8, 32]]
	IEEE802154_ATTR_LLSEC_FRAME_TYPE		nlattr[IEEE802154_ATTR_LLSEC_FRAME_TYPE, int8]
	IEEE802154_ATTR_LLSEC_CMD_FRAME_ID		nlattr[IEEE802154_ATTR_LLSEC_CMD_FRAME_ID, int8]
	IEEE802154_ATTR_LLSEC_SECLEVELS			nlattr[IEEE802154_ATTR_LLSEC_SECLEVELS, int8]
	IEEE802154_ATTR_LLSEC_DEV_OVERRIDE		nlattr[IEEE802154_ATTR_LLSEC_DEV_OVERRIDE, int8]
	IEEE802154_ATTR_LLSEC_DEV_KEY_MODE		nlattr[IEEE802154_ATTR_LLSEC_DEV_KEY_MODE, int8]
] [varlen]

ila_nl_policy$auto_ila_main [
	ILA_ATTR_LOCATOR	nlattr[ILA_ATTR_LOCATOR, int64]
	ILA_ATTR_LOCATOR_MATCH	nlattr[ILA_ATTR_LOCATOR_MATCH, int64]
	ILA_ATTR_IFINDEX	nlattr[ILA_ATTR_IFINDEX, ifindex]
	ILA_ATTR_CSUM_MODE	nlattr[ILA_ATTR_CSUM_MODE, int8]
	ILA_ATTR_IDENT_TYPE	nlattr[ILA_ATTR_IDENT_TYPE, int8]
] [varlen]

in6_addr$auto_record {
	in6_u	in6_addr_in6_u$auto_record
}

in6_addr_in6_u$auto_record [
	u6_addr8	array[int8, 16]
	u6_addr16	array[int16, 8]
	u6_addr32	array[int32, 4]
]

in_addr$auto_record {
	s_addr	int32
}

io_cqring_offsets$auto_record {
	head		int32
	tail		int32
	ring_mask	int32
	ring_entries	int32
	overflow	int32
	cqes		int32
	flags		int32
	resv1		int32
	user_addr	int64
}

io_event$auto_record {
	data	int64
	obj	int64
	res	int64
	res2	int64
}

io_sqring_offsets$auto_record {
	head		int32
	tail		int32
	ring_mask	int32
	ring_entries	int32
	flags		int32
	dropped		int32
	array		int32
	resv1		int32
	user_addr	int64
}

io_uring_params$auto_record {
	sq_entries	int32
	cq_entries	int32
	flags		int32
	sq_thread_cpu	int32
	sq_thread_idle	int32
	features	int32
	wq_fd		fd
	resv		array[int32, 3]
	sq_off		io_sqring_offsets$auto_record
	cq_off		io_cqring_offsets$auto_record
}

ioam6_genl_policy_addns$auto_ioam6 [
	IOAM6_ATTR_NS_ID	nlattr[IOAM6_ATTR_NS_ID, int16]
	IOAM6_ATTR_NS_DATA	nlattr[IOAM6_ATTR_NS_DATA, int32]
	IOAM6_ATTR_NS_DATA_WIDE	nlattr[IOAM6_ATTR_NS_DATA_WIDE, int64]
] [varlen]

ioam6_genl_policy_addsc$auto_ioam6 [
	IOAM6_ATTR_SC_ID	nlattr[IOAM6_ATTR_SC_ID, int32]
	IOAM6_ATTR_SC_DATA	nlattr[IOAM6_ATTR_SC_DATA, array[int8, 0:1020]]
] [varlen]

ioam6_genl_policy_delns$auto_ioam6 [
	IOAM6_ATTR_NS_ID	nlattr[IOAM6_ATTR_NS_ID, int16]
] [varlen]

ioam6_genl_policy_delsc$auto_ioam6 [
	IOAM6_ATTR_SC_ID	nlattr[IOAM6_ATTR_SC_ID, int32]
] [varlen]

ioam6_genl_policy_ns_sc$auto_ioam6 [
	IOAM6_ATTR_NS_ID	nlattr[IOAM6_ATTR_NS_ID, int16]
	IOAM6_ATTR_SC_ID	nlattr[IOAM6_ATTR_SC_ID, int32]
	IOAM6_ATTR_SC_NONE	nlattr[IOAM6_ATTR_SC_NONE, void]
] [varlen]

iocb$auto_record {
	aio_data	int64
	aio_key		int32
	aio_rw_flags	int32
	aio_lio_opcode	int16
	aio_reqprio	int16
	aio_fildes	fd
	aio_buf		int64
	aio_nbytes	int64
	aio_offset	int64
	aio_reserved2	const[0, int64]
	aio_flags	int32
	aio_resfd	fd
}

iovec$auto_record {
	iov_base	ptr[inout, array[auto_todo]]
	iov_len		intptr
}

ip_vs_cmd_policy$auto_ip_vs_ctl [
	IPVS_CMD_ATTR_SERVICE		nlattr[IPVS_CMD_ATTR_SERVICE, array[int8]]
	IPVS_CMD_ATTR_DEST		nlattr[IPVS_CMD_ATTR_DEST, array[int8]]
	IPVS_CMD_ATTR_DAEMON		nlattr[IPVS_CMD_ATTR_DAEMON, array[int8]]
	IPVS_CMD_ATTR_TIMEOUT_TCP	nlattr[IPVS_CMD_ATTR_TIMEOUT_TCP, int32]
	IPVS_CMD_ATTR_TIMEOUT_TCP_FIN	nlattr[IPVS_CMD_ATTR_TIMEOUT_TCP_FIN, int32]
	IPVS_CMD_ATTR_TIMEOUT_UDP	nlattr[IPVS_CMD_ATTR_TIMEOUT_UDP, int32]
] [varlen]

ipc_perm$auto_record {
	key	int32
	uid	uid
	gid	gid
	cuid	int32
	cgid	int32
	mode	int32
	seq	int16
}

kexec_segment$auto_record {
	kexec_segment_0	kexec_segment_0$auto_record
	bufsz		intptr
	mem		intptr
	memsz		intptr
}

kexec_segment_0$auto_record [
	buf	ptr[inout, array[auto_todo]]
	kbuf	ptr[inout, array[auto_todo]]
]

l2tp_nl_policy$auto_l2tp_netlink [
	L2TP_ATTR_NONE			nlattr[L2TP_ATTR_NONE, array[int8]]
	L2TP_ATTR_PW_TYPE		nlattr[L2TP_ATTR_PW_TYPE, int16]
	L2TP_ATTR_ENCAP_TYPE		nlattr[L2TP_ATTR_ENCAP_TYPE, int16]
	L2TP_ATTR_OFFSET		nlattr[L2TP_ATTR_OFFSET, int16]
	L2TP_ATTR_DATA_SEQ		nlattr[L2TP_ATTR_DATA_SEQ, int8]
	L2TP_ATTR_L2SPEC_TYPE		nlattr[L2TP_ATTR_L2SPEC_TYPE, int8]
	L2TP_ATTR_L2SPEC_LEN		nlattr[L2TP_ATTR_L2SPEC_LEN, int8]
	L2TP_ATTR_PROTO_VERSION		nlattr[L2TP_ATTR_PROTO_VERSION, int8]
	L2TP_ATTR_IFNAME		nlattr[L2TP_ATTR_IFNAME, devname]
	L2TP_ATTR_CONN_ID		nlattr[L2TP_ATTR_CONN_ID, int32]
	L2TP_ATTR_PEER_CONN_ID		nlattr[L2TP_ATTR_PEER_CONN_ID, int32]
	L2TP_ATTR_SESSION_ID		nlattr[L2TP_ATTR_SESSION_ID, int32]
	L2TP_ATTR_PEER_SESSION_ID	nlattr[L2TP_ATTR_PEER_SESSION_ID, int32]
	L2TP_ATTR_UDP_CSUM		nlattr[L2TP_ATTR_UDP_CSUM, int8]
	L2TP_ATTR_VLAN_ID		nlattr[L2TP_ATTR_VLAN_ID, int16]
	L2TP_ATTR_COOKIE		nlattr[L2TP_ATTR_COOKIE, int64]
	L2TP_ATTR_PEER_COOKIE		nlattr[L2TP_ATTR_PEER_COOKIE, int64]
	L2TP_ATTR_DEBUG			nlattr[L2TP_ATTR_DEBUG, int32]
	L2TP_ATTR_RECV_SEQ		nlattr[L2TP_ATTR_RECV_SEQ, int8]
	L2TP_ATTR_SEND_SEQ		nlattr[L2TP_ATTR_SEND_SEQ, int8]
	L2TP_ATTR_LNS_MODE		nlattr[L2TP_ATTR_LNS_MODE, int8]
	L2TP_ATTR_USING_IPSEC		nlattr[L2TP_ATTR_USING_IPSEC, int8]
	L2TP_ATTR_RECV_TIMEOUT		nlattr[L2TP_ATTR_RECV_TIMEOUT, int64]
	L2TP_ATTR_FD			nlattr[L2TP_ATTR_FD, fd]
	L2TP_ATTR_IP_SADDR		nlattr[L2TP_ATTR_IP_SADDR, int32]
	L2TP_ATTR_IP_DADDR		nlattr[L2TP_ATTR_IP_DADDR, int32]
	L2TP_ATTR_UDP_SPORT		nlattr[L2TP_ATTR_UDP_SPORT, sock_port]
	L2TP_ATTR_UDP_DPORT		nlattr[L2TP_ATTR_UDP_DPORT, sock_port]
	L2TP_ATTR_MTU			nlattr[L2TP_ATTR_MTU, int16]
	L2TP_ATTR_MRU			nlattr[L2TP_ATTR_MRU, int16]
	L2TP_ATTR_STATS			nlattr[L2TP_ATTR_STATS, array[int8]]
	L2TP_ATTR_IP6_SADDR		nlattr[L2TP_ATTR_IP6_SADDR, in6_addr$auto_record]
	L2TP_ATTR_IP6_DADDR		nlattr[L2TP_ATTR_IP6_DADDR, in6_addr$auto_record]
] [varlen]

landlock_ruleset_attr$auto_record {
	handled_access_fs	int64
	handled_access_net	int64
	scoped			int64
}

linux_dirent$auto_record {
	d_ino		intptr
	d_off		intptr
	d_reclen	int16
	d_name		array[int8]
}

linux_dirent64$auto_record {
	d_ino		int64
	d_off		int64
	d_reclen	int16
	d_type		int8
	d_name		array[int8]
}

lsm_ctx$auto_record {
	id	int64
	flags	int64
	len	int64
	ctx_len	len[ctx, int64]
	ctx	array[int8]
}

macsec_genl_policy$auto_macsec [
	MACSEC_ATTR_IFINDEX	nlattr[MACSEC_ATTR_IFINDEX, ifindex]
	MACSEC_ATTR_RXSC_CONFIG	nlattr[MACSEC_ATTR_RXSC_CONFIG, array[int8]]
	MACSEC_ATTR_SA_CONFIG	nlattr[MACSEC_ATTR_SA_CONFIG, array[int8]]
	MACSEC_ATTR_OFFLOAD	nlattr[MACSEC_ATTR_OFFLOAD, array[int8]]
] [varlen]

meter_policy$auto_meter [
	OVS_METER_ATTR_ID		nlattr[OVS_METER_ATTR_ID, int32]
	OVS_METER_ATTR_KBPS		nlattr[OVS_METER_ATTR_KBPS, void]
	OVS_METER_ATTR_STATS		nlattr[OVS_METER_ATTR_STATS, ovs_flow_stats$auto_record]
	OVS_METER_ATTR_BANDS		nlattr[OVS_METER_ATTR_BANDS, array[int8]]
	OVS_METER_ATTR_USED		nlattr[OVS_METER_ATTR_USED, int64]
	OVS_METER_ATTR_CLEAR		nlattr[OVS_METER_ATTR_CLEAR, void]
	OVS_METER_ATTR_MAX_METERS	nlattr[OVS_METER_ATTR_MAX_METERS, int32]
	OVS_METER_ATTR_MAX_BANDS	nlattr[OVS_METER_ATTR_MAX_BANDS, int32]
] [varlen]

mmsghdr$auto_record {
	msg_hdr	user_msghdr$auto_record
	msg_len	int32
}

mnt_id_req$auto_record {
	size		int32
	spare		int32
	mnt_id		int64
	param		int64
	mnt_ns_id	int64
}

mount_attr$auto_record {
	attr_set	int64
	attr_clr	int64
	propagation	int64
	userns_fd	int64
}

mq_attr$auto_record {
	mq_flags	intptr
	mq_maxmsg	intptr
	mq_msgsize	intptr
	mq_curmsgs	intptr
	__reserved	array[const[0, intptr], 4]
}

msgbuf$auto_record {
	mtype	intptr
	mtext	int8
}

msqid_ds$auto_record {
	msg_perm	ipc_perm$auto_record
	msg_first	ptr[inout, auto_todo]
	msg_last	ptr[inout, auto_todo]
	msg_stime	intptr
	msg_rtime	intptr
	msg_ctime	intptr
	msg_lcbytes	intptr
	msg_lqbytes	intptr
	msg_cbytes	int16
	msg_qnum	int16
	msg_qbytes	int16
	msg_lspid	int32
	msg_lrpid	int32
}

nbd_attr_policy$auto_nbd [
	NBD_ATTR_INDEX			nlattr[NBD_ATTR_INDEX, int32]
	NBD_ATTR_SIZE_BYTES		nlattr[NBD_ATTR_SIZE_BYTES, int64]
	NBD_ATTR_BLOCK_SIZE_BYTES	nlattr[NBD_ATTR_BLOCK_SIZE_BYTES, int64]
	NBD_ATTR_TIMEOUT		nlattr[NBD_ATTR_TIMEOUT, int64]
	NBD_ATTR_SERVER_FLAGS		nlattr[NBD_ATTR_SERVER_FLAGS, int64]
	NBD_ATTR_CLIENT_FLAGS		nlattr[NBD_ATTR_CLIENT_FLAGS, int64]
	NBD_ATTR_SOCKETS		nlattr[NBD_ATTR_SOCKETS, array[int8]]
	NBD_ATTR_DEAD_CONN_TIMEOUT	nlattr[NBD_ATTR_DEAD_CONN_TIMEOUT, int64]
	NBD_ATTR_DEVICE_LIST		nlattr[NBD_ATTR_DEVICE_LIST, array[int8]]
	NBD_ATTR_BACKEND_IDENTIFIER	nlattr[NBD_ATTR_BACKEND_IDENTIFIER, stringnoz]
] [varlen]

ncsi_genl_policy$auto_ncsi_netlink [
	NCSI_ATTR_IFINDEX	nlattr[NCSI_ATTR_IFINDEX, ifindex]
	NCSI_ATTR_PACKAGE_LIST	nlattr[NCSI_ATTR_PACKAGE_LIST, array[int8]]
	NCSI_ATTR_PACKAGE_ID	nlattr[NCSI_ATTR_PACKAGE_ID, int32]
	NCSI_ATTR_CHANNEL_ID	nlattr[NCSI_ATTR_CHANNEL_ID, int32]
	NCSI_ATTR_DATA		nlattr[NCSI_ATTR_DATA, array[int8, 0:2048]]
	NCSI_ATTR_MULTI_FLAG	nlattr[NCSI_ATTR_MULTI_FLAG, void]
	NCSI_ATTR_PACKAGE_MASK	nlattr[NCSI_ATTR_PACKAGE_MASK, int32]
	NCSI_ATTR_CHANNEL_MASK	nlattr[NCSI_ATTR_CHANNEL_MASK, int32]
] [varlen]

net_dm_nl_policy$auto_drop_monitor [
	NET_DM_ATTR_UNSPEC	nlattr[NET_DM_ATTR_UNSPEC, array[int8]]
	NET_DM_ATTR_ALERT_MODE	nlattr[NET_DM_ATTR_ALERT_MODE, int8]
	NET_DM_ATTR_TRUNC_LEN	nlattr[NET_DM_ATTR_TRUNC_LEN, int32]
	NET_DM_ATTR_QUEUE_LEN	nlattr[NET_DM_ATTR_QUEUE_LEN, int32]
	NET_DM_ATTR_SW_DROPS	nlattr[NET_DM_ATTR_SW_DROPS, void]
	NET_DM_ATTR_HW_DROPS	nlattr[NET_DM_ATTR_HW_DROPS, void]
] [varlen]

netdev_bind_rx_nl_policy$auto_netdev_genl_gen [
	NETDEV_A_DMABUF_IFINDEX	nlattr[NETDEV_A_DMABUF_IFINDEX, ifindex]
	NETDEV_A_DMABUF_QUEUES	nlattr[NETDEV_A_DMABUF_QUEUES, array[int8, 3]]
	NETDEV_A_DMABUF_FD	nlattr[NETDEV_A_DMABUF_FD, fd]
] [varlen]

netdev_dev_get_nl_policy$auto_netdev_genl_gen [
	NETDEV_A_DEV_IFINDEX	nlattr[NETDEV_A_DEV_IFINDEX, ifindex]
] [varlen]

netdev_napi_get_do_nl_policy$auto_netdev_genl_gen [
	NETDEV_A_NAPI_ID	nlattr[NETDEV_A_NAPI_ID, int32]
] [varlen]

netdev_napi_get_dump_nl_policy$auto_netdev_genl_gen [
	NETDEV_A_NAPI_IFINDEX	nlattr[NETDEV_A_NAPI_IFINDEX, ifindex]
] [varlen]

netdev_page_pool_get_nl_policy$auto_netdev_genl_gen [
	NETDEV_A_PAGE_POOL_ID	nlattr[NETDEV_A_PAGE_POOL_ID, int64]
] [varlen]

netdev_qstats_get_nl_policy$auto_netdev_genl_gen [
	NETDEV_A_QSTATS_IFINDEX	nlattr[NETDEV_A_QSTATS_IFINDEX, ifindex]
	NETDEV_A_QSTATS_SCOPE	nlattr[NETDEV_A_QSTATS_SCOPE, int64]
] [varlen]

netdev_queue_get_do_nl_policy$auto_netdev_genl_gen [
	NETDEV_A_QUEUE_ID	nlattr[NETDEV_A_QUEUE_ID, int32]
	NETDEV_A_QUEUE_IFINDEX	nlattr[NETDEV_A_QUEUE_IFINDEX, ifindex]
	NETDEV_A_QUEUE_TYPE	nlattr[NETDEV_A_QUEUE_TYPE, int32]
] [varlen]

netdev_queue_get_dump_nl_policy$auto_netdev_genl_gen [
	NETDEV_A_QUEUE_IFINDEX	nlattr[NETDEV_A_QUEUE_IFINDEX, ifindex]
] [varlen]

netlbl_cipsov4_genl_policy$auto_netlabel_cipso_v4 [
	NLBL_CIPSOV4_A_DOI		nlattr[NLBL_CIPSOV4_A_DOI, int32]
	NLBL_CIPSOV4_A_MTYPE		nlattr[NLBL_CIPSOV4_A_MTYPE, int32]
	NLBL_CIPSOV4_A_TAG		nlattr[NLBL_CIPSOV4_A_TAG, int8]
	NLBL_CIPSOV4_A_TAGLST		nlattr[NLBL_CIPSOV4_A_TAGLST, array[int8]]
	NLBL_CIPSOV4_A_MLSLVLLOC	nlattr[NLBL_CIPSOV4_A_MLSLVLLOC, int32]
	NLBL_CIPSOV4_A_MLSLVLREM	nlattr[NLBL_CIPSOV4_A_MLSLVLREM, int32]
	NLBL_CIPSOV4_A_MLSLVL		nlattr[NLBL_CIPSOV4_A_MLSLVL, array[int8]]
	NLBL_CIPSOV4_A_MLSLVLLST	nlattr[NLBL_CIPSOV4_A_MLSLVLLST, array[int8]]
	NLBL_CIPSOV4_A_MLSCATLOC	nlattr[NLBL_CIPSOV4_A_MLSCATLOC, int32]
	NLBL_CIPSOV4_A_MLSCATREM	nlattr[NLBL_CIPSOV4_A_MLSCATREM, int32]
	NLBL_CIPSOV4_A_MLSCAT		nlattr[NLBL_CIPSOV4_A_MLSCAT, array[int8]]
	NLBL_CIPSOV4_A_MLSCATLST	nlattr[NLBL_CIPSOV4_A_MLSCATLST, array[int8]]
] [varlen]

netlbl_mgmt_genl_policy$auto_netlabel_mgmt [
	NLBL_MGMT_A_DOMAIN	nlattr[NLBL_MGMT_A_DOMAIN, string]
	NLBL_MGMT_A_PROTOCOL	nlattr[NLBL_MGMT_A_PROTOCOL, int32]
	NLBL_MGMT_A_VERSION	nlattr[NLBL_MGMT_A_VERSION, int32]
	NLBL_MGMT_A_CV4DOI	nlattr[NLBL_MGMT_A_CV4DOI, int32]
	NLBL_MGMT_A_FAMILY	nlattr[NLBL_MGMT_A_FAMILY, int16]
	NLBL_MGMT_A_CLPDOI	nlattr[NLBL_MGMT_A_CLPDOI, int32]
] [varlen]

netlbl_unlabel_genl_policy$auto_netlabel_unlabeled [
	NLBL_UNLABEL_A_ACPTFLG	nlattr[NLBL_UNLABEL_A_ACPTFLG, int8]
	NLBL_UNLABEL_A_IPV6ADDR	nlattr[NLBL_UNLABEL_A_IPV6ADDR, in6_addr$auto_record]
	NLBL_UNLABEL_A_IPV6MASK	nlattr[NLBL_UNLABEL_A_IPV6MASK, in6_addr$auto_record]
	NLBL_UNLABEL_A_IPV4ADDR	nlattr[NLBL_UNLABEL_A_IPV4ADDR, in_addr$auto_record]
	NLBL_UNLABEL_A_IPV4MASK	nlattr[NLBL_UNLABEL_A_IPV4MASK, in_addr$auto_record]
	NLBL_UNLABEL_A_IFACE	nlattr[NLBL_UNLABEL_A_IFACE, string]
	NLBL_UNLABEL_A_SECCTX	nlattr[NLBL_UNLABEL_A_SECCTX, array[int8]]
] [varlen]

new_utsname$auto_record {
	sysname		array[int8, 65]
	nodename	array[int8, 65]
	release		array[int8, 65]
	version		array[int8, 65]
	machine		array[int8, 65]
	domainname	array[int8, 65]
}

nfc_genl_policy$auto_netlink [
	NFC_ATTR_DEVICE_INDEX	nlattr[NFC_ATTR_DEVICE_INDEX, int32]
	NFC_ATTR_DEVICE_NAME	nlattr[NFC_ATTR_DEVICE_NAME, stringnoz]
	NFC_ATTR_PROTOCOLS	nlattr[NFC_ATTR_PROTOCOLS, int32]
	NFC_ATTR_TARGET_INDEX	nlattr[NFC_ATTR_TARGET_INDEX, int32]
	NFC_ATTR_COMM_MODE	nlattr[NFC_ATTR_COMM_MODE, int8]
	NFC_ATTR_RF_MODE	nlattr[NFC_ATTR_RF_MODE, int8]
	NFC_ATTR_DEVICE_POWERED	nlattr[NFC_ATTR_DEVICE_POWERED, int8]
	NFC_ATTR_IM_PROTOCOLS	nlattr[NFC_ATTR_IM_PROTOCOLS, int32]
	NFC_ATTR_TM_PROTOCOLS	nlattr[NFC_ATTR_TM_PROTOCOLS, int32]
	NFC_ATTR_LLC_PARAM_LTO	nlattr[NFC_ATTR_LLC_PARAM_LTO, int8]
	NFC_ATTR_LLC_PARAM_RW	nlattr[NFC_ATTR_LLC_PARAM_RW, int8]
	NFC_ATTR_LLC_PARAM_MIUX	nlattr[NFC_ATTR_LLC_PARAM_MIUX, int16]
	NFC_ATTR_LLC_SDP	nlattr[NFC_ATTR_LLC_SDP, array[int8]]
	NFC_ATTR_FIRMWARE_NAME	nlattr[NFC_ATTR_FIRMWARE_NAME, stringnoz]
	NFC_ATTR_SE_INDEX	nlattr[NFC_ATTR_SE_INDEX, int32]
	NFC_ATTR_SE_APDU	nlattr[NFC_ATTR_SE_APDU, array[int8]]
	NFC_ATTR_VENDOR_ID	nlattr[NFC_ATTR_VENDOR_ID, int32]
	NFC_ATTR_VENDOR_SUBCMD	nlattr[NFC_ATTR_VENDOR_SUBCMD, int32]
	NFC_ATTR_VENDOR_DATA	nlattr[NFC_ATTR_VENDOR_DATA, array[int8]]
] [varlen]

nfsd_listener_set_nl_policy$auto_netlink [
	NFSD_A_SERVER_SOCK_ADDR	nlattr[NFSD_A_SERVER_SOCK_ADDR, int16]
] [varlen]

nfsd_pool_mode_set_nl_policy$auto_netlink [
	NFSD_A_POOL_MODE_MODE	nlattr[NFSD_A_POOL_MODE_MODE, string]
] [varlen]

nfsd_threads_set_nl_policy$auto_netlink [
	NFSD_A_SERVER_THREADS	nlattr[NFSD_A_SERVER_THREADS, int32]
	NFSD_A_SERVER_GRACETIME	nlattr[NFSD_A_SERVER_GRACETIME, int32]
	NFSD_A_SERVER_LEASETIME	nlattr[NFSD_A_SERVER_LEASETIME, int32]
	NFSD_A_SERVER_SCOPE	nlattr[NFSD_A_SERVER_SCOPE, string]
] [varlen]

nfsd_version_set_nl_policy$auto_netlink [
	NFSD_A_SERVER_PROTO_VERSION	nlattr[NFSD_A_SERVER_PROTO_VERSION, array[int8, 3]]
] [varlen]

nl80211_bss_select_rssi_adjust$auto_record {
	band	int8
	delta	int8
} [packed]

nl80211_policy$auto_nl80211 [
	NL80211_ATTR_WIPHY				nlattr[NL80211_ATTR_WIPHY, int32]
	NL80211_ATTR_WIPHY_NAME				nlattr[NL80211_ATTR_WIPHY_NAME, string]
	NL80211_ATTR_IFINDEX				nlattr[NL80211_ATTR_IFINDEX, ifindex]
	NL80211_ATTR_IFNAME				nlattr[NL80211_ATTR_IFNAME, devname]
	NL80211_ATTR_IFTYPE				nlattr[NL80211_ATTR_IFTYPE, int32]
	NL80211_ATTR_MAC				nlattr[NL80211_ATTR_MAC, array[int8]]
	NL80211_ATTR_KEY_DATA				nlattr[NL80211_ATTR_KEY_DATA, array[int8, 0:32]]
	NL80211_ATTR_KEY_IDX				nlattr[NL80211_ATTR_KEY_IDX, int8]
	NL80211_ATTR_KEY_CIPHER				nlattr[NL80211_ATTR_KEY_CIPHER, int32]
	NL80211_ATTR_KEY_SEQ				nlattr[NL80211_ATTR_KEY_SEQ, array[int8, 0:16]]
	NL80211_ATTR_KEY_DEFAULT			nlattr[NL80211_ATTR_KEY_DEFAULT, void]
	NL80211_ATTR_BEACON_INTERVAL			nlattr[NL80211_ATTR_BEACON_INTERVAL, int32]
	NL80211_ATTR_DTIM_PERIOD			nlattr[NL80211_ATTR_DTIM_PERIOD, int32]
	NL80211_ATTR_BEACON_HEAD			nlattr[NL80211_ATTR_BEACON_HEAD, array[int8, 0:2304]]
	NL80211_ATTR_BEACON_TAIL			nlattr[NL80211_ATTR_BEACON_TAIL, array[int8, 0:2304]]
	NL80211_ATTR_STA_AID				nlattr[NL80211_ATTR_STA_AID, int16]
	NL80211_ATTR_STA_FLAGS				nlattr[NL80211_ATTR_STA_FLAGS, array[int8]]
	NL80211_ATTR_STA_LISTEN_INTERVAL		nlattr[NL80211_ATTR_STA_LISTEN_INTERVAL, int16]
	NL80211_ATTR_STA_SUPPORTED_RATES		nlattr[NL80211_ATTR_STA_SUPPORTED_RATES, array[int8, 0:32]]
	NL80211_ATTR_STA_VLAN				nlattr[NL80211_ATTR_STA_VLAN, int32]
	NL80211_ATTR_MNTR_FLAGS				nlattr[NL80211_ATTR_MNTR_FLAGS, array[int8]]
	NL80211_ATTR_MESH_ID				nlattr[NL80211_ATTR_MESH_ID, array[int8, 0:32]]
	NL80211_ATTR_STA_PLINK_ACTION			nlattr[NL80211_ATTR_STA_PLINK_ACTION, int8]
	NL80211_ATTR_MPATH_NEXT_HOP			nlattr[NL80211_ATTR_MPATH_NEXT_HOP, array[int8]]
	NL80211_ATTR_BSS_CTS_PROT			nlattr[NL80211_ATTR_BSS_CTS_PROT, int8]
	NL80211_ATTR_BSS_SHORT_PREAMBLE			nlattr[NL80211_ATTR_BSS_SHORT_PREAMBLE, int8]
	NL80211_ATTR_BSS_SHORT_SLOT_TIME		nlattr[NL80211_ATTR_BSS_SHORT_SLOT_TIME, int8]
	NL80211_ATTR_HT_CAPABILITY			nlattr[NL80211_ATTR_HT_CAPABILITY, array[int8]]
	NL80211_ATTR_REG_ALPHA2				nlattr[NL80211_ATTR_REG_ALPHA2, array[int8]]
	NL80211_ATTR_REG_RULES				nlattr[NL80211_ATTR_REG_RULES, array[int8]]
	NL80211_ATTR_MESH_CONFIG			nlattr[NL80211_ATTR_MESH_CONFIG, array[int8]]
	NL80211_ATTR_BSS_BASIC_RATES			nlattr[NL80211_ATTR_BSS_BASIC_RATES, array[int8, 0:32]]
	NL80211_ATTR_WIPHY_TXQ_PARAMS			nlattr[NL80211_ATTR_WIPHY_TXQ_PARAMS, array[int8]]
	NL80211_ATTR_WIPHY_FREQ				nlattr[NL80211_ATTR_WIPHY_FREQ, int32]
	NL80211_ATTR_WIPHY_CHANNEL_TYPE			nlattr[NL80211_ATTR_WIPHY_CHANNEL_TYPE, int32]
	NL80211_ATTR_MGMT_SUBTYPE			nlattr[NL80211_ATTR_MGMT_SUBTYPE, int8]
	NL80211_ATTR_IE					nlattr[NL80211_ATTR_IE, array[int8, 0:2304]]
	NL80211_ATTR_SCAN_FREQUENCIES			nlattr[NL80211_ATTR_SCAN_FREQUENCIES, array[int8]]
	NL80211_ATTR_SCAN_SSIDS				nlattr[NL80211_ATTR_SCAN_SSIDS, array[int8]]
	NL80211_ATTR_FRAME				nlattr[NL80211_ATTR_FRAME, array[int8, 0:2304]]
	NL80211_ATTR_SSID				nlattr[NL80211_ATTR_SSID, array[int8, 0:32]]
	NL80211_ATTR_AUTH_TYPE				nlattr[NL80211_ATTR_AUTH_TYPE, int32]
	NL80211_ATTR_REASON_CODE			nlattr[NL80211_ATTR_REASON_CODE, int16]
	NL80211_ATTR_KEY_TYPE				nlattr[NL80211_ATTR_KEY_TYPE, int32]
	NL80211_ATTR_FREQ_FIXED				nlattr[NL80211_ATTR_FREQ_FIXED, void]
	NL80211_ATTR_WIPHY_RETRY_SHORT			nlattr[NL80211_ATTR_WIPHY_RETRY_SHORT, int8]
	NL80211_ATTR_WIPHY_RETRY_LONG			nlattr[NL80211_ATTR_WIPHY_RETRY_LONG, int8]
	NL80211_ATTR_WIPHY_FRAG_THRESHOLD		nlattr[NL80211_ATTR_WIPHY_FRAG_THRESHOLD, int32]
	NL80211_ATTR_WIPHY_RTS_THRESHOLD		nlattr[NL80211_ATTR_WIPHY_RTS_THRESHOLD, int32]
	NL80211_ATTR_TIMED_OUT				nlattr[NL80211_ATTR_TIMED_OUT, void]
	NL80211_ATTR_USE_MFP				nlattr[NL80211_ATTR_USE_MFP, int32]
	NL80211_ATTR_STA_FLAGS2				nlattr[NL80211_ATTR_STA_FLAGS2, array[int8]]
	NL80211_ATTR_CONTROL_PORT			nlattr[NL80211_ATTR_CONTROL_PORT, void]
	NL80211_ATTR_PRIVACY				nlattr[NL80211_ATTR_PRIVACY, void]
	NL80211_ATTR_STATUS_CODE			nlattr[NL80211_ATTR_STATUS_CODE, int16]
	NL80211_ATTR_CIPHER_SUITE_GROUP			nlattr[NL80211_ATTR_CIPHER_SUITE_GROUP, int32]
	NL80211_ATTR_WPA_VERSIONS			nlattr[NL80211_ATTR_WPA_VERSIONS, int32]
	NL80211_ATTR_PREV_BSSID				nlattr[NL80211_ATTR_PREV_BSSID, array[int8]]
	NL80211_ATTR_KEY				nlattr[NL80211_ATTR_KEY, array[int8]]
	NL80211_ATTR_PID				nlattr[NL80211_ATTR_PID, pid]
	NL80211_ATTR_4ADDR				nlattr[NL80211_ATTR_4ADDR, int8]
	NL80211_ATTR_PMKID				nlattr[NL80211_ATTR_PMKID, array[int8]]
	NL80211_ATTR_DURATION				nlattr[NL80211_ATTR_DURATION, int32]
	NL80211_ATTR_COOKIE				nlattr[NL80211_ATTR_COOKIE, int64]
	NL80211_ATTR_WIPHY_COVERAGE_CLASS		nlattr[NL80211_ATTR_WIPHY_COVERAGE_CLASS, int8]
	NL80211_ATTR_TX_RATES				nlattr[NL80211_ATTR_TX_RATES, array[int8]]
	NL80211_ATTR_FRAME_MATCH			nlattr[NL80211_ATTR_FRAME_MATCH, array[int8]]
	NL80211_ATTR_PS_STATE				nlattr[NL80211_ATTR_PS_STATE, int32]
	NL80211_ATTR_CQM				nlattr[NL80211_ATTR_CQM, array[int8]]
	NL80211_ATTR_LOCAL_STATE_CHANGE			nlattr[NL80211_ATTR_LOCAL_STATE_CHANGE, void]
	NL80211_ATTR_AP_ISOLATE				nlattr[NL80211_ATTR_AP_ISOLATE, int8]
	NL80211_ATTR_WIPHY_TX_POWER_SETTING		nlattr[NL80211_ATTR_WIPHY_TX_POWER_SETTING, int32]
	NL80211_ATTR_WIPHY_TX_POWER_LEVEL		nlattr[NL80211_ATTR_WIPHY_TX_POWER_LEVEL, int32]
	NL80211_ATTR_FRAME_TYPE				nlattr[NL80211_ATTR_FRAME_TYPE, int16]
	NL80211_ATTR_CONTROL_PORT_ETHERTYPE		nlattr[NL80211_ATTR_CONTROL_PORT_ETHERTYPE, sock_port]
	NL80211_ATTR_CONTROL_PORT_NO_ENCRYPT		nlattr[NL80211_ATTR_CONTROL_PORT_NO_ENCRYPT, void]
	NL80211_ATTR_WIPHY_ANTENNA_TX			nlattr[NL80211_ATTR_WIPHY_ANTENNA_TX, int32]
	NL80211_ATTR_WIPHY_ANTENNA_RX			nlattr[NL80211_ATTR_WIPHY_ANTENNA_RX, int32]
	NL80211_ATTR_MCAST_RATE				nlattr[NL80211_ATTR_MCAST_RATE, int32]
	NL80211_ATTR_OFFCHANNEL_TX_OK			nlattr[NL80211_ATTR_OFFCHANNEL_TX_OK, void]
	NL80211_ATTR_BSS_HT_OPMODE			nlattr[NL80211_ATTR_BSS_HT_OPMODE, int16]
	NL80211_ATTR_KEY_DEFAULT_TYPES			nlattr[NL80211_ATTR_KEY_DEFAULT_TYPES, array[int8]]
	NL80211_ATTR_SUPPORT_MESH_AUTH			nlattr[NL80211_ATTR_SUPPORT_MESH_AUTH, void]
	NL80211_ATTR_STA_PLINK_STATE			nlattr[NL80211_ATTR_STA_PLINK_STATE, int8]
	NL80211_ATTR_WOWLAN_TRIGGERS			nlattr[NL80211_ATTR_WOWLAN_TRIGGERS, array[int8]]
	NL80211_ATTR_SCHED_SCAN_INTERVAL		nlattr[NL80211_ATTR_SCHED_SCAN_INTERVAL, int32]
	NL80211_ATTR_REKEY_DATA				nlattr[NL80211_ATTR_REKEY_DATA, array[int8]]
	NL80211_ATTR_SCAN_SUPP_RATES			nlattr[NL80211_ATTR_SCAN_SUPP_RATES, array[int8]]
	NL80211_ATTR_HIDDEN_SSID			nlattr[NL80211_ATTR_HIDDEN_SSID, int32]
	NL80211_ATTR_IE_PROBE_RESP			nlattr[NL80211_ATTR_IE_PROBE_RESP, array[int8, 0:2304]]
	NL80211_ATTR_IE_ASSOC_RESP			nlattr[NL80211_ATTR_IE_ASSOC_RESP, array[int8, 0:2304]]
	NL80211_ATTR_STA_WME				nlattr[NL80211_ATTR_STA_WME, int16]
	NL80211_ATTR_ROAM_SUPPORT			nlattr[NL80211_ATTR_ROAM_SUPPORT, void]
	NL80211_ATTR_SCHED_SCAN_MATCH			nlattr[NL80211_ATTR_SCHED_SCAN_MATCH, array[int8]]
	NL80211_ATTR_TX_NO_CCK_RATE			nlattr[NL80211_ATTR_TX_NO_CCK_RATE, void]
	NL80211_ATTR_TDLS_ACTION			nlattr[NL80211_ATTR_TDLS_ACTION, int8]
	NL80211_ATTR_TDLS_DIALOG_TOKEN			nlattr[NL80211_ATTR_TDLS_DIALOG_TOKEN, int8]
	NL80211_ATTR_TDLS_OPERATION			nlattr[NL80211_ATTR_TDLS_OPERATION, int8]
	NL80211_ATTR_TDLS_SUPPORT			nlattr[NL80211_ATTR_TDLS_SUPPORT, void]
	NL80211_ATTR_TDLS_EXTERNAL_SETUP		nlattr[NL80211_ATTR_TDLS_EXTERNAL_SETUP, void]
	NL80211_ATTR_DONT_WAIT_FOR_ACK			nlattr[NL80211_ATTR_DONT_WAIT_FOR_ACK, void]
	NL80211_ATTR_PROBE_RESP				nlattr[NL80211_ATTR_PROBE_RESP, array[int8, 0:2304]]
	NL80211_ATTR_DFS_REGION				nlattr[NL80211_ATTR_DFS_REGION, int8]
	NL80211_ATTR_DISABLE_HT				nlattr[NL80211_ATTR_DISABLE_HT, void]
	NL80211_ATTR_HT_CAPABILITY_MASK			nlattr[NL80211_ATTR_HT_CAPABILITY_MASK, array[int8, 26]]
	NL80211_ATTR_NOACK_MAP				nlattr[NL80211_ATTR_NOACK_MAP, int16]
	NL80211_ATTR_INACTIVITY_TIMEOUT			nlattr[NL80211_ATTR_INACTIVITY_TIMEOUT, int16]
	NL80211_ATTR_BG_SCAN_PERIOD			nlattr[NL80211_ATTR_BG_SCAN_PERIOD, int16]
	NL80211_ATTR_WDEV				nlattr[NL80211_ATTR_WDEV, int64]
	NL80211_ATTR_USER_REG_HINT_TYPE			nlattr[NL80211_ATTR_USER_REG_HINT_TYPE, int32]
	NL80211_ATTR_AUTH_DATA				nlattr[NL80211_ATTR_AUTH_DATA, array[int8]]
	NL80211_ATTR_VHT_CAPABILITY			nlattr[NL80211_ATTR_VHT_CAPABILITY, array[int8]]
	NL80211_ATTR_SCAN_FLAGS				nlattr[NL80211_ATTR_SCAN_FLAGS, int32]
	NL80211_ATTR_CHANNEL_WIDTH			nlattr[NL80211_ATTR_CHANNEL_WIDTH, int32]
	NL80211_ATTR_CENTER_FREQ1			nlattr[NL80211_ATTR_CENTER_FREQ1, int32]
	NL80211_ATTR_CENTER_FREQ2			nlattr[NL80211_ATTR_CENTER_FREQ2, int32]
	NL80211_ATTR_P2P_CTWINDOW			nlattr[NL80211_ATTR_P2P_CTWINDOW, int8]
	NL80211_ATTR_P2P_OPPPS				nlattr[NL80211_ATTR_P2P_OPPPS, int8]
	NL80211_ATTR_LOCAL_MESH_POWER_MODE		nlattr[NL80211_ATTR_LOCAL_MESH_POWER_MODE, int32]
	NL80211_ATTR_ACL_POLICY				nlattr[NL80211_ATTR_ACL_POLICY, int32]
	NL80211_ATTR_MAC_ADDRS				nlattr[NL80211_ATTR_MAC_ADDRS, array[int8]]
	NL80211_ATTR_STA_CAPABILITY			nlattr[NL80211_ATTR_STA_CAPABILITY, int16]
	NL80211_ATTR_STA_EXT_CAPABILITY			nlattr[NL80211_ATTR_STA_EXT_CAPABILITY, array[int8]]
	NL80211_ATTR_SPLIT_WIPHY_DUMP			nlattr[NL80211_ATTR_SPLIT_WIPHY_DUMP, void]
	NL80211_ATTR_DISABLE_VHT			nlattr[NL80211_ATTR_DISABLE_VHT, void]
	NL80211_ATTR_VHT_CAPABILITY_MASK		nlattr[NL80211_ATTR_VHT_CAPABILITY_MASK, array[int8, 12]]
	NL80211_ATTR_MDID				nlattr[NL80211_ATTR_MDID, int16]
	NL80211_ATTR_IE_RIC				nlattr[NL80211_ATTR_IE_RIC, array[int8, 0:2304]]
	NL80211_ATTR_CRIT_PROT_ID			nlattr[NL80211_ATTR_CRIT_PROT_ID, int16]
	NL80211_ATTR_MAX_CRIT_PROT_DURATION		nlattr[NL80211_ATTR_MAX_CRIT_PROT_DURATION, int16]
	NL80211_ATTR_PEER_AID				nlattr[NL80211_ATTR_PEER_AID, int16]
	NL80211_ATTR_CH_SWITCH_COUNT			nlattr[NL80211_ATTR_CH_SWITCH_COUNT, int32]
	NL80211_ATTR_CH_SWITCH_BLOCK_TX			nlattr[NL80211_ATTR_CH_SWITCH_BLOCK_TX, void]
	NL80211_ATTR_CSA_IES				nlattr[NL80211_ATTR_CSA_IES, array[int8]]
	NL80211_ATTR_CNTDWN_OFFS_BEACON			nlattr[NL80211_ATTR_CNTDWN_OFFS_BEACON, array[int8]]
	NL80211_ATTR_CNTDWN_OFFS_PRESP			nlattr[NL80211_ATTR_CNTDWN_OFFS_PRESP, array[int8]]
	NL80211_ATTR_STA_SUPPORTED_CHANNELS		nlattr[NL80211_ATTR_STA_SUPPORTED_CHANNELS, array[int8]]
	NL80211_ATTR_STA_SUPPORTED_OPER_CLASSES		nlattr[NL80211_ATTR_STA_SUPPORTED_OPER_CLASSES, array[int8]]
	NL80211_ATTR_HANDLE_DFS				nlattr[NL80211_ATTR_HANDLE_DFS, void]
	NL80211_ATTR_OPMODE_NOTIF			nlattr[NL80211_ATTR_OPMODE_NOTIF, int8]
	NL80211_ATTR_VENDOR_ID				nlattr[NL80211_ATTR_VENDOR_ID, int32]
	NL80211_ATTR_VENDOR_SUBCMD			nlattr[NL80211_ATTR_VENDOR_SUBCMD, int32]
	NL80211_ATTR_VENDOR_DATA			nlattr[NL80211_ATTR_VENDOR_DATA, array[int8]]
	NL80211_ATTR_QOS_MAP				nlattr[NL80211_ATTR_QOS_MAP, array[int8]]
	NL80211_ATTR_MAC_HINT				nlattr[NL80211_ATTR_MAC_HINT, array[int8]]
	NL80211_ATTR_WIPHY_FREQ_HINT			nlattr[NL80211_ATTR_WIPHY_FREQ_HINT, int32]
	NL80211_ATTR_TDLS_PEER_CAPABILITY		nlattr[NL80211_ATTR_TDLS_PEER_CAPABILITY, int32]
	NL80211_ATTR_SOCKET_OWNER			nlattr[NL80211_ATTR_SOCKET_OWNER, void]
	NL80211_ATTR_CSA_C_OFFSETS_TX			nlattr[NL80211_ATTR_CSA_C_OFFSETS_TX, array[int8]]
	NL80211_ATTR_TDLS_INITIATOR			nlattr[NL80211_ATTR_TDLS_INITIATOR, void]
	NL80211_ATTR_USE_RRM				nlattr[NL80211_ATTR_USE_RRM, void]
	NL80211_ATTR_WIPHY_DYN_ACK			nlattr[NL80211_ATTR_WIPHY_DYN_ACK, void]
	NL80211_ATTR_TSID				nlattr[NL80211_ATTR_TSID, int8]
	NL80211_ATTR_USER_PRIO				nlattr[NL80211_ATTR_USER_PRIO, int8]
	NL80211_ATTR_ADMITTED_TIME			nlattr[NL80211_ATTR_ADMITTED_TIME, int16]
	NL80211_ATTR_SMPS_MODE				nlattr[NL80211_ATTR_SMPS_MODE, int8]
	NL80211_ATTR_OPER_CLASS				nlattr[NL80211_ATTR_OPER_CLASS, int8]
	NL80211_ATTR_MAC_MASK				nlattr[NL80211_ATTR_MAC_MASK, array[int8]]
	NL80211_ATTR_WIPHY_SELF_MANAGED_REG		nlattr[NL80211_ATTR_WIPHY_SELF_MANAGED_REG, void]
	NL80211_ATTR_NETNS_FD				nlattr[NL80211_ATTR_NETNS_FD, fd_namespace]
	NL80211_ATTR_SCHED_SCAN_DELAY			nlattr[NL80211_ATTR_SCHED_SCAN_DELAY, int32]
	NL80211_ATTR_REG_INDOOR				nlattr[NL80211_ATTR_REG_INDOOR, void]
	NL80211_ATTR_PBSS				nlattr[NL80211_ATTR_PBSS, void]
	NL80211_ATTR_BSS_SELECT				nlattr[NL80211_ATTR_BSS_SELECT, array[int8]]
	NL80211_ATTR_STA_SUPPORT_P2P_PS			nlattr[NL80211_ATTR_STA_SUPPORT_P2P_PS, int8]
	NL80211_ATTR_MU_MIMO_GROUP_DATA			nlattr[NL80211_ATTR_MU_MIMO_GROUP_DATA, array[int8, 24]]
	NL80211_ATTR_MU_MIMO_FOLLOW_MAC_ADDR		nlattr[NL80211_ATTR_MU_MIMO_FOLLOW_MAC_ADDR, array[int8]]
	NL80211_ATTR_MEASUREMENT_DURATION		nlattr[NL80211_ATTR_MEASUREMENT_DURATION, int16]
	NL80211_ATTR_MEASUREMENT_DURATION_MANDATORY	nlattr[NL80211_ATTR_MEASUREMENT_DURATION_MANDATORY, void]
	NL80211_ATTR_MESH_PEER_AID			nlattr[NL80211_ATTR_MESH_PEER_AID, int16]
	NL80211_ATTR_NAN_MASTER_PREF			nlattr[NL80211_ATTR_NAN_MASTER_PREF, int8]
	NL80211_ATTR_BANDS				nlattr[NL80211_ATTR_BANDS, int32]
	NL80211_ATTR_NAN_FUNC				nlattr[NL80211_ATTR_NAN_FUNC, array[int8]]
	NL80211_ATTR_FILS_KEK				nlattr[NL80211_ATTR_FILS_KEK, array[int8, 0:64]]
	NL80211_ATTR_FILS_NONCES			nlattr[NL80211_ATTR_FILS_NONCES, array[int8]]
	NL80211_ATTR_MULTICAST_TO_UNICAST_ENABLED	nlattr[NL80211_ATTR_MULTICAST_TO_UNICAST_ENABLED, void]
	NL80211_ATTR_BSSID				nlattr[NL80211_ATTR_BSSID, array[int8]]
	NL80211_ATTR_SCHED_SCAN_RELATIVE_RSSI		nlattr[NL80211_ATTR_SCHED_SCAN_RELATIVE_RSSI, int8]
	NL80211_ATTR_SCHED_SCAN_RSSI_ADJUST		nlattr[NL80211_ATTR_SCHED_SCAN_RSSI_ADJUST, nl80211_bss_select_rssi_adjust$auto_record]
	NL80211_ATTR_TIMEOUT_REASON			nlattr[NL80211_ATTR_TIMEOUT_REASON, int32]
	NL80211_ATTR_FILS_ERP_USERNAME			nlattr[NL80211_ATTR_FILS_ERP_USERNAME, array[int8, 0:16]]
	NL80211_ATTR_FILS_ERP_REALM			nlattr[NL80211_ATTR_FILS_ERP_REALM, array[int8, 0:253]]
	NL80211_ATTR_FILS_ERP_NEXT_SEQ_NUM		nlattr[NL80211_ATTR_FILS_ERP_NEXT_SEQ_NUM, int16]
	NL80211_ATTR_FILS_ERP_RRK			nlattr[NL80211_ATTR_FILS_ERP_RRK, array[int8, 0:64]]
	NL80211_ATTR_FILS_CACHE_ID			nlattr[NL80211_ATTR_FILS_CACHE_ID, array[int8]]
	NL80211_ATTR_PMK				nlattr[NL80211_ATTR_PMK, array[int8, 0:64]]
	NL80211_ATTR_SCHED_SCAN_MULTI			nlattr[NL80211_ATTR_SCHED_SCAN_MULTI, void]
	NL80211_ATTR_PMKR0_NAME				nlattr[NL80211_ATTR_PMKR0_NAME, array[int8]]
	NL80211_ATTR_EXTERNAL_AUTH_SUPPORT		nlattr[NL80211_ATTR_EXTERNAL_AUTH_SUPPORT, void]
	NL80211_ATTR_CONTROL_PORT_OVER_NL80211		nlattr[NL80211_ATTR_CONTROL_PORT_OVER_NL80211, void]
	NL80211_ATTR_TXQ_LIMIT				nlattr[NL80211_ATTR_TXQ_LIMIT, int32]
	NL80211_ATTR_TXQ_MEMORY_LIMIT			nlattr[NL80211_ATTR_TXQ_MEMORY_LIMIT, int32]
	NL80211_ATTR_TXQ_QUANTUM			nlattr[NL80211_ATTR_TXQ_QUANTUM, int32]
	NL80211_ATTR_HE_CAPABILITY			nlattr[NL80211_ATTR_HE_CAPABILITY, array[int8, 0:54]]
	NL80211_ATTR_FTM_RESPONDER			nlattr[NL80211_ATTR_FTM_RESPONDER, array[int8, 3]]
	NL80211_ATTR_TIMEOUT				nlattr[NL80211_ATTR_TIMEOUT, int32]
	NL80211_ATTR_PEER_MEASUREMENTS			nlattr[NL80211_ATTR_PEER_MEASUREMENTS, array[int8, 5]]
	NL80211_ATTR_AIRTIME_WEIGHT			nlattr[NL80211_ATTR_AIRTIME_WEIGHT, int16]
	NL80211_ATTR_STA_TX_POWER_SETTING		nlattr[NL80211_ATTR_STA_TX_POWER_SETTING, int8]
	NL80211_ATTR_STA_TX_POWER			nlattr[NL80211_ATTR_STA_TX_POWER, int16]
	NL80211_ATTR_SAE_PASSWORD			nlattr[NL80211_ATTR_SAE_PASSWORD, array[int8, 0:128]]
	NL80211_ATTR_TWT_RESPONDER			nlattr[NL80211_ATTR_TWT_RESPONDER, void]
	NL80211_ATTR_HE_OBSS_PD				nlattr[NL80211_ATTR_HE_OBSS_PD, array[int8, 6]]
	NL80211_ATTR_WIPHY_EDMG_CHANNELS		nlattr[NL80211_ATTR_WIPHY_EDMG_CHANNELS, int8]
	NL80211_ATTR_WIPHY_EDMG_BW_CONFIG		nlattr[NL80211_ATTR_WIPHY_EDMG_BW_CONFIG, int8]
	NL80211_ATTR_VLAN_ID				nlattr[NL80211_ATTR_VLAN_ID, int16]
	NL80211_ATTR_HE_BSS_COLOR			nlattr[NL80211_ATTR_HE_BSS_COLOR, array[int8, 3]]
	NL80211_ATTR_TID_CONFIG				nlattr[NL80211_ATTR_TID_CONFIG, array[int8, 13]]
	NL80211_ATTR_CONTROL_PORT_NO_PREAUTH		nlattr[NL80211_ATTR_CONTROL_PORT_NO_PREAUTH, void]
	NL80211_ATTR_PMK_LIFETIME			nlattr[NL80211_ATTR_PMK_LIFETIME, int32]
	NL80211_ATTR_PMK_REAUTH_THRESHOLD		nlattr[NL80211_ATTR_PMK_REAUTH_THRESHOLD, int8]
	NL80211_ATTR_RECEIVE_MULTICAST			nlattr[NL80211_ATTR_RECEIVE_MULTICAST, void]
	NL80211_ATTR_WIPHY_FREQ_OFFSET			nlattr[NL80211_ATTR_WIPHY_FREQ_OFFSET, int32]
	NL80211_ATTR_CENTER_FREQ1_OFFSET		nlattr[NL80211_ATTR_CENTER_FREQ1_OFFSET, int32]
	NL80211_ATTR_SCAN_FREQ_KHZ			nlattr[NL80211_ATTR_SCAN_FREQ_KHZ, array[int8]]
	NL80211_ATTR_HE_6GHZ_CAPABILITY			nlattr[NL80211_ATTR_HE_6GHZ_CAPABILITY, array[int8]]
	NL80211_ATTR_FILS_DISCOVERY			nlattr[NL80211_ATTR_FILS_DISCOVERY, array[int8, 3]]
	NL80211_ATTR_UNSOL_BCAST_PROBE_RESP		nlattr[NL80211_ATTR_UNSOL_BCAST_PROBE_RESP, int16]
	NL80211_ATTR_S1G_CAPABILITY			nlattr[NL80211_ATTR_S1G_CAPABILITY, array[int8]]
	NL80211_ATTR_S1G_CAPABILITY_MASK		nlattr[NL80211_ATTR_S1G_CAPABILITY_MASK, array[int8]]
	NL80211_ATTR_SAE_PWE				nlattr[NL80211_ATTR_SAE_PWE, int8]
	NL80211_ATTR_RECONNECT_REQUESTED		nlattr[NL80211_ATTR_RECONNECT_REQUESTED, array[int8]]
	NL80211_ATTR_SAR_SPEC				nlattr[NL80211_ATTR_SAR_SPEC, int16]
	NL80211_ATTR_DISABLE_HE				nlattr[NL80211_ATTR_DISABLE_HE, void]
	NL80211_ATTR_OBSS_COLOR_BITMAP			nlattr[NL80211_ATTR_OBSS_COLOR_BITMAP, int64]
	NL80211_ATTR_COLOR_CHANGE_COUNT			nlattr[NL80211_ATTR_COLOR_CHANGE_COUNT, int8]
	NL80211_ATTR_COLOR_CHANGE_COLOR			nlattr[NL80211_ATTR_COLOR_CHANGE_COLOR, int8]
	NL80211_ATTR_COLOR_CHANGE_ELEMS			nlattr[NL80211_ATTR_COLOR_CHANGE_ELEMS, array[int8, 332]]
	NL80211_ATTR_MBSSID_CONFIG			nlattr[NL80211_ATTR_MBSSID_CONFIG, array[int8, 5]]
	NL80211_ATTR_MBSSID_ELEMS			nlattr[NL80211_ATTR_MBSSID_ELEMS, array[int8]]
	NL80211_ATTR_RADAR_BACKGROUND			nlattr[NL80211_ATTR_RADAR_BACKGROUND, void]
	NL80211_ATTR_AP_SETTINGS_FLAGS			nlattr[NL80211_ATTR_AP_SETTINGS_FLAGS, int32]
	NL80211_ATTR_EHT_CAPABILITY			nlattr[NL80211_ATTR_EHT_CAPABILITY, array[int8]]
	NL80211_ATTR_DISABLE_EHT			nlattr[NL80211_ATTR_DISABLE_EHT, void]
	NL80211_ATTR_MLO_LINKS				nlattr[NL80211_ATTR_MLO_LINKS, array[int8, 332]]
	NL80211_ATTR_MLO_LINK_ID			nlattr[NL80211_ATTR_MLO_LINK_ID, int8]
	NL80211_ATTR_MLD_ADDR				nlattr[NL80211_ATTR_MLD_ADDR, array[int8]]
	NL80211_ATTR_MLO_SUPPORT			nlattr[NL80211_ATTR_MLO_SUPPORT, void]
	NL80211_ATTR_MAX_NUM_AKM_SUITES			nlattr[NL80211_ATTR_MAX_NUM_AKM_SUITES, array[int8]]
	NL80211_ATTR_PUNCT_BITMAP			nlattr[NL80211_ATTR_PUNCT_BITMAP, int32]
	NL80211_ATTR_MAX_HW_TIMESTAMP_PEERS		nlattr[NL80211_ATTR_MAX_HW_TIMESTAMP_PEERS, int16]
	NL80211_ATTR_HW_TIMESTAMP_ENABLED		nlattr[NL80211_ATTR_HW_TIMESTAMP_ENABLED, void]
	NL80211_ATTR_EMA_RNR_ELEMS			nlattr[NL80211_ATTR_EMA_RNR_ELEMS, array[int8]]
	NL80211_ATTR_MLO_LINK_DISABLED			nlattr[NL80211_ATTR_MLO_LINK_DISABLED, void]
	NL80211_ATTR_BSS_DUMP_INCLUDE_USE_DATA		nlattr[NL80211_ATTR_BSS_DUMP_INCLUDE_USE_DATA, void]
	NL80211_ATTR_MLO_TTLM_DLINK			nlattr[NL80211_ATTR_MLO_TTLM_DLINK, array[int8]]
	NL80211_ATTR_MLO_TTLM_ULINK			nlattr[NL80211_ATTR_MLO_TTLM_ULINK, array[int8]]
	NL80211_ATTR_ASSOC_SPP_AMSDU			nlattr[NL80211_ATTR_ASSOC_SPP_AMSDU, void]
] [varlen]

nl802154_policy$auto_nl802154 [
	NL802154_ATTR_WPAN_PHY			nlattr[NL802154_ATTR_WPAN_PHY, int32]
	NL802154_ATTR_WPAN_PHY_NAME		nlattr[NL802154_ATTR_WPAN_PHY_NAME, string]
	NL802154_ATTR_IFINDEX			nlattr[NL802154_ATTR_IFINDEX, ifindex]
	NL802154_ATTR_IFNAME			nlattr[NL802154_ATTR_IFNAME, devname]
	NL802154_ATTR_IFTYPE			nlattr[NL802154_ATTR_IFTYPE, int32]
	NL802154_ATTR_WPAN_DEV			nlattr[NL802154_ATTR_WPAN_DEV, int64]
	NL802154_ATTR_PAGE			nlattr[NL802154_ATTR_PAGE, int8]
	NL802154_ATTR_CHANNEL			nlattr[NL802154_ATTR_CHANNEL, int8]
	NL802154_ATTR_PAN_ID			nlattr[NL802154_ATTR_PAN_ID, int16]
	NL802154_ATTR_SHORT_ADDR		nlattr[NL802154_ATTR_SHORT_ADDR, int16]
	NL802154_ATTR_TX_POWER			nlattr[NL802154_ATTR_TX_POWER, int32]
	NL802154_ATTR_CCA_MODE			nlattr[NL802154_ATTR_CCA_MODE, int32]
	NL802154_ATTR_CCA_OPT			nlattr[NL802154_ATTR_CCA_OPT, int32]
	NL802154_ATTR_CCA_ED_LEVEL		nlattr[NL802154_ATTR_CCA_ED_LEVEL, int32]
	NL802154_ATTR_MAX_FRAME_RETRIES		nlattr[NL802154_ATTR_MAX_FRAME_RETRIES, int8]
	NL802154_ATTR_MAX_BE			nlattr[NL802154_ATTR_MAX_BE, int8]
	NL802154_ATTR_MIN_BE			nlattr[NL802154_ATTR_MIN_BE, int8]
	NL802154_ATTR_MAX_CSMA_BACKOFFS		nlattr[NL802154_ATTR_MAX_CSMA_BACKOFFS, int8]
	NL802154_ATTR_LBT_MODE			nlattr[NL802154_ATTR_LBT_MODE, int8]
	NL802154_ATTR_SUPPORTED_CHANNEL		nlattr[NL802154_ATTR_SUPPORTED_CHANNEL, int32]
	NL802154_ATTR_EXTENDED_ADDR		nlattr[NL802154_ATTR_EXTENDED_ADDR, int64]
	NL802154_ATTR_WPAN_PHY_CAPS		nlattr[NL802154_ATTR_WPAN_PHY_CAPS, array[int8]]
	NL802154_ATTR_SUPPORTED_COMMANDS	nlattr[NL802154_ATTR_SUPPORTED_COMMANDS, array[int8]]
	NL802154_ATTR_ACKREQ_DEFAULT		nlattr[NL802154_ATTR_ACKREQ_DEFAULT, int8]
	NL802154_ATTR_PID			nlattr[NL802154_ATTR_PID, pid]
	NL802154_ATTR_NETNS_FD			nlattr[NL802154_ATTR_NETNS_FD, fd_namespace]
	NL802154_ATTR_COORDINATOR		nlattr[NL802154_ATTR_COORDINATOR, array[int8]]
	NL802154_ATTR_SCAN_TYPE			nlattr[NL802154_ATTR_SCAN_TYPE, int8]
	NL802154_ATTR_SCAN_CHANNELS		nlattr[NL802154_ATTR_SCAN_CHANNELS, int32]
	NL802154_ATTR_SCAN_PREAMBLE_CODES	nlattr[NL802154_ATTR_SCAN_PREAMBLE_CODES, array[int8]]
	NL802154_ATTR_SCAN_MEAN_PRF		nlattr[NL802154_ATTR_SCAN_MEAN_PRF, array[int8]]
	NL802154_ATTR_SCAN_DURATION		nlattr[NL802154_ATTR_SCAN_DURATION, int8]
	NL802154_ATTR_SCAN_DONE_REASON		nlattr[NL802154_ATTR_SCAN_DONE_REASON, int8]
	NL802154_ATTR_BEACON_INTERVAL		nlattr[NL802154_ATTR_BEACON_INTERVAL, int8]
	NL802154_ATTR_MAX_ASSOCIATIONS		nlattr[NL802154_ATTR_MAX_ASSOCIATIONS, int32]
	NL802154_ATTR_PEER			nlattr[NL802154_ATTR_PEER, array[int8]]
	NL802154_ATTR_SEC_ENABLED		nlattr[NL802154_ATTR_SEC_ENABLED, bool8]
	NL802154_ATTR_SEC_OUT_LEVEL		nlattr[NL802154_ATTR_SEC_OUT_LEVEL, int32]
	NL802154_ATTR_SEC_OUT_KEY_ID		nlattr[NL802154_ATTR_SEC_OUT_KEY_ID, array[int8]]
	NL802154_ATTR_SEC_FRAME_COUNTER		nlattr[NL802154_ATTR_SEC_FRAME_COUNTER, int32]
	NL802154_ATTR_SEC_LEVEL			nlattr[NL802154_ATTR_SEC_LEVEL, array[int8]]
	NL802154_ATTR_SEC_DEVICE		nlattr[NL802154_ATTR_SEC_DEVICE, array[int8]]
	NL802154_ATTR_SEC_DEVKEY		nlattr[NL802154_ATTR_SEC_DEVKEY, array[int8]]
	NL802154_ATTR_SEC_KEY			nlattr[NL802154_ATTR_SEC_KEY, array[int8]]
] [varlen]

old_linux_dirent$auto_record {
	d_ino		intptr
	d_offset	intptr
	d_namlen	int16
	d_name		array[int8]
}

old_utsname$auto_record {
	sysname		array[int8, 65]
	nodename	array[int8, 65]
	release		array[int8, 65]
	version		array[int8, 65]
	machine		array[int8, 65]
}

oldold_utsname$auto_record {
	sysname		array[int8, 9]
	nodename	array[int8, 9]
	release		array[int8, 9]
	version		array[int8, 9]
	machine		array[int8, 9]
}

open_how$auto_record {
	flags	int64
	mode	int64
	resolve	int64
}

ovs_flow_stats$auto_record {
	n_packets	int64
	n_bytes		int64
}

ovs_vport_stats$auto_record {
	rx_packets	int64
	tx_packets	int64
	rx_bytes	int64
	tx_bytes	int64
	rx_errors	int64
	tx_errors	int64
	rx_dropped	int64
	tx_dropped	int64
}

packet_policy$auto_datapath [
	OVS_PACKET_ATTR_PACKET	nlattr[OVS_PACKET_ATTR_PACKET, array[int8, 14]]
	OVS_PACKET_ATTR_KEY	nlattr[OVS_PACKET_ATTR_KEY, array[int8]]
	OVS_PACKET_ATTR_ACTIONS	nlattr[OVS_PACKET_ATTR_ACTIONS, array[int8]]
	OVS_PACKET_ATTR_PROBE	nlattr[OVS_PACKET_ATTR_PROBE, void]
	OVS_PACKET_ATTR_MRU	nlattr[OVS_PACKET_ATTR_MRU, int16]
	OVS_PACKET_ATTR_HASH	nlattr[OVS_PACKET_ATTR_HASH, int64]
] [varlen]

perf_event_attr$auto_record {
	type				int32
	size				int32
	config				int64
	perf_event_attr_3		perf_event_attr_3$auto_record
	sample_type			int64
	read_format			int64
	disabled			int64:1
	inherit				int64:1
	pinned				int64:1
	exclusive			int64:1
	exclude_user			int64:1
	exclude_kernel			int64:1
	exclude_hv			int64:1
	exclude_idle			int64:1
	mmap				int64:1
	comm				int64:1
	freq				int64:1
	inherit_stat			int64:1
	enable_on_exec			int64:1
	task				int64:1
	watermark			int64:1
	precise_ip			int64:2
	mmap_data			int64:1
	sample_id_all			int64:1
	exclude_host			int64:1
	exclude_guest			int64:1
	exclude_callchain_kernel	int64:1
	exclude_callchain_user		int64:1
	mmap2				int64:1
	comm_exec			int64:1
	use_clockid			int64:1
	context_switch			int64:1
	write_backward			int64:1
	namespaces			int64:1
	ksymbol				int64:1
	bpf_event			int64:1
	aux_output			int64:1
	cgroup				int64:1
	text_poke			int64:1
	build_id			int64:1
	inherit_thread			int64:1
	remove_on_exec			int64:1
	sigtrap				int64:1
	__reserved_1			const[0, int64:26]
	perf_event_attr_44		perf_event_attr_44$auto_record
	bp_type				int32
	perf_event_attr_46		perf_event_attr_46$auto_record
	perf_event_attr_47		perf_event_attr_47$auto_record
	branch_sample_type		int64
	sample_regs_user		int64
	sample_stack_user		int32
	clockid				int32
	sample_regs_intr		int64
	aux_watermark			int32
	sample_max_stack		int16
	__reserved_2			const[0, int16]
	aux_sample_size			int32
	__reserved_3			const[0, int32]
	sig_data			int64
	config3				int64
}

perf_event_attr_3$auto_record [
	sample_period	int64
	sample_freq	int64
]

perf_event_attr_44$auto_record [
	wakeup_events		int32
	wakeup_watermark	int32
]

perf_event_attr_46$auto_record [
	bp_addr		int64
	kprobe_func	int64
	uprobe_path	int64
	config1		int64
]

perf_event_attr_47$auto_record [
	bp_len		int64
	kprobe_addr	int64
	probe_offset	int64
	config2		int64
]

pollfd$auto_record {
	fd	fd
	events	int16
	revents	int16
}

rlimit$auto_record {
	rlim_cur	intptr
	rlim_max	intptr
}

rlimit64$auto_record {
	rlim_cur	int64
	rlim_max	int64
}

robust_list$auto_record {
	next	ptr[inout, robust_list$auto_record, opt]
}

robust_list_head$auto_record {
	list		robust_list$auto_record
	futex_offset	intptr
	list_op_pending	ptr[inout, robust_list$auto_record]
}

rseq$auto_record {
	cpu_id_start	int32
	cpu_id		int32
	rseq_cs		int64
	flags		int32
	node_id		int32
	mm_cid		int32
	end		array[int8]
} [align[32]]

rusage$auto_record {
	ru_utime	__kernel_old_timeval$auto_record
	ru_stime	__kernel_old_timeval$auto_record
	ru_maxrss	intptr
	ru_ixrss	intptr
	ru_idrss	intptr
	ru_isrss	intptr
	ru_minflt	intptr
	ru_majflt	intptr
	ru_nswap	intptr
	ru_inblock	intptr
	ru_oublock	intptr
	ru_msgsnd	intptr
	ru_msgrcv	intptr
	ru_nsignals	intptr
	ru_nvcsw	intptr
	ru_nivcsw	intptr
}

sched_attr$auto_record {
	size		int32
	sched_policy	int32
	sched_flags	int64
	sched_nice	int32
	sched_priority	int32
	sched_runtime	int64
	sched_deadline	int64
	sched_period	int64
	sched_util_min	int32
	sched_util_max	int32
}

sched_param$auto_record {
	sched_priority	int32
}

seg6_genl_policy$auto_seg6 [
	SEG6_ATTR_DST		nlattr[SEG6_ATTR_DST, in6_addr$auto_record]
	SEG6_ATTR_DSTLEN	nlattr[SEG6_ATTR_DSTLEN, int32]
	SEG6_ATTR_HMACKEYID	nlattr[SEG6_ATTR_HMACKEYID, int32]
	SEG6_ATTR_SECRET	nlattr[SEG6_ATTR_SECRET, array[int8]]
	SEG6_ATTR_SECRETLEN	nlattr[SEG6_ATTR_SECRETLEN, int8]
	SEG6_ATTR_ALGID		nlattr[SEG6_ATTR_ALGID, int8]
	SEG6_ATTR_HMACINFO	nlattr[SEG6_ATTR_HMACINFO, array[int8]]
] [varlen]

sembuf$auto_record {
	sem_num	int16
	sem_op	int16
	sem_flg	int16
}

shmid_ds$auto_record {
	shm_perm	ipc_perm$auto_record
	shm_segsz	int32
	shm_atime	intptr
	shm_dtime	intptr
	shm_ctime	intptr
	shm_cpid	int32
	shm_lpid	int32
	shm_nattch	int16
	shm_unused	const[0, int16]
	shm_unused2	ptr[inout, array[auto_todo]]
	shm_unused3	ptr[inout, array[auto_todo]]
}

sigaction$auto_record {
	sa_handler	ptr[inout, ptr[in, auto_todo]]
	sa_flags	intptr
	sa_restorer	ptr[inout, ptr[in, auto_todo]]
	sa_mask		sigaction_sa_mask$auto_record
}

sigaction_sa_mask$auto_record {
	sig	intptr
}

sigaltstack$auto_record {
	ss_sp		ptr[inout, array[auto_todo]]
	ss_flags	int32
	ss_size		intptr
}

sigevent$auto_record {
	sigev_value	sigval$auto_record
	sigev_signo	int32
	sigev_notify	int32
	_sigev_un	sigevent__sigev_un$auto_record
}

sigevent__sigev_un$auto_record [
	_pad		array[const[0, int32], 12]
	_tid		pid
	_sigev_thread	sigevent__sigev_un__sigev_thread$auto_record
]

sigevent__sigev_un__sigev_thread$auto_record {
	_function	ptr[inout, ptr[in, auto_todo]]
	_attribute	ptr[inout, array[auto_todo]]
}

siginfo$auto_record {
	siginfo_0	siginfo_0$auto_record
}

siginfo_0$auto_record [
	siginfo_0_0	siginfo_0_0$auto_record
	_si_pad		array[const[0, int32], 32]
]

siginfo_0_0$auto_record {
	si_signo	int32
	si_errno	int32
	si_code		int32
	_sifields	__sifields$auto_record
}

sigset_t$auto_record {
	sig	intptr
}

sigval$auto_record [
	sival_int	int32
	sival_ptr	ptr[inout, array[auto_todo]]
]

smc_gen_ueid_policy$auto_smc_netlink [
	SMC_NLA_EID_TABLE_UNSPEC	nlattr[SMC_NLA_EID_TABLE_UNSPEC, array[int8]]
	SMC_NLA_EID_TABLE_ENTRY		nlattr[SMC_NLA_EID_TABLE_ENTRY, stringnoz]
] [varlen]

smc_pnet_policy$auto_smc_pnet [
	SMC_PNETID_NAME		nlattr[SMC_PNETID_NAME, string]
	SMC_PNETID_ETHNAME	nlattr[SMC_PNETID_ETHNAME, string]
	SMC_PNETID_IBNAME	nlattr[SMC_PNETID_IBNAME, string]
	SMC_PNETID_IBPORT	nlattr[SMC_PNETID_IBPORT, int8]
] [varlen]

sockaddr$auto_record {
	sa_family	int16
	sockaddr_1	sockaddr_1$auto_record
}

sockaddr_1$auto_record [
	sa_data_min	array[int8, 14]
	sockaddr_1_1	sockaddr_1_1$auto_record
] [varlen]

sockaddr_1_1$auto_record {
	sa_data	array[int8]
}

stat$auto_record {
	st_dev		intptr
	st_ino		intptr
	st_nlink	intptr
	st_mode		int32
	st_uid		uid
	st_gid		gid
	__pad0		const[0, int32]
	st_rdev		intptr
	st_size		intptr
	st_blksize	intptr
	st_blocks	intptr
	st_atime	intptr
	st_atime_nsec	intptr
	st_mtime	intptr
	st_mtime_nsec	intptr
	st_ctime	intptr
	st_ctime_nsec	intptr
	__unused	array[const[0, intptr], 3]
}

statfs$auto_record {
	f_type		intptr
	f_bsize		intptr
	f_blocks	intptr
	f_bfree		intptr
	f_bavail	intptr
	f_files		intptr
	f_ffree		intptr
	f_fsid		statfs_f_fsid$auto_record
	f_namelen	intptr
	f_frsize	intptr
	f_flags		intptr
	f_spare		array[intptr, 4]
}

statfs64$auto_record {
	f_type		intptr
	f_bsize		intptr
	f_blocks	int64
	f_bfree		int64
	f_bavail	int64
	f_files		int64
	f_ffree		int64
	f_fsid		statfs64_f_fsid$auto_record
	f_namelen	intptr
	f_frsize	intptr
	f_flags		intptr
	f_spare		array[intptr, 4]
}

statfs64_f_fsid$auto_record {
	val	array[int32, 2]
}

statfs_f_fsid$auto_record {
	val	array[int32, 2]
}

statmount$auto_record {
	size			int32
	mnt_opts		int32
	mask			int64
	sb_dev_major		int32
	sb_dev_minor		int32
	sb_magic		int64
	sb_flags		int32
	fs_type			int32
	mnt_id			int64
	mnt_parent_id		int64
	mnt_id_old		int32
	mnt_parent_id_old	int32
	mnt_attr		int64
	mnt_propagation		int64
	mnt_peer_group		int64
	mnt_master		int64
	propagate_from		int64
	mnt_root		int32
	mnt_point		int32
	mnt_ns_id		int64
	__spare2		array[int64, 49]
	str			array[int8]
}

statx$auto_record {
	stx_mask			int32
	stx_blksize			int32
	stx_attributes			int64
	stx_nlink			int32
	stx_uid				uid
	stx_gid				gid
	stx_mode			int16
	__spare0			int16
	stx_ino				int64
	stx_size			int64
	stx_blocks			int64
	stx_attributes_mask		int64
	stx_atime			statx_timestamp$auto_record
	stx_btime			statx_timestamp$auto_record
	stx_ctime			statx_timestamp$auto_record
	stx_mtime			statx_timestamp$auto_record
	stx_rdev_major			int32
	stx_rdev_minor			int32
	stx_dev_major			int32
	stx_dev_minor			int32
	stx_mnt_id			int64
	stx_dio_mem_align		int32
	stx_dio_offset_align		int32
	stx_subvol			int64
	stx_atomic_write_unit_min	int32
	stx_atomic_write_unit_max	int32
	stx_atomic_write_segments_max	int32
	__spare1			int32
	__spare3			array[int64, 9]
}

statx_timestamp$auto_record {
	tv_sec		int64
	tv_nsec		int32
	__reserved	const[0, int32]
}

sysinfo$auto_record {
	uptime		intptr
	loads		array[intptr, 3]
	totalram	intptr
	freeram		intptr
	sharedram	intptr
	bufferram	intptr
	totalswap	intptr
	freeswap	intptr
	procs		int16
	pad		const[0, int16]
	totalhigh	intptr
	freehigh	intptr
	mem_unit	int32
	_f		array[int8]
}

taskstats_cmd_get_policy$auto_taskstats [
	TASKSTATS_CMD_ATTR_PID			nlattr[TASKSTATS_CMD_ATTR_PID, pid]
	TASKSTATS_CMD_ATTR_TGID			nlattr[TASKSTATS_CMD_ATTR_TGID, pid]
	TASKSTATS_CMD_ATTR_REGISTER_CPUMASK	nlattr[TASKSTATS_CMD_ATTR_REGISTER_CPUMASK, stringnoz]
	TASKSTATS_CMD_ATTR_DEREGISTER_CPUMASK	nlattr[TASKSTATS_CMD_ATTR_DEREGISTER_CPUMASK, stringnoz]
] [varlen]

tcp_metrics_nl_policy$auto_tcp_metrics [
	TCP_METRICS_ATTR_ADDR_IPV4	nlattr[TCP_METRICS_ATTR_ADDR_IPV4, ipv4_addr]
	TCP_METRICS_ATTR_ADDR_IPV6	nlattr[TCP_METRICS_ATTR_ADDR_IPV6, array[int8]]
	TCP_METRICS_ATTR_SADDR_IPV4	nlattr[TCP_METRICS_ATTR_SADDR_IPV4, ipv4_addr]
	TCP_METRICS_ATTR_SADDR_IPV6	nlattr[TCP_METRICS_ATTR_SADDR_IPV6, array[int8]]
] [varlen]

thermal_genl_policy$auto_thermal_netlink [
	THERMAL_GENL_ATTR_TZ				nlattr[THERMAL_GENL_ATTR_TZ, array[int8]]
	THERMAL_GENL_ATTR_TZ_ID				nlattr[THERMAL_GENL_ATTR_TZ_ID, int32]
	THERMAL_GENL_ATTR_TZ_TEMP			nlattr[THERMAL_GENL_ATTR_TZ_TEMP, int32]
	THERMAL_GENL_ATTR_TZ_TRIP			nlattr[THERMAL_GENL_ATTR_TZ_TRIP, array[int8]]
	THERMAL_GENL_ATTR_TZ_TRIP_ID			nlattr[THERMAL_GENL_ATTR_TZ_TRIP_ID, int32]
	THERMAL_GENL_ATTR_TZ_TRIP_TYPE			nlattr[THERMAL_GENL_ATTR_TZ_TRIP_TYPE, int32]
	THERMAL_GENL_ATTR_TZ_TRIP_TEMP			nlattr[THERMAL_GENL_ATTR_TZ_TRIP_TEMP, int32]
	THERMAL_GENL_ATTR_TZ_TRIP_HYST			nlattr[THERMAL_GENL_ATTR_TZ_TRIP_HYST, int32]
	THERMAL_GENL_ATTR_TZ_MODE			nlattr[THERMAL_GENL_ATTR_TZ_MODE, int32]
	THERMAL_GENL_ATTR_TZ_NAME			nlattr[THERMAL_GENL_ATTR_TZ_NAME, stringnoz]
	THERMAL_GENL_ATTR_TZ_CDEV_WEIGHT		nlattr[THERMAL_GENL_ATTR_TZ_CDEV_WEIGHT, int32]
	THERMAL_GENL_ATTR_TZ_GOV			nlattr[THERMAL_GENL_ATTR_TZ_GOV, array[int8]]
	THERMAL_GENL_ATTR_TZ_GOV_NAME			nlattr[THERMAL_GENL_ATTR_TZ_GOV_NAME, stringnoz]
	THERMAL_GENL_ATTR_CDEV				nlattr[THERMAL_GENL_ATTR_CDEV, array[int8]]
	THERMAL_GENL_ATTR_CDEV_ID			nlattr[THERMAL_GENL_ATTR_CDEV_ID, int32]
	THERMAL_GENL_ATTR_CDEV_CUR_STATE		nlattr[THERMAL_GENL_ATTR_CDEV_CUR_STATE, int32]
	THERMAL_GENL_ATTR_CDEV_MAX_STATE		nlattr[THERMAL_GENL_ATTR_CDEV_MAX_STATE, int32]
	THERMAL_GENL_ATTR_CDEV_NAME			nlattr[THERMAL_GENL_ATTR_CDEV_NAME, devname]
	THERMAL_GENL_ATTR_CPU_CAPABILITY		nlattr[THERMAL_GENL_ATTR_CPU_CAPABILITY, array[int8]]
	THERMAL_GENL_ATTR_CPU_CAPABILITY_ID		nlattr[THERMAL_GENL_ATTR_CPU_CAPABILITY_ID, int32]
	THERMAL_GENL_ATTR_CPU_CAPABILITY_PERFORMANCE	nlattr[THERMAL_GENL_ATTR_CPU_CAPABILITY_PERFORMANCE, int32]
	THERMAL_GENL_ATTR_CPU_CAPABILITY_EFFICIENCY	nlattr[THERMAL_GENL_ATTR_CPU_CAPABILITY_EFFICIENCY, int32]
] [varlen]

timezone$auto_record {
	tz_minuteswest	int32
	tz_dsttime	int32
}

tipc_nl_policy$auto_netlink [
	TIPC_NLA_UNSPEC		nlattr[TIPC_NLA_UNSPEC, array[int8]]
	TIPC_NLA_BEARER		nlattr[TIPC_NLA_BEARER, array[int8]]
	TIPC_NLA_SOCK		nlattr[TIPC_NLA_SOCK, array[int8]]
	TIPC_NLA_PUBL		nlattr[TIPC_NLA_PUBL, array[int8]]
	TIPC_NLA_LINK		nlattr[TIPC_NLA_LINK, array[int8]]
	TIPC_NLA_MEDIA		nlattr[TIPC_NLA_MEDIA, array[int8]]
	TIPC_NLA_NODE		nlattr[TIPC_NLA_NODE, array[int8]]
	TIPC_NLA_NET		nlattr[TIPC_NLA_NET, array[int8]]
	TIPC_NLA_NAME_TABLE	nlattr[TIPC_NLA_NAME_TABLE, array[int8]]
	TIPC_NLA_MON		nlattr[TIPC_NLA_MON, array[int8]]
] [varlen]

tms$auto_record {
	tms_utime	intptr
	tms_stime	intptr
	tms_cutime	intptr
	tms_cstime	intptr
}

user_desc$auto_record {
	entry_number	int32
	base_addr	int32
	limit		int32
	seg_32bit	int32:1
	contents	int32:2
	read_exec_only	int32:1
	limit_in_pages	int32:1
	seg_not_present	int32:1
	useable		int32:1
	lm		int32:1
}

user_msghdr$auto_record {
	msg_name	ptr[inout, array[auto_todo]]
	msg_namelen	int32
	msg_iov		ptr[inout, iovec$auto_record]
	msg_iovlen	intptr
	msg_control	ptr[inout, array[auto_todo]]
	msg_controllen	intptr
	msg_flags	int32
}

ustat$auto_record {
	f_tfree		int32
	f_tinode	intptr
	f_fname		array[int8, 6]
	f_fpack		array[int8, 6]
}

utimbuf$auto_record {
	actime	intptr
	modtime	intptr
}

vdpa_nl_policy$auto_vdpa [
	VDPA_ATTR_MGMTDEV_BUS_NAME	nlattr[VDPA_ATTR_MGMTDEV_BUS_NAME, string]
	VDPA_ATTR_MGMTDEV_DEV_NAME	nlattr[VDPA_ATTR_MGMTDEV_DEV_NAME, devname]
	VDPA_ATTR_DEV_NAME		nlattr[VDPA_ATTR_DEV_NAME, devname]
	VDPA_ATTR_DEV_NET_CFG_MACADDR	nlattr[VDPA_ATTR_DEV_NET_CFG_MACADDR, array[int8]]
	VDPA_ATTR_DEV_NET_CFG_MAX_VQP	nlattr[VDPA_ATTR_DEV_NET_CFG_MAX_VQP, int16]
	VDPA_ATTR_DEV_NET_CFG_MTU	nlattr[VDPA_ATTR_DEV_NET_CFG_MTU, int16]
	VDPA_ATTR_DEV_QUEUE_INDEX	nlattr[VDPA_ATTR_DEV_QUEUE_INDEX, int32]
	VDPA_ATTR_DEV_FEATURES		nlattr[VDPA_ATTR_DEV_FEATURES, int64]
] [varlen]

vport_policy$auto_datapath [
	OVS_VPORT_ATTR_PORT_NO		nlattr[OVS_VPORT_ATTR_PORT_NO, int32]
	OVS_VPORT_ATTR_TYPE		nlattr[OVS_VPORT_ATTR_TYPE, int32]
	OVS_VPORT_ATTR_NAME		nlattr[OVS_VPORT_ATTR_NAME, string]
	OVS_VPORT_ATTR_OPTIONS		nlattr[OVS_VPORT_ATTR_OPTIONS, array[int8]]
	OVS_VPORT_ATTR_UPCALL_PID	nlattr[OVS_VPORT_ATTR_UPCALL_PID, array[int8]]
	OVS_VPORT_ATTR_STATS		nlattr[OVS_VPORT_ATTR_STATS, ovs_vport_stats$auto_record]
	OVS_VPORT_ATTR_IFINDEX		nlattr[OVS_VPORT_ATTR_IFINDEX, ifindex]
	OVS_VPORT_ATTR_NETNSID		nlattr[OVS_VPORT_ATTR_NETNSID, int32]
	OVS_VPORT_ATTR_UPCALL_STATS	nlattr[OVS_VPORT_ATTR_UPCALL_STATS, array[int8]]
] [varlen]
