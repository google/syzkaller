# Code generated by syz-declextract. DO NOT EDIT.

include <include/vdso/bits.h>
include <include/linux/types.h>
include <arch/x86/include/uapi/asm/msr.h>
include <arch/x86/include/uapi/asm/sgx.h>
include <asm/ioctls.h>
include <asm/sockios.h>
include <drivers/crypto/intel/qat/qat_common/adf_cfg_common.h>
include <drivers/net/ieee802154/mac802154_hwsim.h>
include <drivers/net/wireless/virtual/mac80211_hwsim.h>
include <include/linux/nl802154.h>
include <include/net/nl802154.h>
include <include/uapi/asm-generic/termbits-common.h>
include <include/uapi/linux/android/binderfs.h>
include <include/uapi/linux/batman_adv.h>
include <include/uapi/linux/btrfs.h>
include <include/uapi/linux/caif/if_caif.h>
include <include/uapi/linux/can/gw.h>
include <include/uapi/linux/can/netlink.h>
include <include/uapi/linux/can/vxcan.h>
include <include/uapi/linux/cdrom.h>
include <include/uapi/linux/cec.h>
include <include/uapi/linux/cgroupstats.h>
include <include/uapi/linux/cifs/cifs_netlink.h>
include <include/uapi/linux/comedi.h>
include <include/uapi/linux/counter.h>
include <include/uapi/linux/cryptouser.h>
include <include/uapi/linux/dcbnl.h>
include <include/uapi/linux/devlink.h>
include <include/uapi/linux/dma-buf.h>
include <include/uapi/linux/dma-heap.h>
include <include/uapi/linux/ethtool_netlink.h>
include <include/uapi/linux/eventpoll.h>
include <include/uapi/linux/exfat.h>
include <include/uapi/linux/fib_rules.h>
include <include/uapi/linux/fou.h>
include <include/uapi/linux/fs.h>
include <include/uapi/linux/fuse.h>
include <include/uapi/linux/genetlink.h>
include <include/uapi/linux/gtp.h>
include <include/uapi/linux/handshake.h>
include <include/uapi/linux/hiddev.h>
include <include/uapi/linux/hidraw.h>
include <include/uapi/linux/hsr_netlink.h>
include <include/uapi/linux/i2c-dev.h>
include <include/uapi/linux/if_addr.h>
include <include/uapi/linux/if_addrlabel.h>
include <include/uapi/linux/if_bridge.h>
include <include/uapi/linux/if_link.h>
include <include/uapi/linux/if_macsec.h>
include <include/uapi/linux/if_team.h>
include <include/uapi/linux/if_tun.h>
include <include/uapi/linux/if_tunnel.h>
include <include/uapi/linux/iio/buffer.h>
include <include/uapi/linux/ila.h>
include <include/uapi/linux/inotify.h>
include <include/uapi/linux/ioam6_genl.h>
include <include/uapi/linux/ip_vs.h>
include <include/uapi/linux/joystick.h>
include <include/uapi/linux/kcov.h>
include <include/uapi/linux/kvm.h>
include <include/uapi/linux/l2tp.h>
include <include/uapi/linux/landlock.h>
include <include/uapi/linux/loop.h>
include <include/uapi/linux/lp.h>
include <include/uapi/linux/lwtunnel.h>
include <include/uapi/linux/media.h>
include <include/uapi/linux/mei.h>
include <include/uapi/linux/mpls_iptunnel.h>
include <include/uapi/linux/mptcp_pm.h>
include <include/uapi/linux/msdos_fs.h>
include <include/uapi/linux/nbd-netlink.h>
include <include/uapi/linux/ncsi.h>
include <include/uapi/linux/neighbour.h>
include <include/uapi/linux/net_dropmon.h>
include <include/uapi/linux/net_namespace.h>
include <include/uapi/linux/net_shaper.h>
include <include/uapi/linux/netconf.h>
include <include/uapi/linux/netdev.h>
include <include/uapi/linux/netfilter/ipset/ip_set.h>
include <include/uapi/linux/netfilter/nf_tables.h>
include <include/uapi/linux/netfilter/nf_tables_compat.h>
include <include/uapi/linux/netfilter/nfnetlink.h>
include <include/uapi/linux/netfilter/nfnetlink_acct.h>
include <include/uapi/linux/netfilter/nfnetlink_conntrack.h>
include <include/uapi/linux/netfilter/nfnetlink_cthelper.h>
include <include/uapi/linux/netfilter/nfnetlink_cttimeout.h>
include <include/uapi/linux/netfilter/nfnetlink_log.h>
include <include/uapi/linux/netfilter/nfnetlink_osf.h>
include <include/uapi/linux/netfilter/nfnetlink_queue.h>
include <include/uapi/linux/nexthop.h>
include <include/uapi/linux/nfc.h>
include <include/uapi/linux/nfsd_netlink.h>
include <include/uapi/linux/nl80211.h>
include <include/uapi/linux/nsfs.h>
include <include/uapi/linux/nvram.h>
include <include/uapi/linux/openvswitch.h>
include <include/uapi/linux/pidfd.h>
include <include/uapi/linux/pkt_cls.h>
include <include/uapi/linux/pkt_sched.h>
include <include/uapi/linux/ppp-ioctl.h>
include <include/uapi/linux/ppp_defs.h>
include <include/uapi/linux/pps.h>
include <include/uapi/linux/random.h>
include <include/uapi/linux/rfkill.h>
include <include/uapi/linux/rpl_iptunnel.h>
include <include/uapi/linux/rtc.h>
include <include/uapi/linux/rtnetlink.h>
include <include/uapi/linux/seccomp.h>
include <include/uapi/linux/seg6_genl.h>
include <include/uapi/linux/seg6_iptunnel.h>
include <include/uapi/linux/seg6_local.h>
include <include/uapi/linux/smc.h>
include <include/uapi/linux/sockios.h>
include <include/uapi/linux/soundcard.h>
include <include/uapi/linux/suspend_ioctls.h>
include <include/uapi/linux/sync_file.h>
include <include/uapi/linux/taskstats.h>
include <include/uapi/linux/tc_act/tc_bpf.h>
include <include/uapi/linux/tc_act/tc_connmark.h>
include <include/uapi/linux/tc_act/tc_csum.h>
include <include/uapi/linux/tc_act/tc_ct.h>
include <include/uapi/linux/tc_act/tc_ctinfo.h>
include <include/uapi/linux/tc_act/tc_defact.h>
include <include/uapi/linux/tc_act/tc_gact.h>
include <include/uapi/linux/tc_act/tc_gate.h>
include <include/uapi/linux/tc_act/tc_ife.h>
include <include/uapi/linux/tc_act/tc_mirred.h>
include <include/uapi/linux/tc_act/tc_mpls.h>
include <include/uapi/linux/tc_act/tc_nat.h>
include <include/uapi/linux/tc_act/tc_pedit.h>
include <include/uapi/linux/tc_act/tc_sample.h>
include <include/uapi/linux/tc_act/tc_skbedit.h>
include <include/uapi/linux/tc_act/tc_skbmod.h>
include <include/uapi/linux/tc_act/tc_tunnel_key.h>
include <include/uapi/linux/tc_act/tc_vlan.h>
include <include/uapi/linux/tc_ematch/tc_em_ipt.h>
include <include/uapi/linux/tc_ematch/tc_em_meta.h>
include <include/uapi/linux/tcp_metrics.h>
include <include/uapi/linux/tee.h>
include <include/uapi/linux/thermal.h>
include <include/uapi/linux/timerfd.h>
include <include/uapi/linux/tipc_netlink.h>
include <include/uapi/linux/udf_fs_i.h>
include <include/uapi/linux/udmabuf.h>
include <include/uapi/linux/usb/cdc-wdm.h>
include <include/uapi/linux/usb/functionfs.h>
include <include/uapi/linux/usb/g_hid.h>
include <include/uapi/linux/usb/g_printer.h>
include <include/uapi/linux/usb/gadgetfs.h>
include <include/uapi/linux/usb/raw_gadget.h>
include <include/uapi/linux/usb/tmc.h>
include <include/uapi/linux/userfaultfd.h>
include <include/uapi/linux/vdpa.h>
include <include/uapi/linux/vduse.h>
include <include/uapi/linux/veth.h>
include <include/uapi/linux/vfio.h>
include <include/uapi/linux/vhost.h>
include <include/uapi/linux/watch_queue.h>
include <include/uapi/linux/watchdog.h>
include <include/uapi/linux/wireguard.h>
include <include/uapi/linux/wwan.h>
include <include/uapi/linux/xfrm.h>
include <include/uapi/mtd/ubi-user.h>
include <include/uapi/rdma/rdma_netlink.h>
include <include/uapi/rdma/rdma_user_ioctl.h>
include <include/uapi/sound/asound.h>
include <net/netlabel/netlabel_calipso.h>
include <net/netlabel/netlabel_cipso_v4.h>
include <net/netlabel/netlabel_mgmt.h>
include <net/netlabel/netlabel_unlabeled.h>
define IMADDTIMER	2147764544
define IMDELTIMER	2147764545
define IOCNR_GET_BUS_ADDRESS	5
define IOCNR_GET_DEVICE_ID	1
define IOCNR_GET_PROTOCOLS	2
define IOCNR_GET_VID_PID	6
define IOCNR_HP_SET_CHANNEL	4
define IOCNR_SET_PROTOCOL	3
define IOCNR_SOFT_RESET	7
define IOCTL_CONFIG_SYS_RESOURCE_PARAMETERS	1074356480
define IOCTL_GET_DRV_VERSION	2
define IOCTL_GET_HARD_VERSION	1
define IOCTL_GET_NUM_DEVICES	1074028804
define IOCTL_START_ACCEL_DEV	1074356482
define IOCTL_STATUS_ACCEL_DEV	1074028803
define IOCTL_STOP_ACCEL_DEV	1074356481
define IOCTL_VMCI_CTX_ADD_NOTIFICATION	1967
define IOCTL_VMCI_CTX_GET_CPT_STATE	1969
define IOCTL_VMCI_CTX_REMOVE_NOTIFICATION	1968
define IOCTL_VMCI_CTX_SET_CPT_STATE	1970
define IOCTL_VMCI_DATAGRAM_RECEIVE	1964
define IOCTL_VMCI_DATAGRAM_SEND	1963
define IOCTL_VMCI_GET_CONTEXT_ID	1971
define IOCTL_VMCI_INIT_CONTEXT	1952
define IOCTL_VMCI_NOTIFICATIONS_RECEIVE	1958
define IOCTL_VMCI_NOTIFY_RESOURCE	1957
define IOCTL_VMCI_QUEUEPAIR_ALLOC	1960
define IOCTL_VMCI_QUEUEPAIR_DETACH	1962
define IOCTL_VMCI_QUEUEPAIR_SETPAGEFILE	1961
define IOCTL_VMCI_QUEUEPAIR_SETVA	1956
define IOCTL_VMCI_SET_NOTIFY	1995
define IOCTL_VMCI_VERSION	1951
define IOCTL_VMCI_VERSION2	1959
define IOW_GETINFO	2150154243
define IOW_READ	1074315266
define IOW_WRITE	1074315265
define MON_IOCG_STATS	2148045315
define MON_IOCH_MFLUSH	37384
define MON_IOCQ_RING_SIZE	37381
define MON_IOCQ_URB_LEN	37377
define MON_IOCT_RING_SIZE	37380
define MON_IOCX_GET	1075352070
define MON_IOCX_GETX	1075352074
define MON_IOCX_MFETCH	3222311431
define ROCCATIOCGREPSIZE	2147764465
define SCSI_IOCTL_GET_BUS_NUMBER	21382
define SCSI_IOCTL_GET_IDLUN	21378
define SCSI_IOCTL_SEND_COMMAND	1
define SECCOMP_IOCTL_NOTIF_ID_VALID_WRONG_DIR	2148016386
define SG_EMULATED_HOST	8707
define SG_GET_COMMAND_Q	8816
define SG_GET_RESERVED_SIZE	8818
define SG_GET_TIMEOUT	8706
define SG_GET_VERSION_NUM	8834
define SG_IO	8837
define SG_SET_COMMAND_Q	8817
define SG_SET_RESERVED_SIZE	8821
define SG_SET_TIMEOUT	8705
define SISUSB_COMMAND	3222074173
define SISUSB_GET_CONFIG	2152002367
define SISUSB_GET_CONFIG_SIZE	2147808062
define SNDRV_RAWMIDI_IOCTL_STATUS32	3223607072
define SNDRV_RAWMIDI_IOCTL_STATUS64	3224917792
define SW_SYNC_GET_DEADLINE	3222296322
define SW_SYNC_IOC_CREATE_FENCE	3223869184
define SW_SYNC_IOC_INC	1074026241
auto_adf_cfg_val_type = ADF_DEC, ADF_HEX, ADF_STR
auto_landlock_rule_type = LANDLOCK_RULE_PATH_BENEATH, LANDLOCK_RULE_NET_PORT
resource genl_802_15_4_MAC_family_id_auto[int16]
resource genl_HSR_family_id_auto[int16]
resource genl_IOAM6_family_id_auto[int16]
resource genl_IPVS_family_id_auto[int16]
resource genl_MAC80211_HWSIM_family_id_auto[int16]
resource genl_MAC802154_HWSIM_family_id_auto[int16]
resource genl_NCSI_family_id_auto[int16]
resource genl_NET_DM_family_id_auto[int16]
resource genl_NLBL_CALIPSO_family_id_auto[int16]
resource genl_NLBL_CIPSOv4_family_id_auto[int16]
resource genl_NLBL_MGMT_family_id_auto[int16]
resource genl_NLBL_UNLBL_family_id_auto[int16]
resource genl_SEG6_family_id_auto[int16]
resource genl_SMC_GEN_NETLINK_family_id_auto[int16]
resource genl_SMC_PNETID_family_id_auto[int16]
resource genl_TASKSTATS_family_id_auto[int16]
resource genl_TIPCv2_family_id_auto[int16]
resource genl_batadv_family_id_auto[int16]
resource genl_cifs_family_id_auto[int16]
resource genl_ethtool_family_id_auto[int16]
resource genl_gtp_family_id_auto[int16]
resource genl_handshake_family_id_auto[int16]
resource genl_ila_family_id_auto[int16]
resource genl_l2tp_family_id_auto[int16]
resource genl_macsec_family_id_auto[int16]
resource genl_nbd_family_id_auto[int16]
resource genl_net_shaper_family_id_auto[int16]
resource genl_netdev_family_id_auto[int16]
resource genl_nfc_family_id_auto[int16]
resource genl_nfsd_family_id_auto[int16]
resource genl_nl80211_family_id_auto[int16]
resource genl_nl802154_family_id_auto[int16]
resource genl_nlctrl_family_id_auto[int16]
resource genl_ovs_ct_limit_family_id_auto[int16]
resource genl_ovs_datapath_family_id_auto[int16]
resource genl_ovs_flow_family_id_auto[int16]
resource genl_ovs_meter_family_id_auto[int16]
resource genl_ovs_packet_family_id_auto[int16]
resource genl_ovs_vport_family_id_auto[int16]
resource genl_tcp_metrics_family_id_auto[int16]
resource genl_thermal_family_id_auto[int16]
resource genl_vdpa_family_id_auto[int16]
resource genl_wireguard_family_id_auto[int16]
type auto_todo intptr
type msghdr_802_15_4_MAC_auto[CMD, POLICY] msghdr_netlink[netlink_msg_t[genl_802_15_4_MAC_family_id_auto, genlmsghdr_t[CMD], POLICY]]
type msghdr_HSR_auto[CMD, POLICY] msghdr_netlink[netlink_msg_t[genl_HSR_family_id_auto, genlmsghdr_t[CMD], POLICY]]
type msghdr_IOAM6_auto[CMD, POLICY] msghdr_netlink[netlink_msg_t[genl_IOAM6_family_id_auto, genlmsghdr_t[CMD], POLICY]]
type msghdr_IPVS_auto[CMD, POLICY] msghdr_netlink[netlink_msg_t[genl_IPVS_family_id_auto, genlmsghdr_t[CMD], POLICY]]
type msghdr_MAC80211_HWSIM_auto[CMD, POLICY] msghdr_netlink[netlink_msg_t[genl_MAC80211_HWSIM_family_id_auto, genlmsghdr_t[CMD], POLICY]]
type msghdr_MAC802154_HWSIM_auto[CMD, POLICY] msghdr_netlink[netlink_msg_t[genl_MAC802154_HWSIM_family_id_auto, genlmsghdr_t[CMD], POLICY]]
type msghdr_NCSI_auto[CMD, POLICY] msghdr_netlink[netlink_msg_t[genl_NCSI_family_id_auto, genlmsghdr_t[CMD], POLICY]]
type msghdr_NET_DM_auto[CMD, POLICY] msghdr_netlink[netlink_msg_t[genl_NET_DM_family_id_auto, genlmsghdr_t[CMD], POLICY]]
type msghdr_NLBL_CALIPSO_auto[CMD, POLICY] msghdr_netlink[netlink_msg_t[genl_NLBL_CALIPSO_family_id_auto, genlmsghdr_t[CMD], POLICY]]
type msghdr_NLBL_CIPSOv4_auto[CMD, POLICY] msghdr_netlink[netlink_msg_t[genl_NLBL_CIPSOv4_family_id_auto, genlmsghdr_t[CMD], POLICY]]
type msghdr_NLBL_MGMT_auto[CMD, POLICY] msghdr_netlink[netlink_msg_t[genl_NLBL_MGMT_family_id_auto, genlmsghdr_t[CMD], POLICY]]
type msghdr_NLBL_UNLBL_auto[CMD, POLICY] msghdr_netlink[netlink_msg_t[genl_NLBL_UNLBL_family_id_auto, genlmsghdr_t[CMD], POLICY]]
type msghdr_SEG6_auto[CMD, POLICY] msghdr_netlink[netlink_msg_t[genl_SEG6_family_id_auto, genlmsghdr_t[CMD], POLICY]]
type msghdr_SMC_GEN_NETLINK_auto[CMD, POLICY] msghdr_netlink[netlink_msg_t[genl_SMC_GEN_NETLINK_family_id_auto, genlmsghdr_t[CMD], POLICY]]
type msghdr_SMC_PNETID_auto[CMD, POLICY] msghdr_netlink[netlink_msg_t[genl_SMC_PNETID_family_id_auto, genlmsghdr_t[CMD], POLICY]]
type msghdr_TASKSTATS_auto[CMD, POLICY] msghdr_netlink[netlink_msg_t[genl_TASKSTATS_family_id_auto, genlmsghdr_t[CMD], POLICY]]
type msghdr_TIPCv2_auto[CMD, POLICY] msghdr_netlink[netlink_msg_t[genl_TIPCv2_family_id_auto, genlmsghdr_t[CMD], POLICY]]
type msghdr_batadv_auto[CMD, POLICY] msghdr_netlink[netlink_msg_t[genl_batadv_family_id_auto, genlmsghdr_t[CMD], POLICY]]
type msghdr_cifs_auto[CMD, POLICY] msghdr_netlink[netlink_msg_t[genl_cifs_family_id_auto, genlmsghdr_t[CMD], POLICY]]
type msghdr_ethtool_auto[CMD, POLICY] msghdr_netlink[netlink_msg_t[genl_ethtool_family_id_auto, genlmsghdr_t[CMD], POLICY]]
type msghdr_gtp_auto[CMD, POLICY] msghdr_netlink[netlink_msg_t[genl_gtp_family_id_auto, genlmsghdr_t[CMD], POLICY]]
type msghdr_handshake_auto[CMD, POLICY] msghdr_netlink[netlink_msg_t[genl_handshake_family_id_auto, genlmsghdr_t[CMD], POLICY]]
type msghdr_ila_auto[CMD, POLICY] msghdr_netlink[netlink_msg_t[genl_ila_family_id_auto, genlmsghdr_t[CMD], POLICY]]
type msghdr_l2tp_auto[CMD, POLICY] msghdr_netlink[netlink_msg_t[genl_l2tp_family_id_auto, genlmsghdr_t[CMD], POLICY]]
type msghdr_macsec_auto[CMD, POLICY] msghdr_netlink[netlink_msg_t[genl_macsec_family_id_auto, genlmsghdr_t[CMD], POLICY]]
type msghdr_nbd_auto[CMD, POLICY] msghdr_netlink[netlink_msg_t[genl_nbd_family_id_auto, genlmsghdr_t[CMD], POLICY]]
type msghdr_net_shaper_auto[CMD, POLICY] msghdr_netlink[netlink_msg_t[genl_net_shaper_family_id_auto, genlmsghdr_t[CMD], POLICY]]
type msghdr_netdev_auto[CMD, POLICY] msghdr_netlink[netlink_msg_t[genl_netdev_family_id_auto, genlmsghdr_t[CMD], POLICY]]
type msghdr_nfc_auto[CMD, POLICY] msghdr_netlink[netlink_msg_t[genl_nfc_family_id_auto, genlmsghdr_t[CMD], POLICY]]
type msghdr_nfsd_auto[CMD, POLICY] msghdr_netlink[netlink_msg_t[genl_nfsd_family_id_auto, genlmsghdr_t[CMD], POLICY]]
type msghdr_nl80211_auto[CMD, POLICY] msghdr_netlink[netlink_msg_t[genl_nl80211_family_id_auto, genlmsghdr_t[CMD], POLICY]]
type msghdr_nl802154_auto[CMD, POLICY] msghdr_netlink[netlink_msg_t[genl_nl802154_family_id_auto, genlmsghdr_t[CMD], POLICY]]
type msghdr_nlctrl_auto[CMD, POLICY] msghdr_netlink[netlink_msg_t[genl_nlctrl_family_id_auto, genlmsghdr_t[CMD], POLICY]]
type msghdr_ovs_ct_limit_auto[CMD, POLICY] msghdr_netlink[netlink_msg_t[genl_ovs_ct_limit_family_id_auto, genlmsghdr_t[CMD], POLICY]]
type msghdr_ovs_datapath_auto[CMD, POLICY] msghdr_netlink[netlink_msg_t[genl_ovs_datapath_family_id_auto, genlmsghdr_t[CMD], POLICY]]
type msghdr_ovs_flow_auto[CMD, POLICY] msghdr_netlink[netlink_msg_t[genl_ovs_flow_family_id_auto, genlmsghdr_t[CMD], POLICY]]
type msghdr_ovs_meter_auto[CMD, POLICY] msghdr_netlink[netlink_msg_t[genl_ovs_meter_family_id_auto, genlmsghdr_t[CMD], POLICY]]
type msghdr_ovs_packet_auto[CMD, POLICY] msghdr_netlink[netlink_msg_t[genl_ovs_packet_family_id_auto, genlmsghdr_t[CMD], POLICY]]
type msghdr_ovs_vport_auto[CMD, POLICY] msghdr_netlink[netlink_msg_t[genl_ovs_vport_family_id_auto, genlmsghdr_t[CMD], POLICY]]
type msghdr_tcp_metrics_auto[CMD, POLICY] msghdr_netlink[netlink_msg_t[genl_tcp_metrics_family_id_auto, genlmsghdr_t[CMD], POLICY]]
type msghdr_thermal_auto[CMD, POLICY] msghdr_netlink[netlink_msg_t[genl_thermal_family_id_auto, genlmsghdr_t[CMD], POLICY]]
type msghdr_vdpa_auto[CMD, POLICY] msghdr_netlink[netlink_msg_t[genl_vdpa_family_id_auto, genlmsghdr_t[CMD], POLICY]]
type msghdr_wireguard_auto[CMD, POLICY] msghdr_netlink[netlink_msg_t[genl_wireguard_family_id_auto, genlmsghdr_t[CMD], POLICY]]
type smc_gen_nl_policy$auto_smc_netlink auto_todo
_llseek$auto(fd fd, offset_high intptr, offset_low intptr, result ptr[inout, int64], whence int32) (automatic)
_newselect$auto(n int32, inp ptr[inout, __kernel_fd_set$auto_record], outp ptr[inout, __kernel_fd_set$auto_record], exp ptr[inout, __kernel_fd_set$auto_record], tvp ptr[inout, __kernel_old_timeval$auto_record]) (automatic)
accept$auto(fd fd, upeer_sockaddr ptr[inout, sockaddr$auto_record], upeer_addrlen ptr[inout, int32]) (automatic)
accept4$auto(fd fd, upeer_sockaddr ptr[inout, sockaddr$auto_record], upeer_addrlen ptr[inout, int32], flags int32) (automatic)
access$auto(filename ptr[in, filename], mode int32) (automatic)
acct$auto(name ptr[in, string]) (automatic)
add_key$auto(_type ptr[in, string], _description ptr[in, string], _payload ptr[in, array[auto_todo]], plen intptr, ringid int32) (automatic)
adjtimex$auto(txc_p ptr[inout, __kernel_timex$auto_record]) (automatic)
alarm$auto(seconds int32) (automatic)
arch_prctl$auto(option int32, arg2 intptr) (automatic)
arm_sync_file_range$auto(fd fd, flags int32, offset intptr, nbytes intptr) (automatic)
bind$auto(fd fd, umyaddr ptr[inout, sockaddr$auto_record], addrlen int32) (automatic)
bpf$auto(cmd int32, uattr ptr[inout, bpf_attr$auto_record], size int32) (automatic)
brk$auto(brk intptr) (automatic)
cachestat$auto(fd fd, cstat_range ptr[inout, cachestat_range$auto_record], cstat ptr[inout, cachestat$auto_record], flags int32) (automatic)
capget$auto(header ptr[inout, __user_cap_header_struct$auto_record], dataptr ptr[inout, __user_cap_data_struct$auto_record]) (automatic)
capset$auto(header ptr[inout, __user_cap_header_struct$auto_record], data ptr[inout, __user_cap_data_struct$auto_record]) (automatic)
chdir$auto(filename ptr[in, filename]) (automatic)
chmod$auto(filename ptr[in, filename], mode int16) (automatic)
chown$auto(filename ptr[in, filename], user uid, group gid) (automatic)
chown32$auto(filename ptr[in, filename], user uid, group gid) (automatic)
chroot$auto(filename ptr[in, filename]) (automatic)
clock_adjtime$auto(which_clock int32, utx ptr[inout, __kernel_timex$auto_record]) (automatic)
clock_adjtime64$auto(which_clock int32, utx ptr[inout, __kernel_timex$auto_record]) (automatic)
clock_getres$auto(which_clock int32, tp ptr[inout, __kernel_timespec$auto_record]) (automatic)
clock_getres_time64$auto(which_clock int32, tp ptr[inout, __kernel_timespec$auto_record]) (automatic)
clock_gettime$auto(which_clock int32, tp ptr[inout, __kernel_timespec$auto_record]) (automatic)
clock_gettime64$auto(which_clock int32, tp ptr[inout, __kernel_timespec$auto_record]) (automatic)
clock_nanosleep$auto(which_clock int32, flags int32, rqtp ptr[in, __kernel_timespec$auto_record], rmtp ptr[inout, __kernel_timespec$auto_record]) (automatic)
clock_nanosleep_time64$auto(which_clock int32, flags int32, rqtp ptr[in, __kernel_timespec$auto_record], rmtp ptr[inout, __kernel_timespec$auto_record]) (automatic)
clock_settime$auto(which_clock int32, tp ptr[in, __kernel_timespec$auto_record]) (automatic)
clock_settime64$auto(which_clock int32, tp ptr[in, __kernel_timespec$auto_record]) (automatic)
clone$auto(clone_flags intptr, newsp intptr, parent_tidptr ptr[inout, int32], child_tidptr ptr[inout, int32], tls intptr) (automatic)
clone3$auto(uargs ptr[inout, clone_args$auto_record], size intptr) (automatic)
close$auto(fd fd) (automatic)
close_range$auto(fd fd, max_fd fd, flags int32) (automatic)
connect$auto(fd fd, uservaddr ptr[inout, sockaddr$auto_record], addrlen int32) (automatic)
copy_file_range$auto(fd_in fd, off_in ptr[inout, int64], fd_out fd, off_out ptr[inout, int64], len intptr, flags int32) (automatic)
creat$auto(pathname ptr[in, filename], mode int16) (automatic)
delete_module$auto(name_user ptr[in, string], flags int32) (automatic)
dup$auto(fildes fd) (automatic)
dup2$auto(oldfd fd, newfd fd) (automatic)
dup3$auto(oldfd fd, newfd fd, flags int32) (automatic)
epoll_create$auto(size int32) (automatic)
epoll_create1$auto(flags int32) (automatic)
epoll_ctl$auto(epfd fd, op int32, fd fd, event ptr[inout, epoll_event$auto_record]) (automatic)
epoll_pwait$auto(epfd fd, events ptr[inout, epoll_event$auto_record], maxevents int32, timeout int32, sigmask ptr[in, sigset_t$auto_record], sigsetsize const[8]) (automatic)
epoll_pwait2$auto(epfd fd, events ptr[inout, epoll_event$auto_record], maxevents int32, timeout ptr[in, __kernel_timespec$auto_record], sigmask ptr[in, sigset_t$auto_record], sigsetsize const[8]) (automatic)
epoll_wait$auto(epfd fd, events ptr[inout, epoll_event$auto_record], maxevents int32, timeout int32) (automatic)
eventfd$auto(count int32) (automatic)
eventfd2$auto(count int32, flags int32) (automatic)
execve$auto(filename ptr[in, filename], argv ptr[in, ptr[in, string]], envp ptr[in, ptr[in, string]]) (automatic)
execveat$auto(fd fd, filename ptr[in, filename], argv ptr[in, ptr[in, string]], envp ptr[in, ptr[in, string]], flags int32) (automatic)
exit$auto(error_code int32) (automatic)
exit_group$auto(error_code int32) (automatic)
faccessat$auto(dfd fd_dir, filename ptr[in, filename], mode int32) (automatic)
faccessat2$auto(dfd fd_dir, filename ptr[in, filename], mode int32, flags int32) (automatic)
fadvise64$auto(fd fd, offset intptr, len intptr, advice int32) (automatic)
fadvise64_64$auto(fd fd, offset_low int32, offset_high int32, len_low int32, len_high int32, advice int32) (automatic)
fallocate$auto(fd fd, mode int32, offset intptr, len intptr) (automatic)
fanotify_init$auto(flags int32, event_f_flags int32) (automatic)
fanotify_mark$auto(fanotify_fd fd, flags int32, mask intptr, dfd fd_dir, pathname ptr[in, filename]) (automatic)
fchdir$auto(fd fd) (automatic)
fchmod$auto(fd fd, mode int16) (automatic)
fchmodat$auto(dfd fd_dir, filename ptr[in, filename], mode int16) (automatic)
fchmodat2$auto(dfd fd_dir, filename ptr[in, filename], mode int16, flags int32) (automatic)
fchown$auto(fd fd, user uid, group gid) (automatic)
fchown32$auto(fd fd, user uid, group gid) (automatic)
fchownat$auto(dfd fd_dir, filename ptr[in, filename], user uid, group gid, flag int32) (automatic)
fcntl$auto(fd fd, cmd int32, arg intptr) (automatic)
fdatasync$auto(fd fd) (automatic)
fgetxattr$auto(fd fd, name ptr[in, string], value ptr[inout, array[auto_todo]], size intptr) (automatic)
finit_module$auto(fd fd, uargs ptr[in, string], flags int32) (automatic)
flistxattr$auto(fd fd, list ptr[inout, string], size intptr) (automatic)
flock$auto(fd fd, cmd int32) (automatic)
fremovexattr$auto(fd fd, name ptr[in, string]) (automatic)
fsconfig$auto(fd fd, cmd int32, _key ptr[in, string], _value ptr[in, array[auto_todo]], aux int32) (automatic)
fsetxattr$auto(fd fd, name ptr[in, string], value ptr[in, array[auto_todo]], size intptr, flags int32) (automatic)
fsmount$auto(fs_fd fd, flags int32, attr_flags int32) (automatic)
fsopen$auto(_fs_name ptr[in, string], flags int32) (automatic)
fspick$auto(dfd fd_dir, path ptr[in, filename], flags int32) (automatic)
fstat$auto(fd fd, statbuf ptr[inout, stat$auto_record]) (automatic)
fstatfs$auto(fd fd, buf ptr[inout, statfs$auto_record]) (automatic)
fstatfs64$auto(fd fd, sz intptr, buf ptr[inout, statfs64$auto_record]) (automatic)
fsync$auto(fd fd) (automatic)
ftruncate$auto(fd fd, length intptr) (automatic)
ftruncate64$auto(fd fd, offset_low intptr, offset_high intptr) (automatic)
futex$auto(uaddr ptr[inout, int32], op int32, val int32, utime ptr[in, __kernel_timespec$auto_record], uaddr2 ptr[inout, int32], val3 int32) (automatic)
futex_requeue$auto(waiters ptr[inout, futex_waitv$auto_record], flags int32, nr_wake int32, nr_requeue int32) (automatic)
futex_time64$auto(uaddr ptr[inout, int32], op int32, val int32, utime ptr[in, __kernel_timespec$auto_record], uaddr2 ptr[inout, int32], val3 int32) (automatic)
futex_wait$auto(uaddr ptr[inout, array[auto_todo]], val intptr, mask intptr, flags int32, timeout ptr[inout, __kernel_timespec$auto_record], clockid int32) (automatic)
futex_waitv$auto(waiters ptr[inout, futex_waitv$auto_record], nr_futexes int32, flags int32, timeout ptr[inout, __kernel_timespec$auto_record], clockid int32) (automatic)
futex_wake$auto(uaddr ptr[inout, array[auto_todo]], mask intptr, nr int32, flags int32) (automatic)
futimesat$auto(dfd fd_dir, filename ptr[in, filename], utimes ptr[inout, __kernel_old_timeval$auto_record]) (automatic)
get_mempolicy$auto(policy ptr[inout, int32], nmask ptr[inout, intptr], maxnode intptr, addr intptr, flags intptr) (automatic)
get_robust_list$auto(pid pid, head_ptr ptr[inout, ptr[inout, robust_list_head$auto_record]], len_ptr ptr[inout, intptr]) (automatic)
get_thread_area$auto(u_info ptr[inout, user_desc$auto_record]) (automatic)
getcpu$auto(cpup ptr[inout, int32], nodep ptr[inout, int32], unused ptr[inout, getcpu_cache$auto_record]) (automatic)
getcwd$auto(buf ptr[inout, string], size intptr) (automatic)
getdents$auto(fd fd, dirent ptr[inout, linux_dirent$auto_record], count int32) (automatic)
getdents64$auto(fd fd, dirent ptr[inout, linux_dirent64$auto_record], count int32) (automatic)
getgroups$auto(gidsetsize int32, grouplist ptr[inout, int32]) (automatic)
getgroups32$auto(gidsetsize int32, grouplist ptr[inout, int32]) (automatic)
getitimer$auto(which int32, value ptr[inout, __kernel_old_itimerval$auto_record]) (automatic)
getpeername$auto(fd fd, usockaddr ptr[inout, sockaddr$auto_record], usockaddr_len ptr[inout, int32]) (automatic)
getpgid$auto(pid pid) (automatic)
getpriority$auto(which int32, who int32) (automatic)
getrandom$auto(ubuf ptr[inout, string], len intptr, flags int32) (automatic)
getresgid$auto(rgidp ptr[inout, int32], egidp ptr[inout, int32], sgidp ptr[inout, int32]) (automatic)
getresgid32$auto(rgidp ptr[inout, int32], egidp ptr[inout, int32], sgidp ptr[inout, int32]) (automatic)
getresuid$auto(ruidp ptr[inout, int32], euidp ptr[inout, int32], suidp ptr[inout, int32]) (automatic)
getresuid32$auto(ruidp ptr[inout, int32], euidp ptr[inout, int32], suidp ptr[inout, int32]) (automatic)
getrlimit$auto(_resource int32, rlim ptr[inout, rlimit$auto_record]) (automatic)
getrusage$auto(who int32, ru ptr[inout, rusage$auto_record]) (automatic)
getsid$auto(pid pid) (automatic)
getsockname$auto(fd fd, usockaddr ptr[inout, sockaddr$auto_record], usockaddr_len ptr[inout, int32]) (automatic)
getsockopt$auto(fd fd, level int32, optname int32, optval ptr[inout, string], optlen ptr[inout, int32]) (automatic)
gettimeofday$auto(tv ptr[inout, __kernel_old_timeval$auto_record], tz ptr[inout, timezone$auto_record]) (automatic)
getxattr$auto(pathname ptr[in, filename], name ptr[in, string], value ptr[inout, array[auto_todo]], size intptr) (automatic)
getxattrat$auto(dfd fd_dir, pathname ptr[in, filename], at_flags int32, name ptr[in, string], uargs ptr[inout, xattr_args$auto_record], usize intptr) (automatic)
init_module$auto(umod ptr[inout, array[auto_todo]], len intptr, uargs ptr[in, string]) (automatic)
inotify_add_watch$auto(fd fd, pathname ptr[in, filename], mask int32) (automatic)
inotify_init1$auto(flags int32) (automatic)
inotify_rm_watch$auto(fd fd, wd int32) (automatic)
io_cancel$auto(ctx_id intptr, iocb ptr[inout, iocb$auto_record], result ptr[inout, io_event$auto_record]) (automatic)
io_destroy$auto(ctx intptr) (automatic)
io_getevents$auto(ctx_id intptr, min_nr intptr, nr intptr, events ptr[inout, io_event$auto_record], timeout ptr[inout, __kernel_timespec$auto_record]) (automatic)
io_pgetevents$auto(ctx_id intptr, min_nr intptr, nr intptr, events ptr[inout, io_event$auto_record], timeout ptr[inout, __kernel_timespec$auto_record], usig ptr[in, __aio_sigset$auto_record]) (automatic)
io_pgetevents_time64$auto(ctx_id intptr, min_nr intptr, nr intptr, events ptr[inout, io_event$auto_record], timeout ptr[inout, __kernel_timespec$auto_record], usig ptr[in, __aio_sigset$auto_record]) (automatic)
io_setup$auto(nr_events int32, ctxp ptr[inout, intptr]) (automatic)
io_submit$auto(ctx_id intptr, nr intptr, iocbpp ptr[inout, ptr[inout, iocb$auto_record]]) (automatic)
io_uring_enter$auto(fd fd, to_submit int32, min_complete int32, flags int32, argp ptr[in, array[auto_todo]], argsz intptr) (automatic)
io_uring_register$auto(fd fd, opcode int32, arg ptr[inout, array[auto_todo]], nr_args int32) (automatic)
io_uring_setup$auto(entries int32, params ptr[inout, io_uring_params$auto_record]) (automatic)
ioctl$auto(fd fd, cmd int32, arg intptr) (automatic)
ioperm$auto(from intptr, num intptr, turn_on int32) (automatic)
iopl$auto(level int32) (automatic)
ioprio_get$auto(which int32, who int32) (automatic)
ioprio_set$auto(which int32, who int32, ioprio int32) (automatic)
kcmp$auto(pid1 int32, pid2 int32, type int32, idx1 intptr, idx2 intptr) (automatic)
kexec_load$auto(entry intptr, nr_segments intptr, segments ptr[inout, kexec_segment$auto_record], flags intptr) (automatic)
keyctl$auto(option int32, arg2 intptr, arg3 intptr, arg4 intptr, arg5 intptr) (automatic)
kill$auto(pid pid, sig int32) (automatic)
landlock_add_rule$auto(ruleset_fd fd, rule_type flags[auto_landlock_rule_type], rule_attr ptr[in, array[auto_todo]], flags int32) (automatic)
landlock_create_ruleset$auto(attr ptr[in, landlock_ruleset_attr$auto_record], size intptr, flags int32) (automatic)
landlock_restrict_self$auto(ruleset_fd fd, flags int32) (automatic)
lchown$auto(filename ptr[in, filename], user uid, group gid) (automatic)
lchown32$auto(filename ptr[in, filename], user uid, group gid) (automatic)
lgetxattr$auto(pathname ptr[in, filename], name ptr[in, string], value ptr[inout, array[auto_todo]], size intptr) (automatic)
link$auto(oldname ptr[in, filename], newname ptr[in, filename]) (automatic)
linkat$auto(olddfd fd_dir, oldname ptr[in, filename], newdfd fd_dir, newname ptr[in, filename], flags int32) (automatic)
listen$auto(fd fd, backlog int32) (automatic)
listmount$auto(req ptr[in, mnt_id_req$auto_record], mnt_ids ptr[inout, int64], nr_mnt_ids intptr, flags int32) (automatic)
listxattr$auto(pathname ptr[in, filename], list ptr[inout, string], size intptr) (automatic)
listxattrat$auto(dfd fd_dir, pathname ptr[in, filename], at_flags int32, list ptr[inout, string], size intptr) (automatic)
llistxattr$auto(pathname ptr[in, filename], list ptr[inout, string], size intptr) (automatic)
lremovexattr$auto(pathname ptr[in, filename], name ptr[in, string]) (automatic)
lseek$auto(fd fd, offset intptr, whence int32) (automatic)
lsetxattr$auto(pathname ptr[in, filename], name ptr[in, string], value ptr[in, array[auto_todo]], size intptr, flags int32) (automatic)
lsm_get_self_attr$auto(attr int32, ctx ptr[inout, lsm_ctx$auto_record], size ptr[inout, int32], flags int32) (automatic)
lsm_list_modules$auto(ids ptr[inout, int64], size ptr[inout, int32], flags int32) (automatic)
lsm_set_self_attr$auto(attr int32, ctx ptr[inout, lsm_ctx$auto_record], size int32, flags int32) (automatic)
lstat$auto(filename ptr[in, filename], statbuf ptr[inout, stat$auto_record]) (automatic)
madvise$auto(start intptr, len_in intptr, behavior int32) (automatic)
map_shadow_stack$auto(addr intptr, size intptr, flags int32) (automatic)
mbind$auto(start intptr, len intptr, mode intptr, nmask ptr[in, intptr], maxnode intptr, flags int32) (automatic)
membarrier$auto(cmd int32, flags int32, cpu_id int32) (automatic)
memfd_create$auto(uname ptr[in, string], flags int32) (automatic)
memfd_secret$auto(flags int32) (automatic)
migrate_pages$auto(pid pid, maxnode intptr, old_nodes ptr[in, intptr], new_nodes ptr[in, intptr]) (automatic)
mincore$auto(start intptr, len intptr, vec ptr[inout, string]) (automatic)
mkdir$auto(pathname ptr[in, filename], mode int16) (automatic)
mkdirat$auto(dfd fd_dir, pathname ptr[in, filename], mode int16) (automatic)
mknod$auto(filename ptr[in, filename], mode int16, dev int32) (automatic)
mknodat$auto(dfd fd_dir, filename ptr[in, filename], mode int16, dev int32) (automatic)
mlock$auto(start intptr, len intptr) (automatic)
mlock2$auto(start intptr, len intptr, flags int32) (automatic)
mlockall$auto(flags int32) (automatic)
mmap$auto(addr intptr, len intptr, prot intptr, flags intptr, fd intptr, off intptr) (automatic)
mmap2$auto(addr intptr, len intptr, prot intptr, flags intptr, fd intptr, pgoff intptr) (automatic)
modify_ldt$auto(func int32, ptr ptr[inout, array[auto_todo]], bytecount intptr) (automatic)
mount$auto(dev_name ptr[inout, devname], dir_name ptr[inout, filename], type ptr[inout, string], flags intptr, data ptr[inout, array[auto_todo]]) (automatic)
mount_setattr$auto(dfd fd_dir, path ptr[in, filename], flags int32, uattr ptr[inout, mount_attr$auto_record], usize intptr) (automatic)
move_mount$auto(from_dfd fd_dir, from_pathname ptr[in, filename], to_dfd fd_dir, to_pathname ptr[in, filename], flags int32) (automatic)
move_pages$auto(pid pid, nr_pages intptr, pages ptr[inout, ptr[in, array[auto_todo]]], nodes ptr[in, int32], status ptr[inout, int32], flags int32) (automatic)
mprotect$auto(start intptr, len intptr, prot intptr) (automatic)
mq_getsetattr$auto(mqdes int32, u_mqstat ptr[in, mq_attr$auto_record], u_omqstat ptr[inout, mq_attr$auto_record]) (automatic)
mq_notify$auto(mqdes int32, u_notification ptr[in, sigevent$auto_record]) (automatic)
mq_open$auto(u_name ptr[in, string], oflag int32, mode int16, u_attr ptr[inout, mq_attr$auto_record]) (automatic)
mq_timedreceive$auto(mqdes int32, u_msg_ptr ptr[inout, string], msg_len intptr, u_msg_prio ptr[inout, int32], u_abs_timeout ptr[in, __kernel_timespec$auto_record]) (automatic)
mq_timedreceive_time64$auto(mqdes int32, u_msg_ptr ptr[inout, string], msg_len intptr, u_msg_prio ptr[inout, int32], u_abs_timeout ptr[in, __kernel_timespec$auto_record]) (automatic)
mq_timedsend$auto(mqdes int32, u_msg_ptr ptr[in, string], msg_len intptr, msg_prio int32, u_abs_timeout ptr[in, __kernel_timespec$auto_record]) (automatic)
mq_timedsend_time64$auto(mqdes int32, u_msg_ptr ptr[in, string], msg_len intptr, msg_prio int32, u_abs_timeout ptr[in, __kernel_timespec$auto_record]) (automatic)
mq_unlink$auto(u_name ptr[in, string]) (automatic)
mremap$auto(addr intptr, old_len intptr, new_len intptr, flags intptr, new_addr intptr) (automatic)
mseal$auto(start intptr, len intptr, flags intptr) (automatic)
msgctl$auto(msqid int32, cmd int32, buf ptr[inout, msqid_ds$auto_record]) (automatic)
msgget$auto(key int32, msgflg int32) (automatic)
msgrcv$auto(msqid int32, msgp ptr[inout, msgbuf$auto_record], msgsz intptr, msgtyp intptr, msgflg int32) (automatic)
msgsnd$auto(msqid int32, msgp ptr[inout, msgbuf$auto_record], msgsz intptr, msgflg int32) (automatic)
msync$auto(start intptr, len intptr, flags int32) (automatic)
munlock$auto(start intptr, len intptr) (automatic)
munmap$auto(addr intptr, len intptr) (automatic)
name_to_handle_at$auto(dfd fd_dir, name ptr[in, string], handle ptr[inout, file_handle$auto_record], mnt_id ptr[inout, array[auto_todo]], flag int32) (automatic)
nanosleep$auto(rqtp ptr[inout, __kernel_timespec$auto_record], rmtp ptr[inout, __kernel_timespec$auto_record]) (automatic)
newfstatat$auto(dfd fd_dir, filename ptr[in, filename], statbuf ptr[inout, stat$auto_record], flag int32) (automatic)
nice$auto(increment int32) (automatic)
oldfstat$auto(fd fd, statbuf ptr[inout, __old_kernel_stat$auto_record]) (automatic)
oldlstat$auto(filename ptr[in, filename], statbuf ptr[inout, __old_kernel_stat$auto_record]) (automatic)
oldolduname$auto(name ptr[inout, oldold_utsname$auto_record]) (automatic)
oldstat$auto(filename ptr[in, filename], statbuf ptr[inout, __old_kernel_stat$auto_record]) (automatic)
olduname$auto(name ptr[inout, old_utsname$auto_record]) (automatic)
open$auto(filename ptr[in, filename], flags int32, mode int16) (automatic)
open_by_handle_at$auto(mountdirfd fd, handle ptr[inout, file_handle$auto_record], flags int32) (automatic)
open_tree$auto(dfd fd_dir, filename ptr[in, filename], flags int32) (automatic)
openat$auto(dfd fd_dir, filename ptr[in, filename], flags int32, mode int16) (automatic)
openat2$auto(dfd fd_dir, filename ptr[in, filename], how ptr[inout, open_how$auto_record], usize intptr) (automatic)
perf_event_open$auto(attr_uptr ptr[inout, perf_event_attr$auto_record], pid pid, cpu int32, group_fd fd, flags intptr) (automatic)
personality$auto(personality int32) (automatic)
pidfd_getfd$auto(pidfd fd, fd fd, flags int32) (automatic)
pidfd_open$auto(pid pid, flags int32) (automatic)
pidfd_send_signal$auto(pidfd fd, sig int32, info ptr[inout, siginfo$auto_record], flags int32) (automatic)
pipe$auto(fildes ptr[inout, fd]) (automatic)
pipe2$auto(fildes ptr[inout, fd], flags int32) (automatic)
pivot_root$auto(new_root ptr[in, string], put_old ptr[in, string]) (automatic)
pkey_alloc$auto(flags intptr, init_val intptr) (automatic)
pkey_free$auto(pkey int32) (automatic)
pkey_mprotect$auto(start intptr, len intptr, prot intptr, pkey int32) (automatic)
poll$auto(ufds ptr[inout, pollfd$auto_record], nfds int32, timeout_msecs int32) (automatic)
ppoll$auto(ufds ptr[inout, pollfd$auto_record], nfds int32, tsp ptr[inout, __kernel_timespec$auto_record], sigmask ptr[in, sigset_t$auto_record], sigsetsize const[8]) (automatic)
ppoll_time64$auto(ufds ptr[inout, pollfd$auto_record], nfds int32, tsp ptr[inout, __kernel_timespec$auto_record], sigmask ptr[in, sigset_t$auto_record], sigsetsize const[8]) (automatic)
prctl$auto(option int32, arg2 intptr, arg3 intptr, arg4 intptr, arg5 intptr) (automatic)
pread64$auto(fd fd, buf ptr[inout, string], count intptr, pos intptr) (automatic)
preadv$auto(fd intptr, vec ptr[in, iovec$auto_record], vlen intptr, pos_l intptr, pos_h intptr) (automatic)
preadv2$auto(fd intptr, vec ptr[in, iovec$auto_record], vlen intptr, pos_l intptr, pos_h intptr, flags int32) (automatic)
prlimit64$auto(pid pid, _resource int32, new_rlim ptr[in, rlimit64$auto_record], old_rlim ptr[inout, rlimit64$auto_record]) (automatic)
process_madvise$auto(pidfd fd, vec ptr[in, iovec$auto_record], vlen intptr, behavior int32, flags int32) (automatic)
process_mrelease$auto(pidfd fd, flags int32) (automatic)
process_vm_readv$auto(pid pid, lvec ptr[in, iovec$auto_record], liovcnt intptr, rvec ptr[in, iovec$auto_record], riovcnt intptr, flags intptr) (automatic)
process_vm_writev$auto(pid pid, lvec ptr[in, iovec$auto_record], liovcnt intptr, rvec ptr[in, iovec$auto_record], riovcnt intptr, flags intptr) (automatic)
pselect6$auto(n int32, inp ptr[inout, __kernel_fd_set$auto_record], outp ptr[inout, __kernel_fd_set$auto_record], exp ptr[inout, __kernel_fd_set$auto_record], tsp ptr[inout, __kernel_timespec$auto_record], sig ptr[inout, array[auto_todo]]) (automatic)
pselect6_time64$auto(n int32, inp ptr[inout, __kernel_fd_set$auto_record], outp ptr[inout, __kernel_fd_set$auto_record], exp ptr[inout, __kernel_fd_set$auto_record], tsp ptr[inout, __kernel_timespec$auto_record], sig ptr[inout, array[auto_todo]]) (automatic)
ptrace$auto(request intptr, pid intptr, addr intptr, data intptr) (automatic)
pwrite64$auto(fd fd, buf ptr[in, string], count intptr, pos intptr) (automatic)
pwritev$auto(fd intptr, vec ptr[in, iovec$auto_record], vlen intptr, pos_l intptr, pos_h intptr) (automatic)
pwritev2$auto(fd intptr, vec ptr[in, iovec$auto_record], vlen intptr, pos_l intptr, pos_h intptr, flags int32) (automatic)
quotactl$auto(cmd int32, special ptr[in, string], id int32, addr ptr[inout, array[auto_todo]]) (automatic)
quotactl_fd$auto(fd fd, cmd int32, id int32, addr ptr[inout, array[auto_todo]]) (automatic)
read$auto(fd fd, buf ptr[inout, string], count intptr) (automatic)
readahead$auto(fd fd, offset intptr, count intptr) (automatic)
readdir$auto(fd fd, dirent ptr[inout, old_linux_dirent$auto_record], count int32) (automatic)
readlink$auto(path ptr[in, filename], buf ptr[inout, string], bufsiz int32) (automatic)
readlinkat$auto(dfd fd_dir, pathname ptr[in, filename], buf ptr[inout, string], bufsiz int32) (automatic)
readv$auto(fd intptr, vec ptr[in, iovec$auto_record], vlen intptr) (automatic)
recv$auto(fd fd, ubuf ptr[inout, array[auto_todo]], size intptr, flags int32) (automatic)
recvfrom$auto(fd fd, ubuf ptr[inout, array[auto_todo]], size intptr, flags int32, addr ptr[inout, sockaddr$auto_record], addr_len ptr[inout, int32]) (automatic)
recvmmsg$auto(fd fd, mmsg ptr[inout, mmsghdr$auto_record], vlen int32, flags int32, timeout ptr[inout, __kernel_timespec$auto_record]) (automatic)
recvmmsg_time64$auto(fd fd, mmsg ptr[inout, mmsghdr$auto_record], vlen int32, flags int32, timeout ptr[inout, __kernel_timespec$auto_record]) (automatic)
recvmsg$auto(fd fd, msg ptr[inout, user_msghdr$auto_record], flags int32) (automatic)
remap_file_pages$auto(start intptr, size intptr, prot intptr, pgoff intptr, flags intptr) (automatic)
removexattr$auto(pathname ptr[in, filename], name ptr[in, string]) (automatic)
removexattrat$auto(dfd fd_dir, pathname ptr[in, filename], at_flags int32, name ptr[in, string]) (automatic)
rename$auto(oldname ptr[in, filename], newname ptr[in, filename]) (automatic)
renameat$auto(olddfd fd_dir, oldname ptr[in, filename], newdfd fd_dir, newname ptr[in, filename]) (automatic)
renameat2$auto(olddfd fd_dir, oldname ptr[in, filename], newdfd fd_dir, newname ptr[in, filename], flags int32) (automatic)
request_key$auto(_type ptr[in, string], _description ptr[in, string], _callout_info ptr[in, string], destringid int32) (automatic)
rmdir$auto(pathname ptr[in, filename]) (automatic)
rseq$auto(rseq ptr[inout, rseq$auto_record], rseq_len int32, flags int32, sig int32) (automatic)
rt_sigaction$auto(sig int32, act ptr[in, sigaction$auto_record], oact ptr[inout, sigaction$auto_record], sigsetsize const[8]) (automatic)
rt_sigpending$auto(uset ptr[inout, sigset_t$auto_record], sigsetsize const[8]) (automatic)
rt_sigprocmask$auto(how int32, nset ptr[inout, sigset_t$auto_record], oset ptr[inout, sigset_t$auto_record], sigsetsize const[8]) (automatic)
rt_sigqueueinfo$auto(pid pid, sig int32, uinfo ptr[inout, siginfo$auto_record]) (automatic)
rt_sigsuspend$auto(unewset ptr[inout, sigset_t$auto_record], sigsetsize const[8]) (automatic)
rt_sigtimedwait$auto(uthese ptr[in, sigset_t$auto_record], uinfo ptr[inout, siginfo$auto_record], uts ptr[in, __kernel_timespec$auto_record], sigsetsize const[8]) (automatic)
rt_sigtimedwait_time64$auto(uthese ptr[in, sigset_t$auto_record], uinfo ptr[inout, siginfo$auto_record], uts ptr[in, __kernel_timespec$auto_record], sigsetsize const[8]) (automatic)
rt_tgsigqueueinfo$auto(tgid pid, pid pid, sig int32, uinfo ptr[inout, siginfo$auto_record]) (automatic)
sched_get_priority_max$auto(policy int32) (automatic)
sched_get_priority_min$auto(policy int32) (automatic)
sched_getaffinity$auto(pid pid, len int32, user_mask_ptr ptr[inout, intptr]) (automatic)
sched_getattr$auto(pid pid, uattr ptr[inout, sched_attr$auto_record], usize int32, flags int32) (automatic)
sched_getparam$auto(pid pid, param ptr[inout, sched_param$auto_record]) (automatic)
sched_getscheduler$auto(pid pid) (automatic)
sched_rr_get_interval$auto(pid pid, interval ptr[inout, __kernel_timespec$auto_record]) (automatic)
sched_rr_get_interval_time64$auto(pid pid, interval ptr[inout, __kernel_timespec$auto_record]) (automatic)
sched_setaffinity$auto(pid pid, len int32, user_mask_ptr ptr[inout, intptr]) (automatic)
sched_setattr$auto(pid pid, uattr ptr[inout, sched_attr$auto_record], flags int32) (automatic)
sched_setparam$auto(pid pid, param ptr[inout, sched_param$auto_record]) (automatic)
sched_setscheduler$auto(pid pid, policy int32, param ptr[inout, sched_param$auto_record]) (automatic)
seccomp$auto(op int32, flags int32, uargs ptr[inout, array[auto_todo]]) (automatic)
select$auto(n int32, inp ptr[inout, __kernel_fd_set$auto_record], outp ptr[inout, __kernel_fd_set$auto_record], exp ptr[inout, __kernel_fd_set$auto_record], tvp ptr[inout, __kernel_old_timeval$auto_record]) (automatic)
semctl$auto(semid int32, semnum int32, cmd int32, arg intptr) (automatic)
semget$auto(key int32, nsems int32, semflg int32) (automatic)
semop$auto(semid int32, tsops ptr[inout, sembuf$auto_record], nsops int32) (automatic)
semtimedop$auto(semid int32, tsops ptr[inout, sembuf$auto_record], nsops int32, timeout ptr[in, __kernel_timespec$auto_record]) (automatic)
semtimedop_time64$auto(semid int32, tsops ptr[inout, sembuf$auto_record], nsops int32, timeout ptr[in, __kernel_timespec$auto_record]) (automatic)
send$auto(fd fd, buff ptr[inout, array[auto_todo]], len intptr, flags int32) (automatic)
sendfile$auto(out_fd fd, in_fd fd, offset ptr[inout, int64], count intptr) (automatic)
sendfile64$auto(out_fd fd, in_fd fd, offset ptr[inout, int64], count intptr) (automatic)
sendmmsg$auto(fd fd, mmsg ptr[inout, mmsghdr$auto_record], vlen int32, flags int32) (automatic)
sendmsg$auto(fd fd, msg ptr[inout, user_msghdr$auto_record], flags int32) (automatic)
sendmsg$auto_BATADV_CMD_GET_BLA_BACKBONE(fd sock_nl_generic, msg ptr[in, msghdr_batadv_auto[BATADV_CMD_GET_BLA_BACKBONE, batadv_netlink_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_BATADV_CMD_GET_BLA_CLAIM(fd sock_nl_generic, msg ptr[in, msghdr_batadv_auto[BATADV_CMD_GET_BLA_CLAIM, batadv_netlink_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_BATADV_CMD_GET_DAT_CACHE(fd sock_nl_generic, msg ptr[in, msghdr_batadv_auto[BATADV_CMD_GET_DAT_CACHE, batadv_netlink_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_BATADV_CMD_GET_GATEWAYS(fd sock_nl_generic, msg ptr[in, msghdr_batadv_auto[BATADV_CMD_GET_GATEWAYS, batadv_netlink_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_BATADV_CMD_GET_HARDIF(fd sock_nl_generic, msg ptr[in, msghdr_batadv_auto[BATADV_CMD_GET_HARDIF, batadv_netlink_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_BATADV_CMD_GET_MCAST_FLAGS(fd sock_nl_generic, msg ptr[in, msghdr_batadv_auto[BATADV_CMD_GET_MCAST_FLAGS, batadv_netlink_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_BATADV_CMD_GET_MESH(fd sock_nl_generic, msg ptr[in, msghdr_batadv_auto[BATADV_CMD_GET_MESH, batadv_netlink_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_BATADV_CMD_GET_NEIGHBORS(fd sock_nl_generic, msg ptr[in, msghdr_batadv_auto[BATADV_CMD_GET_NEIGHBORS, batadv_netlink_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_BATADV_CMD_GET_ORIGINATORS(fd sock_nl_generic, msg ptr[in, msghdr_batadv_auto[BATADV_CMD_GET_ORIGINATORS, batadv_netlink_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_BATADV_CMD_GET_ROUTING_ALGOS(fd sock_nl_generic, msg ptr[in, msghdr_batadv_auto[BATADV_CMD_GET_ROUTING_ALGOS, batadv_netlink_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_BATADV_CMD_GET_TRANSTABLE_GLOBAL(fd sock_nl_generic, msg ptr[in, msghdr_batadv_auto[BATADV_CMD_GET_TRANSTABLE_GLOBAL, batadv_netlink_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_BATADV_CMD_GET_TRANSTABLE_LOCAL(fd sock_nl_generic, msg ptr[in, msghdr_batadv_auto[BATADV_CMD_GET_TRANSTABLE_LOCAL, batadv_netlink_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_BATADV_CMD_GET_VLAN(fd sock_nl_generic, msg ptr[in, msghdr_batadv_auto[BATADV_CMD_GET_VLAN, batadv_netlink_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_BATADV_CMD_SET_HARDIF(fd sock_nl_generic, msg ptr[in, msghdr_batadv_auto[BATADV_CMD_SET_HARDIF, batadv_netlink_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_BATADV_CMD_SET_MESH(fd sock_nl_generic, msg ptr[in, msghdr_batadv_auto[BATADV_CMD_SET_MESH, batadv_netlink_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_BATADV_CMD_SET_VLAN(fd sock_nl_generic, msg ptr[in, msghdr_batadv_auto[BATADV_CMD_SET_VLAN, batadv_netlink_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_BATADV_CMD_TP_METER(fd sock_nl_generic, msg ptr[in, msghdr_batadv_auto[BATADV_CMD_TP_METER, batadv_netlink_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_BATADV_CMD_TP_METER_CANCEL(fd sock_nl_generic, msg ptr[in, msghdr_batadv_auto[BATADV_CMD_TP_METER_CANCEL, batadv_netlink_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_CGROUPSTATS_CMD_GET(fd sock_nl_generic, msg ptr[in, msghdr_TASKSTATS_auto[CGROUPSTATS_CMD_GET, cgroupstats_cmd_get_policy$auto_taskstats]], f flags[send_flags]) (automatic)
sendmsg$auto_CIFS_GENL_CMD_SWN_NOTIFY(fd sock_nl_generic, msg ptr[in, msghdr_cifs_auto[CIFS_GENL_CMD_SWN_NOTIFY, cifs_genl_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_CTRL_CMD_GETFAMILY(fd sock_nl_generic, msg ptr[in, msghdr_nlctrl_auto[CTRL_CMD_GETFAMILY, ctrl_policy_family$auto_genetlink]], f flags[send_flags]) (automatic)
sendmsg$auto_CTRL_CMD_GETPOLICY(fd sock_nl_generic, msg ptr[in, msghdr_nlctrl_auto[CTRL_CMD_GETPOLICY, ctrl_policy_policy$auto_genetlink]], f flags[send_flags]) (automatic)
sendmsg$auto_ETHTOOL_MSG_CABLE_TEST_ACT(fd sock_nl_generic, msg ptr[in, msghdr_ethtool_auto[ETHTOOL_MSG_CABLE_TEST_ACT, ethnl_cable_test_act_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_ETHTOOL_MSG_CABLE_TEST_TDR_ACT(fd sock_nl_generic, msg ptr[in, msghdr_ethtool_auto[ETHTOOL_MSG_CABLE_TEST_TDR_ACT, ethnl_cable_test_tdr_act_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_ETHTOOL_MSG_CHANNELS_GET(fd sock_nl_generic, msg ptr[in, msghdr_ethtool_auto[ETHTOOL_MSG_CHANNELS_GET, ethnl_channels_get_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_ETHTOOL_MSG_CHANNELS_SET(fd sock_nl_generic, msg ptr[in, msghdr_ethtool_auto[ETHTOOL_MSG_CHANNELS_SET, ethnl_channels_set_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_ETHTOOL_MSG_COALESCE_GET(fd sock_nl_generic, msg ptr[in, msghdr_ethtool_auto[ETHTOOL_MSG_COALESCE_GET, ethnl_coalesce_get_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_ETHTOOL_MSG_COALESCE_SET(fd sock_nl_generic, msg ptr[in, msghdr_ethtool_auto[ETHTOOL_MSG_COALESCE_SET, ethnl_coalesce_set_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_ETHTOOL_MSG_DEBUG_GET(fd sock_nl_generic, msg ptr[in, msghdr_ethtool_auto[ETHTOOL_MSG_DEBUG_GET, ethnl_debug_get_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_ETHTOOL_MSG_DEBUG_SET(fd sock_nl_generic, msg ptr[in, msghdr_ethtool_auto[ETHTOOL_MSG_DEBUG_SET, ethnl_debug_set_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_ETHTOOL_MSG_EEE_GET(fd sock_nl_generic, msg ptr[in, msghdr_ethtool_auto[ETHTOOL_MSG_EEE_GET, ethnl_eee_get_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_ETHTOOL_MSG_EEE_SET(fd sock_nl_generic, msg ptr[in, msghdr_ethtool_auto[ETHTOOL_MSG_EEE_SET, ethnl_eee_set_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_ETHTOOL_MSG_FEATURES_GET(fd sock_nl_generic, msg ptr[in, msghdr_ethtool_auto[ETHTOOL_MSG_FEATURES_GET, ethnl_features_get_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_ETHTOOL_MSG_FEATURES_SET(fd sock_nl_generic, msg ptr[in, msghdr_ethtool_auto[ETHTOOL_MSG_FEATURES_SET, ethnl_features_set_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_ETHTOOL_MSG_FEC_GET(fd sock_nl_generic, msg ptr[in, msghdr_ethtool_auto[ETHTOOL_MSG_FEC_GET, ethnl_fec_get_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_ETHTOOL_MSG_FEC_SET(fd sock_nl_generic, msg ptr[in, msghdr_ethtool_auto[ETHTOOL_MSG_FEC_SET, ethnl_fec_set_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_ETHTOOL_MSG_LINKINFO_GET(fd sock_nl_generic, msg ptr[in, msghdr_ethtool_auto[ETHTOOL_MSG_LINKINFO_GET, ethnl_linkinfo_get_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_ETHTOOL_MSG_LINKINFO_SET(fd sock_nl_generic, msg ptr[in, msghdr_ethtool_auto[ETHTOOL_MSG_LINKINFO_SET, ethnl_linkinfo_set_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_ETHTOOL_MSG_LINKMODES_GET(fd sock_nl_generic, msg ptr[in, msghdr_ethtool_auto[ETHTOOL_MSG_LINKMODES_GET, ethnl_linkmodes_get_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_ETHTOOL_MSG_LINKMODES_SET(fd sock_nl_generic, msg ptr[in, msghdr_ethtool_auto[ETHTOOL_MSG_LINKMODES_SET, ethnl_linkmodes_set_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_ETHTOOL_MSG_LINKSTATE_GET(fd sock_nl_generic, msg ptr[in, msghdr_ethtool_auto[ETHTOOL_MSG_LINKSTATE_GET, ethnl_linkstate_get_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_ETHTOOL_MSG_MM_GET(fd sock_nl_generic, msg ptr[in, msghdr_ethtool_auto[ETHTOOL_MSG_MM_GET, ethnl_mm_get_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_ETHTOOL_MSG_MM_SET(fd sock_nl_generic, msg ptr[in, msghdr_ethtool_auto[ETHTOOL_MSG_MM_SET, ethnl_mm_set_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_ETHTOOL_MSG_MODULE_EEPROM_GET(fd sock_nl_generic, msg ptr[in, msghdr_ethtool_auto[ETHTOOL_MSG_MODULE_EEPROM_GET, ethnl_module_eeprom_get_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_ETHTOOL_MSG_MODULE_FW_FLASH_ACT(fd sock_nl_generic, msg ptr[in, msghdr_ethtool_auto[ETHTOOL_MSG_MODULE_FW_FLASH_ACT, ethnl_module_fw_flash_act_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_ETHTOOL_MSG_MODULE_GET(fd sock_nl_generic, msg ptr[in, msghdr_ethtool_auto[ETHTOOL_MSG_MODULE_GET, ethnl_module_get_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_ETHTOOL_MSG_MODULE_SET(fd sock_nl_generic, msg ptr[in, msghdr_ethtool_auto[ETHTOOL_MSG_MODULE_SET, ethnl_module_set_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_ETHTOOL_MSG_PAUSE_GET(fd sock_nl_generic, msg ptr[in, msghdr_ethtool_auto[ETHTOOL_MSG_PAUSE_GET, ethnl_pause_get_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_ETHTOOL_MSG_PAUSE_SET(fd sock_nl_generic, msg ptr[in, msghdr_ethtool_auto[ETHTOOL_MSG_PAUSE_SET, ethnl_pause_set_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_ETHTOOL_MSG_PHC_VCLOCKS_GET(fd sock_nl_generic, msg ptr[in, msghdr_ethtool_auto[ETHTOOL_MSG_PHC_VCLOCKS_GET, ethnl_phc_vclocks_get_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_ETHTOOL_MSG_PHY_GET(fd sock_nl_generic, msg ptr[in, msghdr_ethtool_auto[ETHTOOL_MSG_PHY_GET, ethnl_phy_get_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_ETHTOOL_MSG_PLCA_GET_CFG(fd sock_nl_generic, msg ptr[in, msghdr_ethtool_auto[ETHTOOL_MSG_PLCA_GET_CFG, ethnl_plca_get_cfg_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_ETHTOOL_MSG_PLCA_GET_STATUS(fd sock_nl_generic, msg ptr[in, msghdr_ethtool_auto[ETHTOOL_MSG_PLCA_GET_STATUS, ethnl_plca_get_status_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_ETHTOOL_MSG_PLCA_SET_CFG(fd sock_nl_generic, msg ptr[in, msghdr_ethtool_auto[ETHTOOL_MSG_PLCA_SET_CFG, ethnl_plca_set_cfg_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_ETHTOOL_MSG_PRIVFLAGS_GET(fd sock_nl_generic, msg ptr[in, msghdr_ethtool_auto[ETHTOOL_MSG_PRIVFLAGS_GET, ethnl_privflags_get_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_ETHTOOL_MSG_PRIVFLAGS_SET(fd sock_nl_generic, msg ptr[in, msghdr_ethtool_auto[ETHTOOL_MSG_PRIVFLAGS_SET, ethnl_privflags_set_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_ETHTOOL_MSG_PSE_GET(fd sock_nl_generic, msg ptr[in, msghdr_ethtool_auto[ETHTOOL_MSG_PSE_GET, ethnl_pse_get_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_ETHTOOL_MSG_PSE_SET(fd sock_nl_generic, msg ptr[in, msghdr_ethtool_auto[ETHTOOL_MSG_PSE_SET, ethnl_pse_set_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_ETHTOOL_MSG_RINGS_GET(fd sock_nl_generic, msg ptr[in, msghdr_ethtool_auto[ETHTOOL_MSG_RINGS_GET, ethnl_rings_get_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_ETHTOOL_MSG_RINGS_SET(fd sock_nl_generic, msg ptr[in, msghdr_ethtool_auto[ETHTOOL_MSG_RINGS_SET, ethnl_rings_set_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_ETHTOOL_MSG_RSS_GET(fd sock_nl_generic, msg ptr[in, msghdr_ethtool_auto[ETHTOOL_MSG_RSS_GET, ethnl_rss_get_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_ETHTOOL_MSG_STATS_GET(fd sock_nl_generic, msg ptr[in, msghdr_ethtool_auto[ETHTOOL_MSG_STATS_GET, ethnl_stats_get_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_ETHTOOL_MSG_STRSET_GET(fd sock_nl_generic, msg ptr[in, msghdr_ethtool_auto[ETHTOOL_MSG_STRSET_GET, ethnl_strset_get_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_ETHTOOL_MSG_TSINFO_GET(fd sock_nl_generic, msg ptr[in, msghdr_ethtool_auto[ETHTOOL_MSG_TSINFO_GET, ethnl_tsinfo_get_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_ETHTOOL_MSG_TUNNEL_INFO_GET(fd sock_nl_generic, msg ptr[in, msghdr_ethtool_auto[ETHTOOL_MSG_TUNNEL_INFO_GET, ethnl_tunnel_info_get_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_ETHTOOL_MSG_WOL_GET(fd sock_nl_generic, msg ptr[in, msghdr_ethtool_auto[ETHTOOL_MSG_WOL_GET, ethnl_wol_get_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_ETHTOOL_MSG_WOL_SET(fd sock_nl_generic, msg ptr[in, msghdr_ethtool_auto[ETHTOOL_MSG_WOL_SET, ethnl_wol_set_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_GTP_CMD_DELPDP(fd sock_nl_generic, msg ptr[in, msghdr_gtp_auto[GTP_CMD_DELPDP, gtp_genl_policy$auto_gtp]], f flags[send_flags]) (automatic)
sendmsg$auto_GTP_CMD_ECHOREQ(fd sock_nl_generic, msg ptr[in, msghdr_gtp_auto[GTP_CMD_ECHOREQ, gtp_genl_policy$auto_gtp]], f flags[send_flags]) (automatic)
sendmsg$auto_GTP_CMD_GETPDP(fd sock_nl_generic, msg ptr[in, msghdr_gtp_auto[GTP_CMD_GETPDP, gtp_genl_policy$auto_gtp]], f flags[send_flags]) (automatic)
sendmsg$auto_GTP_CMD_NEWPDP(fd sock_nl_generic, msg ptr[in, msghdr_gtp_auto[GTP_CMD_NEWPDP, gtp_genl_policy$auto_gtp]], f flags[send_flags]) (automatic)
sendmsg$auto_HANDSHAKE_CMD_ACCEPT(fd sock_nl_generic, msg ptr[in, msghdr_handshake_auto[HANDSHAKE_CMD_ACCEPT, handshake_accept_nl_policy$auto_genl]], f flags[send_flags]) (automatic)
sendmsg$auto_HANDSHAKE_CMD_DONE(fd sock_nl_generic, msg ptr[in, msghdr_handshake_auto[HANDSHAKE_CMD_DONE, handshake_done_nl_policy$auto_genl]], f flags[send_flags]) (automatic)
sendmsg$auto_HSR_C_GET_NODE_LIST(fd sock_nl_generic, msg ptr[in, msghdr_HSR_auto[HSR_C_GET_NODE_LIST, hsr_genl_policy$auto_hsr_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_HSR_C_GET_NODE_STATUS(fd sock_nl_generic, msg ptr[in, msghdr_HSR_auto[HSR_C_GET_NODE_STATUS, hsr_genl_policy$auto_hsr_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_HWSIM_CMD_DEL_RADIO(fd sock_nl_generic, msg ptr[in, msghdr_MAC80211_HWSIM_auto[HWSIM_CMD_DEL_RADIO, hwsim_genl_policy$auto_mac80211_hwsim]], f flags[send_flags]) (automatic)
sendmsg$auto_HWSIM_CMD_FRAME(fd sock_nl_generic, msg ptr[in, msghdr_MAC80211_HWSIM_auto[HWSIM_CMD_FRAME, hwsim_genl_policy$auto_mac80211_hwsim]], f flags[send_flags]) (automatic)
sendmsg$auto_HWSIM_CMD_GET_RADIO(fd sock_nl_generic, msg ptr[in, msghdr_MAC80211_HWSIM_auto[HWSIM_CMD_GET_RADIO, hwsim_genl_policy$auto_mac80211_hwsim]], f flags[send_flags]) (automatic)
sendmsg$auto_HWSIM_CMD_NEW_RADIO(fd sock_nl_generic, msg ptr[in, msghdr_MAC80211_HWSIM_auto[HWSIM_CMD_NEW_RADIO, hwsim_genl_policy$auto_mac80211_hwsim]], f flags[send_flags]) (automatic)
sendmsg$auto_HWSIM_CMD_REGISTER(fd sock_nl_generic, msg ptr[in, msghdr_MAC80211_HWSIM_auto[HWSIM_CMD_REGISTER, hwsim_genl_policy$auto_mac80211_hwsim]], f flags[send_flags]) (automatic)
sendmsg$auto_HWSIM_CMD_REPORT_PMSR(fd sock_nl_generic, msg ptr[in, msghdr_MAC80211_HWSIM_auto[HWSIM_CMD_REPORT_PMSR, hwsim_genl_policy$auto_mac80211_hwsim]], f flags[send_flags]) (automatic)
sendmsg$auto_HWSIM_CMD_TX_INFO_FRAME(fd sock_nl_generic, msg ptr[in, msghdr_MAC80211_HWSIM_auto[HWSIM_CMD_TX_INFO_FRAME, hwsim_genl_policy$auto_mac80211_hwsim]], f flags[send_flags]) (automatic)
sendmsg$auto_IEEE802154_ADD_IFACE(fd sock_nl_generic, msg ptr[in, msghdr_802_15_4_MAC_auto[IEEE802154_ADD_IFACE, ieee802154_policy$auto_nl802154]], f flags[send_flags]) (automatic)
sendmsg$auto_IEEE802154_ASSOCIATE_REQ(fd sock_nl_generic, msg ptr[in, msghdr_802_15_4_MAC_auto[IEEE802154_ASSOCIATE_REQ, ieee802154_policy$auto_nl802154]], f flags[send_flags]) (automatic)
sendmsg$auto_IEEE802154_ASSOCIATE_RESP(fd sock_nl_generic, msg ptr[in, msghdr_802_15_4_MAC_auto[IEEE802154_ASSOCIATE_RESP, ieee802154_policy$auto_nl802154]], f flags[send_flags]) (automatic)
sendmsg$auto_IEEE802154_DEL_IFACE(fd sock_nl_generic, msg ptr[in, msghdr_802_15_4_MAC_auto[IEEE802154_DEL_IFACE, ieee802154_policy$auto_nl802154]], f flags[send_flags]) (automatic)
sendmsg$auto_IEEE802154_DISASSOCIATE_REQ(fd sock_nl_generic, msg ptr[in, msghdr_802_15_4_MAC_auto[IEEE802154_DISASSOCIATE_REQ, ieee802154_policy$auto_nl802154]], f flags[send_flags]) (automatic)
sendmsg$auto_IEEE802154_LIST_IFACE(fd sock_nl_generic, msg ptr[in, msghdr_802_15_4_MAC_auto[IEEE802154_LIST_IFACE, ieee802154_policy$auto_nl802154]], f flags[send_flags]) (automatic)
sendmsg$auto_IEEE802154_LIST_PHY(fd sock_nl_generic, msg ptr[in, msghdr_802_15_4_MAC_auto[IEEE802154_LIST_PHY, ieee802154_policy$auto_nl802154]], f flags[send_flags]) (automatic)
sendmsg$auto_IEEE802154_LLSEC_ADD_DEV(fd sock_nl_generic, msg ptr[in, msghdr_802_15_4_MAC_auto[IEEE802154_LLSEC_ADD_DEV, ieee802154_policy$auto_nl802154]], f flags[send_flags]) (automatic)
sendmsg$auto_IEEE802154_LLSEC_ADD_DEVKEY(fd sock_nl_generic, msg ptr[in, msghdr_802_15_4_MAC_auto[IEEE802154_LLSEC_ADD_DEVKEY, ieee802154_policy$auto_nl802154]], f flags[send_flags]) (automatic)
sendmsg$auto_IEEE802154_LLSEC_ADD_KEY(fd sock_nl_generic, msg ptr[in, msghdr_802_15_4_MAC_auto[IEEE802154_LLSEC_ADD_KEY, ieee802154_policy$auto_nl802154]], f flags[send_flags]) (automatic)
sendmsg$auto_IEEE802154_LLSEC_ADD_SECLEVEL(fd sock_nl_generic, msg ptr[in, msghdr_802_15_4_MAC_auto[IEEE802154_LLSEC_ADD_SECLEVEL, ieee802154_policy$auto_nl802154]], f flags[send_flags]) (automatic)
sendmsg$auto_IEEE802154_LLSEC_DEL_DEV(fd sock_nl_generic, msg ptr[in, msghdr_802_15_4_MAC_auto[IEEE802154_LLSEC_DEL_DEV, ieee802154_policy$auto_nl802154]], f flags[send_flags]) (automatic)
sendmsg$auto_IEEE802154_LLSEC_DEL_DEVKEY(fd sock_nl_generic, msg ptr[in, msghdr_802_15_4_MAC_auto[IEEE802154_LLSEC_DEL_DEVKEY, ieee802154_policy$auto_nl802154]], f flags[send_flags]) (automatic)
sendmsg$auto_IEEE802154_LLSEC_DEL_KEY(fd sock_nl_generic, msg ptr[in, msghdr_802_15_4_MAC_auto[IEEE802154_LLSEC_DEL_KEY, ieee802154_policy$auto_nl802154]], f flags[send_flags]) (automatic)
sendmsg$auto_IEEE802154_LLSEC_DEL_SECLEVEL(fd sock_nl_generic, msg ptr[in, msghdr_802_15_4_MAC_auto[IEEE802154_LLSEC_DEL_SECLEVEL, ieee802154_policy$auto_nl802154]], f flags[send_flags]) (automatic)
sendmsg$auto_IEEE802154_LLSEC_GETPARAMS(fd sock_nl_generic, msg ptr[in, msghdr_802_15_4_MAC_auto[IEEE802154_LLSEC_GETPARAMS, ieee802154_policy$auto_nl802154]], f flags[send_flags]) (automatic)
sendmsg$auto_IEEE802154_LLSEC_LIST_DEV(fd sock_nl_generic, msg ptr[in, msghdr_802_15_4_MAC_auto[IEEE802154_LLSEC_LIST_DEV, ieee802154_policy$auto_nl802154]], f flags[send_flags]) (automatic)
sendmsg$auto_IEEE802154_LLSEC_LIST_DEVKEY(fd sock_nl_generic, msg ptr[in, msghdr_802_15_4_MAC_auto[IEEE802154_LLSEC_LIST_DEVKEY, ieee802154_policy$auto_nl802154]], f flags[send_flags]) (automatic)
sendmsg$auto_IEEE802154_LLSEC_LIST_KEY(fd sock_nl_generic, msg ptr[in, msghdr_802_15_4_MAC_auto[IEEE802154_LLSEC_LIST_KEY, ieee802154_policy$auto_nl802154]], f flags[send_flags]) (automatic)
sendmsg$auto_IEEE802154_LLSEC_LIST_SECLEVEL(fd sock_nl_generic, msg ptr[in, msghdr_802_15_4_MAC_auto[IEEE802154_LLSEC_LIST_SECLEVEL, ieee802154_policy$auto_nl802154]], f flags[send_flags]) (automatic)
sendmsg$auto_IEEE802154_LLSEC_SETPARAMS(fd sock_nl_generic, msg ptr[in, msghdr_802_15_4_MAC_auto[IEEE802154_LLSEC_SETPARAMS, ieee802154_policy$auto_nl802154]], f flags[send_flags]) (automatic)
sendmsg$auto_IEEE802154_SCAN_REQ(fd sock_nl_generic, msg ptr[in, msghdr_802_15_4_MAC_auto[IEEE802154_SCAN_REQ, ieee802154_policy$auto_nl802154]], f flags[send_flags]) (automatic)
sendmsg$auto_IEEE802154_SET_MACPARAMS(fd sock_nl_generic, msg ptr[in, msghdr_802_15_4_MAC_auto[IEEE802154_SET_MACPARAMS, ieee802154_policy$auto_nl802154]], f flags[send_flags]) (automatic)
sendmsg$auto_IEEE802154_START_REQ(fd sock_nl_generic, msg ptr[in, msghdr_802_15_4_MAC_auto[IEEE802154_START_REQ, ieee802154_policy$auto_nl802154]], f flags[send_flags]) (automatic)
sendmsg$auto_ILA_CMD_ADD(fd sock_nl_generic, msg ptr[in, msghdr_ila_auto[ILA_CMD_ADD, ila_nl_policy$auto_ila_main]], f flags[send_flags]) (automatic)
sendmsg$auto_ILA_CMD_DEL(fd sock_nl_generic, msg ptr[in, msghdr_ila_auto[ILA_CMD_DEL, ila_nl_policy$auto_ila_main]], f flags[send_flags]) (automatic)
sendmsg$auto_ILA_CMD_FLUSH(fd sock_nl_generic, msg ptr[in, msghdr_ila_auto[ILA_CMD_FLUSH, ila_nl_policy$auto_ila_main]], f flags[send_flags]) (automatic)
sendmsg$auto_ILA_CMD_GET(fd sock_nl_generic, msg ptr[in, msghdr_ila_auto[ILA_CMD_GET, ila_nl_policy$auto_ila_main]], f flags[send_flags]) (automatic)
sendmsg$auto_IOAM6_CMD_ADD_NAMESPACE(fd sock_nl_generic, msg ptr[in, msghdr_IOAM6_auto[IOAM6_CMD_ADD_NAMESPACE, ioam6_genl_policy_addns$auto_ioam6]], f flags[send_flags]) (automatic)
sendmsg$auto_IOAM6_CMD_ADD_SCHEMA(fd sock_nl_generic, msg ptr[in, msghdr_IOAM6_auto[IOAM6_CMD_ADD_SCHEMA, ioam6_genl_policy_addsc$auto_ioam6]], f flags[send_flags]) (automatic)
sendmsg$auto_IOAM6_CMD_DEL_NAMESPACE(fd sock_nl_generic, msg ptr[in, msghdr_IOAM6_auto[IOAM6_CMD_DEL_NAMESPACE, ioam6_genl_policy_delns$auto_ioam6]], f flags[send_flags]) (automatic)
sendmsg$auto_IOAM6_CMD_DEL_SCHEMA(fd sock_nl_generic, msg ptr[in, msghdr_IOAM6_auto[IOAM6_CMD_DEL_SCHEMA, ioam6_genl_policy_delsc$auto_ioam6]], f flags[send_flags]) (automatic)
sendmsg$auto_IOAM6_CMD_NS_SET_SCHEMA(fd sock_nl_generic, msg ptr[in, msghdr_IOAM6_auto[IOAM6_CMD_NS_SET_SCHEMA, ioam6_genl_policy_ns_sc$auto_ioam6]], f flags[send_flags]) (automatic)
sendmsg$auto_IPVS_CMD_DEL_DAEMON(fd sock_nl_generic, msg ptr[in, msghdr_IPVS_auto[IPVS_CMD_DEL_DAEMON, ip_vs_cmd_policy$auto_ip_vs_ctl]], f flags[send_flags]) (automatic)
sendmsg$auto_IPVS_CMD_DEL_DEST(fd sock_nl_generic, msg ptr[in, msghdr_IPVS_auto[IPVS_CMD_DEL_DEST, ip_vs_cmd_policy$auto_ip_vs_ctl]], f flags[send_flags]) (automatic)
sendmsg$auto_IPVS_CMD_DEL_SERVICE(fd sock_nl_generic, msg ptr[in, msghdr_IPVS_auto[IPVS_CMD_DEL_SERVICE, ip_vs_cmd_policy$auto_ip_vs_ctl]], f flags[send_flags]) (automatic)
sendmsg$auto_IPVS_CMD_FLUSH(fd sock_nl_generic, msg ptr[in, msghdr_IPVS_auto[IPVS_CMD_FLUSH, ip_vs_cmd_policy$auto_ip_vs_ctl]], f flags[send_flags]) (automatic)
sendmsg$auto_IPVS_CMD_GET_CONFIG(fd sock_nl_generic, msg ptr[in, msghdr_IPVS_auto[IPVS_CMD_GET_CONFIG, ip_vs_cmd_policy$auto_ip_vs_ctl]], f flags[send_flags]) (automatic)
sendmsg$auto_IPVS_CMD_GET_DAEMON(fd sock_nl_generic, msg ptr[in, msghdr_IPVS_auto[IPVS_CMD_GET_DAEMON, ip_vs_cmd_policy$auto_ip_vs_ctl]], f flags[send_flags]) (automatic)
sendmsg$auto_IPVS_CMD_GET_DEST(fd sock_nl_generic, msg ptr[in, msghdr_IPVS_auto[IPVS_CMD_GET_DEST, ip_vs_cmd_policy$auto_ip_vs_ctl]], f flags[send_flags]) (automatic)
sendmsg$auto_IPVS_CMD_GET_INFO(fd sock_nl_generic, msg ptr[in, msghdr_IPVS_auto[IPVS_CMD_GET_INFO, ip_vs_cmd_policy$auto_ip_vs_ctl]], f flags[send_flags]) (automatic)
sendmsg$auto_IPVS_CMD_GET_SERVICE(fd sock_nl_generic, msg ptr[in, msghdr_IPVS_auto[IPVS_CMD_GET_SERVICE, ip_vs_cmd_policy$auto_ip_vs_ctl]], f flags[send_flags]) (automatic)
sendmsg$auto_IPVS_CMD_NEW_DAEMON(fd sock_nl_generic, msg ptr[in, msghdr_IPVS_auto[IPVS_CMD_NEW_DAEMON, ip_vs_cmd_policy$auto_ip_vs_ctl]], f flags[send_flags]) (automatic)
sendmsg$auto_IPVS_CMD_NEW_DEST(fd sock_nl_generic, msg ptr[in, msghdr_IPVS_auto[IPVS_CMD_NEW_DEST, ip_vs_cmd_policy$auto_ip_vs_ctl]], f flags[send_flags]) (automatic)
sendmsg$auto_IPVS_CMD_NEW_SERVICE(fd sock_nl_generic, msg ptr[in, msghdr_IPVS_auto[IPVS_CMD_NEW_SERVICE, ip_vs_cmd_policy$auto_ip_vs_ctl]], f flags[send_flags]) (automatic)
sendmsg$auto_IPVS_CMD_SET_CONFIG(fd sock_nl_generic, msg ptr[in, msghdr_IPVS_auto[IPVS_CMD_SET_CONFIG, ip_vs_cmd_policy$auto_ip_vs_ctl]], f flags[send_flags]) (automatic)
sendmsg$auto_IPVS_CMD_SET_DEST(fd sock_nl_generic, msg ptr[in, msghdr_IPVS_auto[IPVS_CMD_SET_DEST, ip_vs_cmd_policy$auto_ip_vs_ctl]], f flags[send_flags]) (automatic)
sendmsg$auto_IPVS_CMD_SET_SERVICE(fd sock_nl_generic, msg ptr[in, msghdr_IPVS_auto[IPVS_CMD_SET_SERVICE, ip_vs_cmd_policy$auto_ip_vs_ctl]], f flags[send_flags]) (automatic)
sendmsg$auto_IPVS_CMD_ZERO(fd sock_nl_generic, msg ptr[in, msghdr_IPVS_auto[IPVS_CMD_ZERO, ip_vs_cmd_policy$auto_ip_vs_ctl]], f flags[send_flags]) (automatic)
sendmsg$auto_L2TP_CMD_NOOP(fd sock_nl_generic, msg ptr[in, msghdr_l2tp_auto[L2TP_CMD_NOOP, l2tp_nl_policy$auto_l2tp_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_L2TP_CMD_SESSION_CREATE(fd sock_nl_generic, msg ptr[in, msghdr_l2tp_auto[L2TP_CMD_SESSION_CREATE, l2tp_nl_policy$auto_l2tp_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_L2TP_CMD_SESSION_DELETE(fd sock_nl_generic, msg ptr[in, msghdr_l2tp_auto[L2TP_CMD_SESSION_DELETE, l2tp_nl_policy$auto_l2tp_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_L2TP_CMD_SESSION_GET(fd sock_nl_generic, msg ptr[in, msghdr_l2tp_auto[L2TP_CMD_SESSION_GET, l2tp_nl_policy$auto_l2tp_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_L2TP_CMD_SESSION_MODIFY(fd sock_nl_generic, msg ptr[in, msghdr_l2tp_auto[L2TP_CMD_SESSION_MODIFY, l2tp_nl_policy$auto_l2tp_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_L2TP_CMD_TUNNEL_CREATE(fd sock_nl_generic, msg ptr[in, msghdr_l2tp_auto[L2TP_CMD_TUNNEL_CREATE, l2tp_nl_policy$auto_l2tp_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_L2TP_CMD_TUNNEL_DELETE(fd sock_nl_generic, msg ptr[in, msghdr_l2tp_auto[L2TP_CMD_TUNNEL_DELETE, l2tp_nl_policy$auto_l2tp_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_L2TP_CMD_TUNNEL_GET(fd sock_nl_generic, msg ptr[in, msghdr_l2tp_auto[L2TP_CMD_TUNNEL_GET, l2tp_nl_policy$auto_l2tp_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_L2TP_CMD_TUNNEL_MODIFY(fd sock_nl_generic, msg ptr[in, msghdr_l2tp_auto[L2TP_CMD_TUNNEL_MODIFY, l2tp_nl_policy$auto_l2tp_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_MAC802154_HWSIM_CMD_DEL_EDGE(fd sock_nl_generic, msg ptr[in, msghdr_MAC802154_HWSIM_auto[MAC802154_HWSIM_CMD_DEL_EDGE, hwsim_genl_policy$auto_mac802154_hwsim]], f flags[send_flags]) (automatic)
sendmsg$auto_MAC802154_HWSIM_CMD_DEL_RADIO(fd sock_nl_generic, msg ptr[in, msghdr_MAC802154_HWSIM_auto[MAC802154_HWSIM_CMD_DEL_RADIO, hwsim_genl_policy$auto_mac802154_hwsim]], f flags[send_flags]) (automatic)
sendmsg$auto_MAC802154_HWSIM_CMD_GET_RADIO(fd sock_nl_generic, msg ptr[in, msghdr_MAC802154_HWSIM_auto[MAC802154_HWSIM_CMD_GET_RADIO, hwsim_genl_policy$auto_mac802154_hwsim]], f flags[send_flags]) (automatic)
sendmsg$auto_MAC802154_HWSIM_CMD_NEW_EDGE(fd sock_nl_generic, msg ptr[in, msghdr_MAC802154_HWSIM_auto[MAC802154_HWSIM_CMD_NEW_EDGE, hwsim_genl_policy$auto_mac802154_hwsim]], f flags[send_flags]) (automatic)
sendmsg$auto_MAC802154_HWSIM_CMD_NEW_RADIO(fd sock_nl_generic, msg ptr[in, msghdr_MAC802154_HWSIM_auto[MAC802154_HWSIM_CMD_NEW_RADIO, hwsim_genl_policy$auto_mac802154_hwsim]], f flags[send_flags]) (automatic)
sendmsg$auto_MAC802154_HWSIM_CMD_SET_EDGE(fd sock_nl_generic, msg ptr[in, msghdr_MAC802154_HWSIM_auto[MAC802154_HWSIM_CMD_SET_EDGE, hwsim_genl_policy$auto_mac802154_hwsim]], f flags[send_flags]) (automatic)
sendmsg$auto_MACSEC_CMD_ADD_RXSA(fd sock_nl_generic, msg ptr[in, msghdr_macsec_auto[MACSEC_CMD_ADD_RXSA, macsec_genl_policy$auto_macsec]], f flags[send_flags]) (automatic)
sendmsg$auto_MACSEC_CMD_ADD_RXSC(fd sock_nl_generic, msg ptr[in, msghdr_macsec_auto[MACSEC_CMD_ADD_RXSC, macsec_genl_policy$auto_macsec]], f flags[send_flags]) (automatic)
sendmsg$auto_MACSEC_CMD_ADD_TXSA(fd sock_nl_generic, msg ptr[in, msghdr_macsec_auto[MACSEC_CMD_ADD_TXSA, macsec_genl_policy$auto_macsec]], f flags[send_flags]) (automatic)
sendmsg$auto_MACSEC_CMD_DEL_RXSA(fd sock_nl_generic, msg ptr[in, msghdr_macsec_auto[MACSEC_CMD_DEL_RXSA, macsec_genl_policy$auto_macsec]], f flags[send_flags]) (automatic)
sendmsg$auto_MACSEC_CMD_DEL_RXSC(fd sock_nl_generic, msg ptr[in, msghdr_macsec_auto[MACSEC_CMD_DEL_RXSC, macsec_genl_policy$auto_macsec]], f flags[send_flags]) (automatic)
sendmsg$auto_MACSEC_CMD_DEL_TXSA(fd sock_nl_generic, msg ptr[in, msghdr_macsec_auto[MACSEC_CMD_DEL_TXSA, macsec_genl_policy$auto_macsec]], f flags[send_flags]) (automatic)
sendmsg$auto_MACSEC_CMD_GET_TXSC(fd sock_nl_generic, msg ptr[in, msghdr_macsec_auto[MACSEC_CMD_GET_TXSC, macsec_genl_policy$auto_macsec]], f flags[send_flags]) (automatic)
sendmsg$auto_MACSEC_CMD_UPD_OFFLOAD(fd sock_nl_generic, msg ptr[in, msghdr_macsec_auto[MACSEC_CMD_UPD_OFFLOAD, macsec_genl_policy$auto_macsec]], f flags[send_flags]) (automatic)
sendmsg$auto_MACSEC_CMD_UPD_RXSA(fd sock_nl_generic, msg ptr[in, msghdr_macsec_auto[MACSEC_CMD_UPD_RXSA, macsec_genl_policy$auto_macsec]], f flags[send_flags]) (automatic)
sendmsg$auto_MACSEC_CMD_UPD_RXSC(fd sock_nl_generic, msg ptr[in, msghdr_macsec_auto[MACSEC_CMD_UPD_RXSC, macsec_genl_policy$auto_macsec]], f flags[send_flags]) (automatic)
sendmsg$auto_MACSEC_CMD_UPD_TXSA(fd sock_nl_generic, msg ptr[in, msghdr_macsec_auto[MACSEC_CMD_UPD_TXSA, macsec_genl_policy$auto_macsec]], f flags[send_flags]) (automatic)
sendmsg$auto_NBD_CMD_CONNECT(fd sock_nl_generic, msg ptr[in, msghdr_nbd_auto[NBD_CMD_CONNECT, nbd_attr_policy$auto_nbd]], f flags[send_flags]) (automatic)
sendmsg$auto_NBD_CMD_DISCONNECT(fd sock_nl_generic, msg ptr[in, msghdr_nbd_auto[NBD_CMD_DISCONNECT, nbd_attr_policy$auto_nbd]], f flags[send_flags]) (automatic)
sendmsg$auto_NBD_CMD_RECONFIGURE(fd sock_nl_generic, msg ptr[in, msghdr_nbd_auto[NBD_CMD_RECONFIGURE, nbd_attr_policy$auto_nbd]], f flags[send_flags]) (automatic)
sendmsg$auto_NBD_CMD_STATUS(fd sock_nl_generic, msg ptr[in, msghdr_nbd_auto[NBD_CMD_STATUS, nbd_attr_policy$auto_nbd]], f flags[send_flags]) (automatic)
sendmsg$auto_NCSI_CMD_CLEAR_INTERFACE(fd sock_nl_generic, msg ptr[in, msghdr_NCSI_auto[NCSI_CMD_CLEAR_INTERFACE, ncsi_genl_policy$auto_ncsi_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_NCSI_CMD_PKG_INFO(fd sock_nl_generic, msg ptr[in, msghdr_NCSI_auto[NCSI_CMD_PKG_INFO, ncsi_genl_policy$auto_ncsi_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_NCSI_CMD_SEND_CMD(fd sock_nl_generic, msg ptr[in, msghdr_NCSI_auto[NCSI_CMD_SEND_CMD, ncsi_genl_policy$auto_ncsi_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_NCSI_CMD_SET_CHANNEL_MASK(fd sock_nl_generic, msg ptr[in, msghdr_NCSI_auto[NCSI_CMD_SET_CHANNEL_MASK, ncsi_genl_policy$auto_ncsi_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_NCSI_CMD_SET_INTERFACE(fd sock_nl_generic, msg ptr[in, msghdr_NCSI_auto[NCSI_CMD_SET_INTERFACE, ncsi_genl_policy$auto_ncsi_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_NCSI_CMD_SET_PACKAGE_MASK(fd sock_nl_generic, msg ptr[in, msghdr_NCSI_auto[NCSI_CMD_SET_PACKAGE_MASK, ncsi_genl_policy$auto_ncsi_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_NETDEV_CMD_BIND_RX(fd sock_nl_generic, msg ptr[in, msghdr_netdev_auto[NETDEV_CMD_BIND_RX, netdev_bind_rx_nl_policy$auto_netdev_genl_gen]], f flags[send_flags]) (automatic)
sendmsg$auto_NETDEV_CMD_DEV_GET(fd sock_nl_generic, msg ptr[in, msghdr_netdev_auto[NETDEV_CMD_DEV_GET, netdev_dev_get_nl_policy$auto_netdev_genl_gen]], f flags[send_flags]) (automatic)
sendmsg$auto_NETDEV_CMD_NAPI_GET(fd sock_nl_generic, msg ptr[in, msghdr_netdev_auto[NETDEV_CMD_NAPI_GET, netdev_napi_get_do_nl_policy$auto_netdev_genl_gen]], f flags[send_flags]) (automatic)
sendmsg$auto_NETDEV_CMD_NAPI_GET0(fd sock_nl_generic, msg ptr[in, msghdr_netdev_auto[NETDEV_CMD_NAPI_GET, netdev_napi_get_dump_nl_policy$auto_netdev_genl_gen]], f flags[send_flags]) (automatic)
sendmsg$auto_NETDEV_CMD_NAPI_SET(fd sock_nl_generic, msg ptr[in, msghdr_netdev_auto[NETDEV_CMD_NAPI_SET, netdev_napi_set_nl_policy$auto_netdev_genl_gen]], f flags[send_flags]) (automatic)
sendmsg$auto_NETDEV_CMD_PAGE_POOL_GET(fd sock_nl_generic, msg ptr[in, msghdr_netdev_auto[NETDEV_CMD_PAGE_POOL_GET, netdev_page_pool_get_nl_policy$auto_netdev_genl_gen]], f flags[send_flags]) (automatic)
sendmsg$auto_NETDEV_CMD_QSTATS_GET(fd sock_nl_generic, msg ptr[in, msghdr_netdev_auto[NETDEV_CMD_QSTATS_GET, netdev_qstats_get_nl_policy$auto_netdev_genl_gen]], f flags[send_flags]) (automatic)
sendmsg$auto_NETDEV_CMD_QUEUE_GET(fd sock_nl_generic, msg ptr[in, msghdr_netdev_auto[NETDEV_CMD_QUEUE_GET, netdev_queue_get_do_nl_policy$auto_netdev_genl_gen]], f flags[send_flags]) (automatic)
sendmsg$auto_NETDEV_CMD_QUEUE_GET0(fd sock_nl_generic, msg ptr[in, msghdr_netdev_auto[NETDEV_CMD_QUEUE_GET, netdev_queue_get_dump_nl_policy$auto_netdev_genl_gen]], f flags[send_flags]) (automatic)
sendmsg$auto_NET_DM_CMD_CONFIG(fd sock_nl_generic, msg ptr[in, msghdr_NET_DM_auto[NET_DM_CMD_CONFIG, net_dm_nl_policy$auto_drop_monitor]], f flags[send_flags]) (automatic)
sendmsg$auto_NET_DM_CMD_CONFIG_GET(fd sock_nl_generic, msg ptr[in, msghdr_NET_DM_auto[NET_DM_CMD_CONFIG_GET, net_dm_nl_policy$auto_drop_monitor]], f flags[send_flags]) (automatic)
sendmsg$auto_NET_DM_CMD_START(fd sock_nl_generic, msg ptr[in, msghdr_NET_DM_auto[NET_DM_CMD_START, net_dm_nl_policy$auto_drop_monitor]], f flags[send_flags]) (automatic)
sendmsg$auto_NET_DM_CMD_STATS_GET(fd sock_nl_generic, msg ptr[in, msghdr_NET_DM_auto[NET_DM_CMD_STATS_GET, net_dm_nl_policy$auto_drop_monitor]], f flags[send_flags]) (automatic)
sendmsg$auto_NET_DM_CMD_STOP(fd sock_nl_generic, msg ptr[in, msghdr_NET_DM_auto[NET_DM_CMD_STOP, net_dm_nl_policy$auto_drop_monitor]], f flags[send_flags]) (automatic)
sendmsg$auto_NET_SHAPER_CMD_CAP_GET(fd sock_nl_generic, msg ptr[in, msghdr_net_shaper_auto[NET_SHAPER_CMD_CAP_GET, net_shaper_cap_get_do_nl_policy$auto_shaper_nl_gen]], f flags[send_flags]) (automatic)
sendmsg$auto_NET_SHAPER_CMD_CAP_GET0(fd sock_nl_generic, msg ptr[in, msghdr_net_shaper_auto[NET_SHAPER_CMD_CAP_GET, net_shaper_cap_get_dump_nl_policy$auto_shaper_nl_gen]], f flags[send_flags]) (automatic)
sendmsg$auto_NET_SHAPER_CMD_DELETE(fd sock_nl_generic, msg ptr[in, msghdr_net_shaper_auto[NET_SHAPER_CMD_DELETE, net_shaper_delete_nl_policy$auto_shaper_nl_gen]], f flags[send_flags]) (automatic)
sendmsg$auto_NET_SHAPER_CMD_GET(fd sock_nl_generic, msg ptr[in, msghdr_net_shaper_auto[NET_SHAPER_CMD_GET, net_shaper_get_do_nl_policy$auto_shaper_nl_gen]], f flags[send_flags]) (automatic)
sendmsg$auto_NET_SHAPER_CMD_GET0(fd sock_nl_generic, msg ptr[in, msghdr_net_shaper_auto[NET_SHAPER_CMD_GET, net_shaper_get_dump_nl_policy$auto_shaper_nl_gen]], f flags[send_flags]) (automatic)
sendmsg$auto_NET_SHAPER_CMD_GROUP(fd sock_nl_generic, msg ptr[in, msghdr_net_shaper_auto[NET_SHAPER_CMD_GROUP, net_shaper_group_nl_policy$auto_shaper_nl_gen]], f flags[send_flags]) (automatic)
sendmsg$auto_NET_SHAPER_CMD_SET(fd sock_nl_generic, msg ptr[in, msghdr_net_shaper_auto[NET_SHAPER_CMD_SET, net_shaper_set_nl_policy$auto_shaper_nl_gen]], f flags[send_flags]) (automatic)
sendmsg$auto_NFC_CMD_ACTIVATE_TARGET(fd sock_nl_generic, msg ptr[in, msghdr_nfc_auto[NFC_CMD_ACTIVATE_TARGET, nfc_genl_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_NFC_CMD_DEACTIVATE_TARGET(fd sock_nl_generic, msg ptr[in, msghdr_nfc_auto[NFC_CMD_DEACTIVATE_TARGET, nfc_genl_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_NFC_CMD_DEP_LINK_DOWN(fd sock_nl_generic, msg ptr[in, msghdr_nfc_auto[NFC_CMD_DEP_LINK_DOWN, nfc_genl_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_NFC_CMD_DEP_LINK_UP(fd sock_nl_generic, msg ptr[in, msghdr_nfc_auto[NFC_CMD_DEP_LINK_UP, nfc_genl_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_NFC_CMD_DEV_DOWN(fd sock_nl_generic, msg ptr[in, msghdr_nfc_auto[NFC_CMD_DEV_DOWN, nfc_genl_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_NFC_CMD_DEV_UP(fd sock_nl_generic, msg ptr[in, msghdr_nfc_auto[NFC_CMD_DEV_UP, nfc_genl_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_NFC_CMD_DISABLE_SE(fd sock_nl_generic, msg ptr[in, msghdr_nfc_auto[NFC_CMD_DISABLE_SE, nfc_genl_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_NFC_CMD_ENABLE_SE(fd sock_nl_generic, msg ptr[in, msghdr_nfc_auto[NFC_CMD_ENABLE_SE, nfc_genl_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_NFC_CMD_FW_DOWNLOAD(fd sock_nl_generic, msg ptr[in, msghdr_nfc_auto[NFC_CMD_FW_DOWNLOAD, nfc_genl_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_NFC_CMD_GET_DEVICE(fd sock_nl_generic, msg ptr[in, msghdr_nfc_auto[NFC_CMD_GET_DEVICE, nfc_genl_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_NFC_CMD_GET_SE(fd sock_nl_generic, msg ptr[in, msghdr_nfc_auto[NFC_CMD_GET_SE, nfc_genl_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_NFC_CMD_GET_TARGET(fd sock_nl_generic, msg ptr[in, msghdr_nfc_auto[NFC_CMD_GET_TARGET, nfc_genl_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_NFC_CMD_LLC_GET_PARAMS(fd sock_nl_generic, msg ptr[in, msghdr_nfc_auto[NFC_CMD_LLC_GET_PARAMS, nfc_genl_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_NFC_CMD_LLC_SDREQ(fd sock_nl_generic, msg ptr[in, msghdr_nfc_auto[NFC_CMD_LLC_SDREQ, nfc_genl_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_NFC_CMD_LLC_SET_PARAMS(fd sock_nl_generic, msg ptr[in, msghdr_nfc_auto[NFC_CMD_LLC_SET_PARAMS, nfc_genl_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_NFC_CMD_SE_IO(fd sock_nl_generic, msg ptr[in, msghdr_nfc_auto[NFC_CMD_SE_IO, nfc_genl_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_NFC_CMD_START_POLL(fd sock_nl_generic, msg ptr[in, msghdr_nfc_auto[NFC_CMD_START_POLL, nfc_genl_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_NFC_CMD_STOP_POLL(fd sock_nl_generic, msg ptr[in, msghdr_nfc_auto[NFC_CMD_STOP_POLL, nfc_genl_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_NFC_CMD_VENDOR(fd sock_nl_generic, msg ptr[in, msghdr_nfc_auto[NFC_CMD_VENDOR, nfc_genl_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_NFSD_CMD_LISTENER_SET(fd sock_nl_generic, msg ptr[in, msghdr_nfsd_auto[NFSD_CMD_LISTENER_SET, nfsd_listener_set_nl_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_NFSD_CMD_POOL_MODE_SET(fd sock_nl_generic, msg ptr[in, msghdr_nfsd_auto[NFSD_CMD_POOL_MODE_SET, nfsd_pool_mode_set_nl_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_NFSD_CMD_THREADS_SET(fd sock_nl_generic, msg ptr[in, msghdr_nfsd_auto[NFSD_CMD_THREADS_SET, nfsd_threads_set_nl_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_NFSD_CMD_VERSION_SET(fd sock_nl_generic, msg ptr[in, msghdr_nfsd_auto[NFSD_CMD_VERSION_SET, nfsd_version_set_nl_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_ABORT_SCAN(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_ABORT_SCAN, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_ADD_LINK(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_ADD_LINK, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_ADD_LINK_STA(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_ADD_LINK_STA, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_ADD_NAN_FUNCTION(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_ADD_NAN_FUNCTION, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_ADD_TX_TS(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_ADD_TX_TS, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_ASSOCIATE(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_ASSOCIATE, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_AUTHENTICATE(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_AUTHENTICATE, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_CANCEL_REMAIN_ON_CHANNEL(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_CANCEL_REMAIN_ON_CHANNEL, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_CHANGE_NAN_CONFIG(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_CHANGE_NAN_CONFIG, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_CHANNEL_SWITCH(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_CHANNEL_SWITCH, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_COLOR_CHANGE_REQUEST(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_COLOR_CHANGE_REQUEST, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_CONNECT(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_CONNECT, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_CONTROL_PORT_FRAME(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_CONTROL_PORT_FRAME, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_CRIT_PROTOCOL_START(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_CRIT_PROTOCOL_START, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_CRIT_PROTOCOL_STOP(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_CRIT_PROTOCOL_STOP, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_DEAUTHENTICATE(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_DEAUTHENTICATE, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_DEL_INTERFACE(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_DEL_INTERFACE, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_DEL_KEY(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_DEL_KEY, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_DEL_MPATH(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_DEL_MPATH, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_DEL_NAN_FUNCTION(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_DEL_NAN_FUNCTION, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_DEL_PMK(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_DEL_PMK, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_DEL_PMKSA(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_DEL_PMKSA, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_DEL_STATION(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_DEL_STATION, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_DEL_TX_TS(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_DEL_TX_TS, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_DISASSOCIATE(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_DISASSOCIATE, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_DISCONNECT(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_DISCONNECT, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_EXTERNAL_AUTH(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_EXTERNAL_AUTH, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_FLUSH_PMKSA(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_FLUSH_PMKSA, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_FRAME(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_FRAME, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_FRAME_WAIT_CANCEL(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_FRAME_WAIT_CANCEL, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_GET_COALESCE(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_GET_COALESCE, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_GET_FTM_RESPONDER_STATS(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_GET_FTM_RESPONDER_STATS, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_GET_INTERFACE(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_GET_INTERFACE, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_GET_KEY(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_GET_KEY, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_GET_MESH_CONFIG(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_GET_MESH_CONFIG, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_GET_MPATH(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_GET_MPATH, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_GET_MPP(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_GET_MPP, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_GET_POWER_SAVE(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_GET_POWER_SAVE, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_GET_PROTOCOL_FEATURES(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_GET_PROTOCOL_FEATURES, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_GET_REG(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_GET_REG, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_GET_SCAN(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_GET_SCAN, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_GET_STATION(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_GET_STATION, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_GET_SURVEY(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_GET_SURVEY, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_GET_WIPHY(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_GET_WIPHY, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_GET_WOWLAN(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_GET_WOWLAN, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_JOIN_IBSS(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_JOIN_IBSS, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_JOIN_MESH(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_JOIN_MESH, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_JOIN_OCB(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_JOIN_OCB, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_LEAVE_IBSS(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_LEAVE_IBSS, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_LEAVE_MESH(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_LEAVE_MESH, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_LEAVE_OCB(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_LEAVE_OCB, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_MODIFY_LINK_STA(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_MODIFY_LINK_STA, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_NEW_INTERFACE(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_NEW_INTERFACE, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_NEW_KEY(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_NEW_KEY, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_NEW_MPATH(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_NEW_MPATH, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_NEW_STATION(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_NEW_STATION, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_NOTIFY_RADAR(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_NOTIFY_RADAR, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_PEER_MEASUREMENT_START(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_PEER_MEASUREMENT_START, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_PROBE_CLIENT(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_PROBE_CLIENT, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_PROBE_MESH_LINK(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_PROBE_MESH_LINK, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_RADAR_DETECT(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_RADAR_DETECT, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_REGISTER_BEACONS(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_REGISTER_BEACONS, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_REGISTER_FRAME(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_REGISTER_FRAME, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_RELOAD_REGDB(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_RELOAD_REGDB, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_REMAIN_ON_CHANNEL(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_REMAIN_ON_CHANNEL, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_REMOVE_LINK(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_REMOVE_LINK, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_REMOVE_LINK_STA(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_REMOVE_LINK_STA, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_REQ_SET_REG(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_REQ_SET_REG, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_SET_BEACON(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_SET_BEACON, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_SET_BSS(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_SET_BSS, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_SET_CHANNEL(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_SET_CHANNEL, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_SET_COALESCE(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_SET_COALESCE, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_SET_CQM(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_SET_CQM, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_SET_FILS_AAD(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_SET_FILS_AAD, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_SET_HW_TIMESTAMP(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_SET_HW_TIMESTAMP, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_SET_INTERFACE(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_SET_INTERFACE, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_SET_KEY(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_SET_KEY, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_SET_MAC_ACL(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_SET_MAC_ACL, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_SET_MCAST_RATE(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_SET_MCAST_RATE, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_SET_MESH_CONFIG(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_SET_MESH_CONFIG, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_SET_MPATH(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_SET_MPATH, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_SET_MULTICAST_TO_UNICAST(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_SET_MULTICAST_TO_UNICAST, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_SET_NOACK_MAP(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_SET_NOACK_MAP, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_SET_PMK(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_SET_PMK, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_SET_PMKSA(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_SET_PMKSA, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_SET_POWER_SAVE(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_SET_POWER_SAVE, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_SET_QOS_MAP(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_SET_QOS_MAP, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_SET_REG(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_SET_REG, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_SET_REKEY_OFFLOAD(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_SET_REKEY_OFFLOAD, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_SET_SAR_SPECS(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_SET_SAR_SPECS, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_SET_STATION(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_SET_STATION, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_SET_TID_CONFIG(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_SET_TID_CONFIG, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_SET_TID_TO_LINK_MAPPING(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_SET_TID_TO_LINK_MAPPING, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_SET_TX_BITRATE_MASK(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_SET_TX_BITRATE_MASK, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_SET_WIPHY(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_SET_WIPHY, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_SET_WIPHY_NETNS(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_SET_WIPHY_NETNS, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_SET_WOWLAN(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_SET_WOWLAN, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_START_AP(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_START_AP, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_START_NAN(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_START_NAN, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_START_P2P_DEVICE(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_START_P2P_DEVICE, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_START_SCHED_SCAN(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_START_SCHED_SCAN, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_STOP_AP(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_STOP_AP, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_STOP_NAN(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_STOP_NAN, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_STOP_P2P_DEVICE(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_STOP_P2P_DEVICE, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_STOP_SCHED_SCAN(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_STOP_SCHED_SCAN, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_TDLS_CANCEL_CHANNEL_SWITCH(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_TDLS_CANCEL_CHANNEL_SWITCH, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_TDLS_CHANNEL_SWITCH(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_TDLS_CHANNEL_SWITCH, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_TDLS_MGMT(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_TDLS_MGMT, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_TDLS_OPER(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_TDLS_OPER, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_TRIGGER_SCAN(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_TRIGGER_SCAN, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_UNEXPECTED_FRAME(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_UNEXPECTED_FRAME, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_UPDATE_CONNECT_PARAMS(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_UPDATE_CONNECT_PARAMS, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_UPDATE_FT_IES(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_UPDATE_FT_IES, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_UPDATE_OWE_INFO(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_UPDATE_OWE_INFO, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL80211_CMD_VENDOR(fd sock_nl_generic, msg ptr[in, msghdr_nl80211_auto[NL80211_CMD_VENDOR, nl80211_policy$auto_nl80211]], f flags[send_flags]) (automatic)
sendmsg$auto_NL802154_CMD_ABORT_SCAN(fd sock_nl_generic, msg ptr[in, msghdr_nl802154_auto[NL802154_CMD_ABORT_SCAN, nl802154_policy$auto_nl802154]], f flags[send_flags]) (automatic)
sendmsg$auto_NL802154_CMD_ASSOCIATE(fd sock_nl_generic, msg ptr[in, msghdr_nl802154_auto[NL802154_CMD_ASSOCIATE, nl802154_policy$auto_nl802154]], f flags[send_flags]) (automatic)
sendmsg$auto_NL802154_CMD_DEL_INTERFACE(fd sock_nl_generic, msg ptr[in, msghdr_nl802154_auto[NL802154_CMD_DEL_INTERFACE, nl802154_policy$auto_nl802154]], f flags[send_flags]) (automatic)
sendmsg$auto_NL802154_CMD_DEL_SEC_DEV(fd sock_nl_generic, msg ptr[in, msghdr_nl802154_auto[NL802154_CMD_DEL_SEC_DEV, nl802154_policy$auto_nl802154]], f flags[send_flags]) (automatic)
sendmsg$auto_NL802154_CMD_DEL_SEC_DEVKEY(fd sock_nl_generic, msg ptr[in, msghdr_nl802154_auto[NL802154_CMD_DEL_SEC_DEVKEY, nl802154_policy$auto_nl802154]], f flags[send_flags]) (automatic)
sendmsg$auto_NL802154_CMD_DEL_SEC_KEY(fd sock_nl_generic, msg ptr[in, msghdr_nl802154_auto[NL802154_CMD_DEL_SEC_KEY, nl802154_policy$auto_nl802154]], f flags[send_flags]) (automatic)
sendmsg$auto_NL802154_CMD_DEL_SEC_LEVEL(fd sock_nl_generic, msg ptr[in, msghdr_nl802154_auto[NL802154_CMD_DEL_SEC_LEVEL, nl802154_policy$auto_nl802154]], f flags[send_flags]) (automatic)
sendmsg$auto_NL802154_CMD_DISASSOCIATE(fd sock_nl_generic, msg ptr[in, msghdr_nl802154_auto[NL802154_CMD_DISASSOCIATE, nl802154_policy$auto_nl802154]], f flags[send_flags]) (automatic)
sendmsg$auto_NL802154_CMD_GET_INTERFACE(fd sock_nl_generic, msg ptr[in, msghdr_nl802154_auto[NL802154_CMD_GET_INTERFACE, nl802154_policy$auto_nl802154]], f flags[send_flags]) (automatic)
sendmsg$auto_NL802154_CMD_GET_SEC_DEV(fd sock_nl_generic, msg ptr[in, msghdr_nl802154_auto[NL802154_CMD_GET_SEC_DEV, nl802154_policy$auto_nl802154]], f flags[send_flags]) (automatic)
sendmsg$auto_NL802154_CMD_GET_SEC_DEVKEY(fd sock_nl_generic, msg ptr[in, msghdr_nl802154_auto[NL802154_CMD_GET_SEC_DEVKEY, nl802154_policy$auto_nl802154]], f flags[send_flags]) (automatic)
sendmsg$auto_NL802154_CMD_GET_SEC_KEY(fd sock_nl_generic, msg ptr[in, msghdr_nl802154_auto[NL802154_CMD_GET_SEC_KEY, nl802154_policy$auto_nl802154]], f flags[send_flags]) (automatic)
sendmsg$auto_NL802154_CMD_GET_SEC_LEVEL(fd sock_nl_generic, msg ptr[in, msghdr_nl802154_auto[NL802154_CMD_GET_SEC_LEVEL, nl802154_policy$auto_nl802154]], f flags[send_flags]) (automatic)
sendmsg$auto_NL802154_CMD_GET_WPAN_PHY(fd sock_nl_generic, msg ptr[in, msghdr_nl802154_auto[NL802154_CMD_GET_WPAN_PHY, nl802154_policy$auto_nl802154]], f flags[send_flags]) (automatic)
sendmsg$auto_NL802154_CMD_LIST_ASSOCIATIONS(fd sock_nl_generic, msg ptr[in, msghdr_nl802154_auto[NL802154_CMD_LIST_ASSOCIATIONS, nl802154_policy$auto_nl802154]], f flags[send_flags]) (automatic)
sendmsg$auto_NL802154_CMD_NEW_INTERFACE(fd sock_nl_generic, msg ptr[in, msghdr_nl802154_auto[NL802154_CMD_NEW_INTERFACE, nl802154_policy$auto_nl802154]], f flags[send_flags]) (automatic)
sendmsg$auto_NL802154_CMD_NEW_SEC_DEV(fd sock_nl_generic, msg ptr[in, msghdr_nl802154_auto[NL802154_CMD_NEW_SEC_DEV, nl802154_policy$auto_nl802154]], f flags[send_flags]) (automatic)
sendmsg$auto_NL802154_CMD_NEW_SEC_DEVKEY(fd sock_nl_generic, msg ptr[in, msghdr_nl802154_auto[NL802154_CMD_NEW_SEC_DEVKEY, nl802154_policy$auto_nl802154]], f flags[send_flags]) (automatic)
sendmsg$auto_NL802154_CMD_NEW_SEC_KEY(fd sock_nl_generic, msg ptr[in, msghdr_nl802154_auto[NL802154_CMD_NEW_SEC_KEY, nl802154_policy$auto_nl802154]], f flags[send_flags]) (automatic)
sendmsg$auto_NL802154_CMD_NEW_SEC_LEVEL(fd sock_nl_generic, msg ptr[in, msghdr_nl802154_auto[NL802154_CMD_NEW_SEC_LEVEL, nl802154_policy$auto_nl802154]], f flags[send_flags]) (automatic)
sendmsg$auto_NL802154_CMD_SEND_BEACONS(fd sock_nl_generic, msg ptr[in, msghdr_nl802154_auto[NL802154_CMD_SEND_BEACONS, nl802154_policy$auto_nl802154]], f flags[send_flags]) (automatic)
sendmsg$auto_NL802154_CMD_SET_ACKREQ_DEFAULT(fd sock_nl_generic, msg ptr[in, msghdr_nl802154_auto[NL802154_CMD_SET_ACKREQ_DEFAULT, nl802154_policy$auto_nl802154]], f flags[send_flags]) (automatic)
sendmsg$auto_NL802154_CMD_SET_BACKOFF_EXPONENT(fd sock_nl_generic, msg ptr[in, msghdr_nl802154_auto[NL802154_CMD_SET_BACKOFF_EXPONENT, nl802154_policy$auto_nl802154]], f flags[send_flags]) (automatic)
sendmsg$auto_NL802154_CMD_SET_CCA_ED_LEVEL(fd sock_nl_generic, msg ptr[in, msghdr_nl802154_auto[NL802154_CMD_SET_CCA_ED_LEVEL, nl802154_policy$auto_nl802154]], f flags[send_flags]) (automatic)
sendmsg$auto_NL802154_CMD_SET_CCA_MODE(fd sock_nl_generic, msg ptr[in, msghdr_nl802154_auto[NL802154_CMD_SET_CCA_MODE, nl802154_policy$auto_nl802154]], f flags[send_flags]) (automatic)
sendmsg$auto_NL802154_CMD_SET_CHANNEL(fd sock_nl_generic, msg ptr[in, msghdr_nl802154_auto[NL802154_CMD_SET_CHANNEL, nl802154_policy$auto_nl802154]], f flags[send_flags]) (automatic)
sendmsg$auto_NL802154_CMD_SET_LBT_MODE(fd sock_nl_generic, msg ptr[in, msghdr_nl802154_auto[NL802154_CMD_SET_LBT_MODE, nl802154_policy$auto_nl802154]], f flags[send_flags]) (automatic)
sendmsg$auto_NL802154_CMD_SET_MAX_ASSOCIATIONS(fd sock_nl_generic, msg ptr[in, msghdr_nl802154_auto[NL802154_CMD_SET_MAX_ASSOCIATIONS, nl802154_policy$auto_nl802154]], f flags[send_flags]) (automatic)
sendmsg$auto_NL802154_CMD_SET_MAX_CSMA_BACKOFFS(fd sock_nl_generic, msg ptr[in, msghdr_nl802154_auto[NL802154_CMD_SET_MAX_CSMA_BACKOFFS, nl802154_policy$auto_nl802154]], f flags[send_flags]) (automatic)
sendmsg$auto_NL802154_CMD_SET_MAX_FRAME_RETRIES(fd sock_nl_generic, msg ptr[in, msghdr_nl802154_auto[NL802154_CMD_SET_MAX_FRAME_RETRIES, nl802154_policy$auto_nl802154]], f flags[send_flags]) (automatic)
sendmsg$auto_NL802154_CMD_SET_PAN_ID(fd sock_nl_generic, msg ptr[in, msghdr_nl802154_auto[NL802154_CMD_SET_PAN_ID, nl802154_policy$auto_nl802154]], f flags[send_flags]) (automatic)
sendmsg$auto_NL802154_CMD_SET_SEC_PARAMS(fd sock_nl_generic, msg ptr[in, msghdr_nl802154_auto[NL802154_CMD_SET_SEC_PARAMS, nl802154_policy$auto_nl802154]], f flags[send_flags]) (automatic)
sendmsg$auto_NL802154_CMD_SET_SHORT_ADDR(fd sock_nl_generic, msg ptr[in, msghdr_nl802154_auto[NL802154_CMD_SET_SHORT_ADDR, nl802154_policy$auto_nl802154]], f flags[send_flags]) (automatic)
sendmsg$auto_NL802154_CMD_SET_TX_POWER(fd sock_nl_generic, msg ptr[in, msghdr_nl802154_auto[NL802154_CMD_SET_TX_POWER, nl802154_policy$auto_nl802154]], f flags[send_flags]) (automatic)
sendmsg$auto_NL802154_CMD_SET_WPAN_PHY_NETNS(fd sock_nl_generic, msg ptr[in, msghdr_nl802154_auto[NL802154_CMD_SET_WPAN_PHY_NETNS, nl802154_policy$auto_nl802154]], f flags[send_flags]) (automatic)
sendmsg$auto_NL802154_CMD_STOP_BEACONS(fd sock_nl_generic, msg ptr[in, msghdr_nl802154_auto[NL802154_CMD_STOP_BEACONS, nl802154_policy$auto_nl802154]], f flags[send_flags]) (automatic)
sendmsg$auto_NL802154_CMD_TRIGGER_SCAN(fd sock_nl_generic, msg ptr[in, msghdr_nl802154_auto[NL802154_CMD_TRIGGER_SCAN, nl802154_policy$auto_nl802154]], f flags[send_flags]) (automatic)
sendmsg$auto_NLBL_CALIPSO_C_ADD(fd sock_nl_generic, msg ptr[in, msghdr_NLBL_CALIPSO_auto[NLBL_CALIPSO_C_ADD, calipso_genl_policy$auto_netlabel_calipso]], f flags[send_flags]) (automatic)
sendmsg$auto_NLBL_CALIPSO_C_LIST(fd sock_nl_generic, msg ptr[in, msghdr_NLBL_CALIPSO_auto[NLBL_CALIPSO_C_LIST, calipso_genl_policy$auto_netlabel_calipso]], f flags[send_flags]) (automatic)
sendmsg$auto_NLBL_CALIPSO_C_LISTALL(fd sock_nl_generic, msg ptr[in, msghdr_NLBL_CALIPSO_auto[NLBL_CALIPSO_C_LISTALL, calipso_genl_policy$auto_netlabel_calipso]], f flags[send_flags]) (automatic)
sendmsg$auto_NLBL_CALIPSO_C_REMOVE(fd sock_nl_generic, msg ptr[in, msghdr_NLBL_CALIPSO_auto[NLBL_CALIPSO_C_REMOVE, calipso_genl_policy$auto_netlabel_calipso]], f flags[send_flags]) (automatic)
sendmsg$auto_NLBL_CIPSOV4_C_ADD(fd sock_nl_generic, msg ptr[in, msghdr_NLBL_CIPSOv4_auto[NLBL_CIPSOV4_C_ADD, netlbl_cipsov4_genl_policy$auto_netlabel_cipso_v4]], f flags[send_flags]) (automatic)
sendmsg$auto_NLBL_CIPSOV4_C_LIST(fd sock_nl_generic, msg ptr[in, msghdr_NLBL_CIPSOv4_auto[NLBL_CIPSOV4_C_LIST, netlbl_cipsov4_genl_policy$auto_netlabel_cipso_v4]], f flags[send_flags]) (automatic)
sendmsg$auto_NLBL_CIPSOV4_C_LISTALL(fd sock_nl_generic, msg ptr[in, msghdr_NLBL_CIPSOv4_auto[NLBL_CIPSOV4_C_LISTALL, netlbl_cipsov4_genl_policy$auto_netlabel_cipso_v4]], f flags[send_flags]) (automatic)
sendmsg$auto_NLBL_CIPSOV4_C_REMOVE(fd sock_nl_generic, msg ptr[in, msghdr_NLBL_CIPSOv4_auto[NLBL_CIPSOV4_C_REMOVE, netlbl_cipsov4_genl_policy$auto_netlabel_cipso_v4]], f flags[send_flags]) (automatic)
sendmsg$auto_NLBL_MGMT_C_ADD(fd sock_nl_generic, msg ptr[in, msghdr_NLBL_MGMT_auto[NLBL_MGMT_C_ADD, netlbl_mgmt_genl_policy$auto_netlabel_mgmt]], f flags[send_flags]) (automatic)
sendmsg$auto_NLBL_MGMT_C_ADDDEF(fd sock_nl_generic, msg ptr[in, msghdr_NLBL_MGMT_auto[NLBL_MGMT_C_ADDDEF, netlbl_mgmt_genl_policy$auto_netlabel_mgmt]], f flags[send_flags]) (automatic)
sendmsg$auto_NLBL_MGMT_C_LISTALL(fd sock_nl_generic, msg ptr[in, msghdr_NLBL_MGMT_auto[NLBL_MGMT_C_LISTALL, netlbl_mgmt_genl_policy$auto_netlabel_mgmt]], f flags[send_flags]) (automatic)
sendmsg$auto_NLBL_MGMT_C_LISTDEF(fd sock_nl_generic, msg ptr[in, msghdr_NLBL_MGMT_auto[NLBL_MGMT_C_LISTDEF, netlbl_mgmt_genl_policy$auto_netlabel_mgmt]], f flags[send_flags]) (automatic)
sendmsg$auto_NLBL_MGMT_C_PROTOCOLS(fd sock_nl_generic, msg ptr[in, msghdr_NLBL_MGMT_auto[NLBL_MGMT_C_PROTOCOLS, netlbl_mgmt_genl_policy$auto_netlabel_mgmt]], f flags[send_flags]) (automatic)
sendmsg$auto_NLBL_MGMT_C_REMOVE(fd sock_nl_generic, msg ptr[in, msghdr_NLBL_MGMT_auto[NLBL_MGMT_C_REMOVE, netlbl_mgmt_genl_policy$auto_netlabel_mgmt]], f flags[send_flags]) (automatic)
sendmsg$auto_NLBL_MGMT_C_REMOVEDEF(fd sock_nl_generic, msg ptr[in, msghdr_NLBL_MGMT_auto[NLBL_MGMT_C_REMOVEDEF, netlbl_mgmt_genl_policy$auto_netlabel_mgmt]], f flags[send_flags]) (automatic)
sendmsg$auto_NLBL_MGMT_C_VERSION(fd sock_nl_generic, msg ptr[in, msghdr_NLBL_MGMT_auto[NLBL_MGMT_C_VERSION, netlbl_mgmt_genl_policy$auto_netlabel_mgmt]], f flags[send_flags]) (automatic)
sendmsg$auto_NLBL_UNLABEL_C_ACCEPT(fd sock_nl_generic, msg ptr[in, msghdr_NLBL_UNLBL_auto[NLBL_UNLABEL_C_ACCEPT, netlbl_unlabel_genl_policy$auto_netlabel_unlabeled]], f flags[send_flags]) (automatic)
sendmsg$auto_NLBL_UNLABEL_C_LIST(fd sock_nl_generic, msg ptr[in, msghdr_NLBL_UNLBL_auto[NLBL_UNLABEL_C_LIST, netlbl_unlabel_genl_policy$auto_netlabel_unlabeled]], f flags[send_flags]) (automatic)
sendmsg$auto_NLBL_UNLABEL_C_STATICADD(fd sock_nl_generic, msg ptr[in, msghdr_NLBL_UNLBL_auto[NLBL_UNLABEL_C_STATICADD, netlbl_unlabel_genl_policy$auto_netlabel_unlabeled]], f flags[send_flags]) (automatic)
sendmsg$auto_NLBL_UNLABEL_C_STATICADDDEF(fd sock_nl_generic, msg ptr[in, msghdr_NLBL_UNLBL_auto[NLBL_UNLABEL_C_STATICADDDEF, netlbl_unlabel_genl_policy$auto_netlabel_unlabeled]], f flags[send_flags]) (automatic)
sendmsg$auto_NLBL_UNLABEL_C_STATICLIST(fd sock_nl_generic, msg ptr[in, msghdr_NLBL_UNLBL_auto[NLBL_UNLABEL_C_STATICLIST, netlbl_unlabel_genl_policy$auto_netlabel_unlabeled]], f flags[send_flags]) (automatic)
sendmsg$auto_NLBL_UNLABEL_C_STATICLISTDEF(fd sock_nl_generic, msg ptr[in, msghdr_NLBL_UNLBL_auto[NLBL_UNLABEL_C_STATICLISTDEF, netlbl_unlabel_genl_policy$auto_netlabel_unlabeled]], f flags[send_flags]) (automatic)
sendmsg$auto_NLBL_UNLABEL_C_STATICREMOVE(fd sock_nl_generic, msg ptr[in, msghdr_NLBL_UNLBL_auto[NLBL_UNLABEL_C_STATICREMOVE, netlbl_unlabel_genl_policy$auto_netlabel_unlabeled]], f flags[send_flags]) (automatic)
sendmsg$auto_NLBL_UNLABEL_C_STATICREMOVEDEF(fd sock_nl_generic, msg ptr[in, msghdr_NLBL_UNLBL_auto[NLBL_UNLABEL_C_STATICREMOVEDEF, netlbl_unlabel_genl_policy$auto_netlabel_unlabeled]], f flags[send_flags]) (automatic)
sendmsg$auto_OVS_CT_LIMIT_CMD_DEL(fd sock_nl_generic, msg ptr[in, msghdr_ovs_ct_limit_auto[OVS_CT_LIMIT_CMD_DEL, ct_limit_policy$auto_conntrack]], f flags[send_flags]) (automatic)
sendmsg$auto_OVS_CT_LIMIT_CMD_GET(fd sock_nl_generic, msg ptr[in, msghdr_ovs_ct_limit_auto[OVS_CT_LIMIT_CMD_GET, ct_limit_policy$auto_conntrack]], f flags[send_flags]) (automatic)
sendmsg$auto_OVS_CT_LIMIT_CMD_SET(fd sock_nl_generic, msg ptr[in, msghdr_ovs_ct_limit_auto[OVS_CT_LIMIT_CMD_SET, ct_limit_policy$auto_conntrack]], f flags[send_flags]) (automatic)
sendmsg$auto_OVS_DP_CMD_DEL(fd sock_nl_generic, msg ptr[in, msghdr_ovs_datapath_auto[OVS_DP_CMD_DEL, datapath_policy$auto_datapath]], f flags[send_flags]) (automatic)
sendmsg$auto_OVS_DP_CMD_GET(fd sock_nl_generic, msg ptr[in, msghdr_ovs_datapath_auto[OVS_DP_CMD_GET, datapath_policy$auto_datapath]], f flags[send_flags]) (automatic)
sendmsg$auto_OVS_DP_CMD_NEW(fd sock_nl_generic, msg ptr[in, msghdr_ovs_datapath_auto[OVS_DP_CMD_NEW, datapath_policy$auto_datapath]], f flags[send_flags]) (automatic)
sendmsg$auto_OVS_DP_CMD_SET(fd sock_nl_generic, msg ptr[in, msghdr_ovs_datapath_auto[OVS_DP_CMD_SET, datapath_policy$auto_datapath]], f flags[send_flags]) (automatic)
sendmsg$auto_OVS_FLOW_CMD_DEL(fd sock_nl_generic, msg ptr[in, msghdr_ovs_flow_auto[OVS_FLOW_CMD_DEL, flow_policy$auto_datapath]], f flags[send_flags]) (automatic)
sendmsg$auto_OVS_FLOW_CMD_GET(fd sock_nl_generic, msg ptr[in, msghdr_ovs_flow_auto[OVS_FLOW_CMD_GET, flow_policy$auto_datapath]], f flags[send_flags]) (automatic)
sendmsg$auto_OVS_FLOW_CMD_NEW(fd sock_nl_generic, msg ptr[in, msghdr_ovs_flow_auto[OVS_FLOW_CMD_NEW, flow_policy$auto_datapath]], f flags[send_flags]) (automatic)
sendmsg$auto_OVS_FLOW_CMD_SET(fd sock_nl_generic, msg ptr[in, msghdr_ovs_flow_auto[OVS_FLOW_CMD_SET, flow_policy$auto_datapath]], f flags[send_flags]) (automatic)
sendmsg$auto_OVS_METER_CMD_DEL(fd sock_nl_generic, msg ptr[in, msghdr_ovs_meter_auto[OVS_METER_CMD_DEL, meter_policy$auto_meter]], f flags[send_flags]) (automatic)
sendmsg$auto_OVS_METER_CMD_FEATURES(fd sock_nl_generic, msg ptr[in, msghdr_ovs_meter_auto[OVS_METER_CMD_FEATURES, meter_policy$auto_meter]], f flags[send_flags]) (automatic)
sendmsg$auto_OVS_METER_CMD_GET(fd sock_nl_generic, msg ptr[in, msghdr_ovs_meter_auto[OVS_METER_CMD_GET, meter_policy$auto_meter]], f flags[send_flags]) (automatic)
sendmsg$auto_OVS_METER_CMD_SET(fd sock_nl_generic, msg ptr[in, msghdr_ovs_meter_auto[OVS_METER_CMD_SET, meter_policy$auto_meter]], f flags[send_flags]) (automatic)
sendmsg$auto_OVS_PACKET_CMD_EXECUTE(fd sock_nl_generic, msg ptr[in, msghdr_ovs_packet_auto[OVS_PACKET_CMD_EXECUTE, packet_policy$auto_datapath]], f flags[send_flags]) (automatic)
sendmsg$auto_OVS_VPORT_CMD_DEL(fd sock_nl_generic, msg ptr[in, msghdr_ovs_vport_auto[OVS_VPORT_CMD_DEL, vport_policy$auto_datapath]], f flags[send_flags]) (automatic)
sendmsg$auto_OVS_VPORT_CMD_GET(fd sock_nl_generic, msg ptr[in, msghdr_ovs_vport_auto[OVS_VPORT_CMD_GET, vport_policy$auto_datapath]], f flags[send_flags]) (automatic)
sendmsg$auto_OVS_VPORT_CMD_NEW(fd sock_nl_generic, msg ptr[in, msghdr_ovs_vport_auto[OVS_VPORT_CMD_NEW, vport_policy$auto_datapath]], f flags[send_flags]) (automatic)
sendmsg$auto_OVS_VPORT_CMD_SET(fd sock_nl_generic, msg ptr[in, msghdr_ovs_vport_auto[OVS_VPORT_CMD_SET, vport_policy$auto_datapath]], f flags[send_flags]) (automatic)
sendmsg$auto_SEG6_CMD_DUMPHMAC(fd sock_nl_generic, msg ptr[in, msghdr_SEG6_auto[SEG6_CMD_DUMPHMAC, seg6_genl_policy$auto_seg6]], f flags[send_flags]) (automatic)
sendmsg$auto_SEG6_CMD_GET_TUNSRC(fd sock_nl_generic, msg ptr[in, msghdr_SEG6_auto[SEG6_CMD_GET_TUNSRC, seg6_genl_policy$auto_seg6]], f flags[send_flags]) (automatic)
sendmsg$auto_SEG6_CMD_SETHMAC(fd sock_nl_generic, msg ptr[in, msghdr_SEG6_auto[SEG6_CMD_SETHMAC, seg6_genl_policy$auto_seg6]], f flags[send_flags]) (automatic)
sendmsg$auto_SEG6_CMD_SET_TUNSRC(fd sock_nl_generic, msg ptr[in, msghdr_SEG6_auto[SEG6_CMD_SET_TUNSRC, seg6_genl_policy$auto_seg6]], f flags[send_flags]) (automatic)
sendmsg$auto_SMC_NETLINK_ADD_UEID(fd sock_nl_generic, msg ptr[in, msghdr_SMC_GEN_NETLINK_auto[SMC_NETLINK_ADD_UEID, smc_gen_ueid_policy$auto_smc_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_SMC_NETLINK_DISABLE_HS_LIMITATION(fd sock_nl_generic, msg ptr[in, msghdr_SMC_GEN_NETLINK_auto[SMC_NETLINK_DISABLE_HS_LIMITATION, smc_gen_nl_policy$auto_smc_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_SMC_NETLINK_DISABLE_SEID(fd sock_nl_generic, msg ptr[in, msghdr_SMC_GEN_NETLINK_auto[SMC_NETLINK_DISABLE_SEID, smc_gen_nl_policy$auto_smc_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_SMC_NETLINK_DUMP_HS_LIMITATION(fd sock_nl_generic, msg ptr[in, msghdr_SMC_GEN_NETLINK_auto[SMC_NETLINK_DUMP_HS_LIMITATION, smc_gen_nl_policy$auto_smc_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_SMC_NETLINK_DUMP_SEID(fd sock_nl_generic, msg ptr[in, msghdr_SMC_GEN_NETLINK_auto[SMC_NETLINK_DUMP_SEID, smc_gen_nl_policy$auto_smc_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_SMC_NETLINK_DUMP_UEID(fd sock_nl_generic, msg ptr[in, msghdr_SMC_GEN_NETLINK_auto[SMC_NETLINK_DUMP_UEID, smc_gen_nl_policy$auto_smc_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_SMC_NETLINK_ENABLE_HS_LIMITATION(fd sock_nl_generic, msg ptr[in, msghdr_SMC_GEN_NETLINK_auto[SMC_NETLINK_ENABLE_HS_LIMITATION, smc_gen_nl_policy$auto_smc_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_SMC_NETLINK_ENABLE_SEID(fd sock_nl_generic, msg ptr[in, msghdr_SMC_GEN_NETLINK_auto[SMC_NETLINK_ENABLE_SEID, smc_gen_nl_policy$auto_smc_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_SMC_NETLINK_FLUSH_UEID(fd sock_nl_generic, msg ptr[in, msghdr_SMC_GEN_NETLINK_auto[SMC_NETLINK_FLUSH_UEID, smc_gen_nl_policy$auto_smc_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_SMC_NETLINK_GET_DEV_SMCD(fd sock_nl_generic, msg ptr[in, msghdr_SMC_GEN_NETLINK_auto[SMC_NETLINK_GET_DEV_SMCD, smc_gen_nl_policy$auto_smc_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_SMC_NETLINK_GET_DEV_SMCR(fd sock_nl_generic, msg ptr[in, msghdr_SMC_GEN_NETLINK_auto[SMC_NETLINK_GET_DEV_SMCR, smc_gen_nl_policy$auto_smc_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_SMC_NETLINK_GET_FBACK_STATS(fd sock_nl_generic, msg ptr[in, msghdr_SMC_GEN_NETLINK_auto[SMC_NETLINK_GET_FBACK_STATS, smc_gen_nl_policy$auto_smc_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_SMC_NETLINK_GET_LGR_SMCD(fd sock_nl_generic, msg ptr[in, msghdr_SMC_GEN_NETLINK_auto[SMC_NETLINK_GET_LGR_SMCD, smc_gen_nl_policy$auto_smc_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_SMC_NETLINK_GET_LGR_SMCR(fd sock_nl_generic, msg ptr[in, msghdr_SMC_GEN_NETLINK_auto[SMC_NETLINK_GET_LGR_SMCR, smc_gen_nl_policy$auto_smc_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_SMC_NETLINK_GET_LINK_SMCR(fd sock_nl_generic, msg ptr[in, msghdr_SMC_GEN_NETLINK_auto[SMC_NETLINK_GET_LINK_SMCR, smc_gen_nl_policy$auto_smc_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_SMC_NETLINK_GET_STATS(fd sock_nl_generic, msg ptr[in, msghdr_SMC_GEN_NETLINK_auto[SMC_NETLINK_GET_STATS, smc_gen_nl_policy$auto_smc_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_SMC_NETLINK_GET_SYS_INFO(fd sock_nl_generic, msg ptr[in, msghdr_SMC_GEN_NETLINK_auto[SMC_NETLINK_GET_SYS_INFO, smc_gen_nl_policy$auto_smc_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_SMC_NETLINK_REMOVE_UEID(fd sock_nl_generic, msg ptr[in, msghdr_SMC_GEN_NETLINK_auto[SMC_NETLINK_REMOVE_UEID, smc_gen_ueid_policy$auto_smc_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_SMC_PNETID_ADD(fd sock_nl_generic, msg ptr[in, msghdr_SMC_PNETID_auto[SMC_PNETID_ADD, smc_pnet_policy$auto_smc_pnet]], f flags[send_flags]) (automatic)
sendmsg$auto_SMC_PNETID_DEL(fd sock_nl_generic, msg ptr[in, msghdr_SMC_PNETID_auto[SMC_PNETID_DEL, smc_pnet_policy$auto_smc_pnet]], f flags[send_flags]) (automatic)
sendmsg$auto_SMC_PNETID_FLUSH(fd sock_nl_generic, msg ptr[in, msghdr_SMC_PNETID_auto[SMC_PNETID_FLUSH, smc_pnet_policy$auto_smc_pnet]], f flags[send_flags]) (automatic)
sendmsg$auto_SMC_PNETID_GET(fd sock_nl_generic, msg ptr[in, msghdr_SMC_PNETID_auto[SMC_PNETID_GET, smc_pnet_policy$auto_smc_pnet]], f flags[send_flags]) (automatic)
sendmsg$auto_TASKSTATS_CMD_GET(fd sock_nl_generic, msg ptr[in, msghdr_TASKSTATS_auto[TASKSTATS_CMD_GET, taskstats_cmd_get_policy$auto_taskstats]], f flags[send_flags]) (automatic)
sendmsg$auto_TCP_METRICS_CMD_DEL(fd sock_nl_generic, msg ptr[in, msghdr_tcp_metrics_auto[TCP_METRICS_CMD_DEL, tcp_metrics_nl_policy$auto_tcp_metrics]], f flags[send_flags]) (automatic)
sendmsg$auto_TCP_METRICS_CMD_GET(fd sock_nl_generic, msg ptr[in, msghdr_tcp_metrics_auto[TCP_METRICS_CMD_GET, tcp_metrics_nl_policy$auto_tcp_metrics]], f flags[send_flags]) (automatic)
sendmsg$auto_THERMAL_GENL_CMD_CDEV_GET(fd sock_nl_generic, msg ptr[in, msghdr_thermal_auto[THERMAL_GENL_CMD_CDEV_GET, thermal_genl_policy$auto_thermal_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_THERMAL_GENL_CMD_THRESHOLD_ADD(fd sock_nl_generic, msg ptr[in, msghdr_thermal_auto[THERMAL_GENL_CMD_THRESHOLD_ADD, thermal_genl_policy$auto_thermal_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_THERMAL_GENL_CMD_THRESHOLD_DELETE(fd sock_nl_generic, msg ptr[in, msghdr_thermal_auto[THERMAL_GENL_CMD_THRESHOLD_DELETE, thermal_genl_policy$auto_thermal_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_THERMAL_GENL_CMD_THRESHOLD_FLUSH(fd sock_nl_generic, msg ptr[in, msghdr_thermal_auto[THERMAL_GENL_CMD_THRESHOLD_FLUSH, thermal_genl_policy$auto_thermal_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_THERMAL_GENL_CMD_THRESHOLD_GET(fd sock_nl_generic, msg ptr[in, msghdr_thermal_auto[THERMAL_GENL_CMD_THRESHOLD_GET, thermal_genl_policy$auto_thermal_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_THERMAL_GENL_CMD_TZ_GET_GOV(fd sock_nl_generic, msg ptr[in, msghdr_thermal_auto[THERMAL_GENL_CMD_TZ_GET_GOV, thermal_genl_policy$auto_thermal_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_THERMAL_GENL_CMD_TZ_GET_ID(fd sock_nl_generic, msg ptr[in, msghdr_thermal_auto[THERMAL_GENL_CMD_TZ_GET_ID, thermal_genl_policy$auto_thermal_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_THERMAL_GENL_CMD_TZ_GET_TEMP(fd sock_nl_generic, msg ptr[in, msghdr_thermal_auto[THERMAL_GENL_CMD_TZ_GET_TEMP, thermal_genl_policy$auto_thermal_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_THERMAL_GENL_CMD_TZ_GET_TRIP(fd sock_nl_generic, msg ptr[in, msghdr_thermal_auto[THERMAL_GENL_CMD_TZ_GET_TRIP, thermal_genl_policy$auto_thermal_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_TIPC_NL_ADDR_LEGACY_GET(fd sock_nl_generic, msg ptr[in, msghdr_TIPCv2_auto[TIPC_NL_ADDR_LEGACY_GET, tipc_nl_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_TIPC_NL_BEARER_ADD(fd sock_nl_generic, msg ptr[in, msghdr_TIPCv2_auto[TIPC_NL_BEARER_ADD, tipc_nl_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_TIPC_NL_BEARER_DISABLE(fd sock_nl_generic, msg ptr[in, msghdr_TIPCv2_auto[TIPC_NL_BEARER_DISABLE, tipc_nl_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_TIPC_NL_BEARER_ENABLE(fd sock_nl_generic, msg ptr[in, msghdr_TIPCv2_auto[TIPC_NL_BEARER_ENABLE, tipc_nl_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_TIPC_NL_BEARER_GET(fd sock_nl_generic, msg ptr[in, msghdr_TIPCv2_auto[TIPC_NL_BEARER_GET, tipc_nl_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_TIPC_NL_BEARER_SET(fd sock_nl_generic, msg ptr[in, msghdr_TIPCv2_auto[TIPC_NL_BEARER_SET, tipc_nl_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_TIPC_NL_KEY_FLUSH(fd sock_nl_generic, msg ptr[in, msghdr_TIPCv2_auto[TIPC_NL_KEY_FLUSH, tipc_nl_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_TIPC_NL_KEY_SET(fd sock_nl_generic, msg ptr[in, msghdr_TIPCv2_auto[TIPC_NL_KEY_SET, tipc_nl_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_TIPC_NL_LINK_GET(fd sock_nl_generic, msg ptr[in, msghdr_TIPCv2_auto[TIPC_NL_LINK_GET, tipc_nl_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_TIPC_NL_LINK_RESET_STATS(fd sock_nl_generic, msg ptr[in, msghdr_TIPCv2_auto[TIPC_NL_LINK_RESET_STATS, tipc_nl_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_TIPC_NL_LINK_SET(fd sock_nl_generic, msg ptr[in, msghdr_TIPCv2_auto[TIPC_NL_LINK_SET, tipc_nl_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_TIPC_NL_MEDIA_GET(fd sock_nl_generic, msg ptr[in, msghdr_TIPCv2_auto[TIPC_NL_MEDIA_GET, tipc_nl_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_TIPC_NL_MEDIA_SET(fd sock_nl_generic, msg ptr[in, msghdr_TIPCv2_auto[TIPC_NL_MEDIA_SET, tipc_nl_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_TIPC_NL_MON_GET(fd sock_nl_generic, msg ptr[in, msghdr_TIPCv2_auto[TIPC_NL_MON_GET, tipc_nl_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_TIPC_NL_MON_PEER_GET(fd sock_nl_generic, msg ptr[in, msghdr_TIPCv2_auto[TIPC_NL_MON_PEER_GET, tipc_nl_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_TIPC_NL_MON_SET(fd sock_nl_generic, msg ptr[in, msghdr_TIPCv2_auto[TIPC_NL_MON_SET, tipc_nl_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_TIPC_NL_NAME_TABLE_GET(fd sock_nl_generic, msg ptr[in, msghdr_TIPCv2_auto[TIPC_NL_NAME_TABLE_GET, tipc_nl_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_TIPC_NL_NET_GET(fd sock_nl_generic, msg ptr[in, msghdr_TIPCv2_auto[TIPC_NL_NET_GET, tipc_nl_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_TIPC_NL_NET_SET(fd sock_nl_generic, msg ptr[in, msghdr_TIPCv2_auto[TIPC_NL_NET_SET, tipc_nl_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_TIPC_NL_NODE_GET(fd sock_nl_generic, msg ptr[in, msghdr_TIPCv2_auto[TIPC_NL_NODE_GET, tipc_nl_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_TIPC_NL_PEER_REMOVE(fd sock_nl_generic, msg ptr[in, msghdr_TIPCv2_auto[TIPC_NL_PEER_REMOVE, tipc_nl_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_TIPC_NL_PUBL_GET(fd sock_nl_generic, msg ptr[in, msghdr_TIPCv2_auto[TIPC_NL_PUBL_GET, tipc_nl_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_TIPC_NL_SOCK_GET(fd sock_nl_generic, msg ptr[in, msghdr_TIPCv2_auto[TIPC_NL_SOCK_GET, tipc_nl_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_TIPC_NL_UDP_GET_REMOTEIP(fd sock_nl_generic, msg ptr[in, msghdr_TIPCv2_auto[TIPC_NL_UDP_GET_REMOTEIP, tipc_nl_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_VDPA_CMD_DEV_ATTR_SET(fd sock_nl_generic, msg ptr[in, msghdr_vdpa_auto[VDPA_CMD_DEV_ATTR_SET, vdpa_nl_policy$auto_vdpa]], f flags[send_flags]) (automatic)
sendmsg$auto_VDPA_CMD_DEV_CONFIG_GET(fd sock_nl_generic, msg ptr[in, msghdr_vdpa_auto[VDPA_CMD_DEV_CONFIG_GET, vdpa_nl_policy$auto_vdpa]], f flags[send_flags]) (automatic)
sendmsg$auto_VDPA_CMD_DEV_DEL(fd sock_nl_generic, msg ptr[in, msghdr_vdpa_auto[VDPA_CMD_DEV_DEL, vdpa_nl_policy$auto_vdpa]], f flags[send_flags]) (automatic)
sendmsg$auto_VDPA_CMD_DEV_GET(fd sock_nl_generic, msg ptr[in, msghdr_vdpa_auto[VDPA_CMD_DEV_GET, vdpa_nl_policy$auto_vdpa]], f flags[send_flags]) (automatic)
sendmsg$auto_VDPA_CMD_DEV_NEW(fd sock_nl_generic, msg ptr[in, msghdr_vdpa_auto[VDPA_CMD_DEV_NEW, vdpa_nl_policy$auto_vdpa]], f flags[send_flags]) (automatic)
sendmsg$auto_VDPA_CMD_DEV_VSTATS_GET(fd sock_nl_generic, msg ptr[in, msghdr_vdpa_auto[VDPA_CMD_DEV_VSTATS_GET, vdpa_nl_policy$auto_vdpa]], f flags[send_flags]) (automatic)
sendmsg$auto_VDPA_CMD_MGMTDEV_GET(fd sock_nl_generic, msg ptr[in, msghdr_vdpa_auto[VDPA_CMD_MGMTDEV_GET, vdpa_nl_policy$auto_vdpa]], f flags[send_flags]) (automatic)
sendmsg$auto_WG_CMD_GET_DEVICE(fd sock_nl_generic, msg ptr[in, msghdr_wireguard_auto[WG_CMD_GET_DEVICE, device_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendmsg$auto_WG_CMD_SET_DEVICE(fd sock_nl_generic, msg ptr[in, msghdr_wireguard_auto[WG_CMD_SET_DEVICE, device_policy$auto_netlink]], f flags[send_flags]) (automatic)
sendto$auto(fd fd, buff ptr[inout, array[auto_todo]], len intptr, flags int32, addr ptr[inout, sockaddr$auto_record], addr_len int32) (automatic)
set_mempolicy$auto(mode int32, nmask ptr[in, intptr], maxnode intptr) (automatic)
set_mempolicy_home_node$auto(start intptr, len intptr, home_node intptr, flags intptr) (automatic)
set_robust_list$auto(head ptr[inout, robust_list_head$auto_record], len intptr) (automatic)
set_thread_area$auto(u_info ptr[inout, user_desc$auto_record]) (automatic)
set_tid_address$auto(tidptr ptr[inout, int32]) (automatic)
setdomainname$auto(name ptr[inout, string], len int32) (automatic)
setfsgid$auto(gid gid) (automatic)
setfsgid32$auto(gid gid) (automatic)
setfsuid$auto(uid uid) (automatic)
setfsuid32$auto(uid uid) (automatic)
setgid$auto(gid gid) (automatic)
setgid32$auto(gid gid) (automatic)
setgroups$auto(gidsetsize int32, grouplist ptr[inout, int32]) (automatic)
setgroups32$auto(gidsetsize int32, grouplist ptr[inout, int32]) (automatic)
sethostname$auto(name ptr[inout, string], len int32) (automatic)
setitimer$auto(which int32, value ptr[inout, __kernel_old_itimerval$auto_record], ovalue ptr[inout, __kernel_old_itimerval$auto_record]) (automatic)
setns$auto(fd fd, flags int32) (automatic)
setpgid$auto(pid pid, pgid pid) (automatic)
setpriority$auto(which int32, who int32, niceval int32) (automatic)
setregid$auto(rgid gid, egid gid) (automatic)
setregid32$auto(rgid gid, egid gid) (automatic)
setresgid$auto(rgid gid, egid gid, sgid gid) (automatic)
setresgid32$auto(rgid gid, egid gid, sgid gid) (automatic)
setresuid$auto(ruid uid, euid uid, suid uid) (automatic)
setresuid32$auto(ruid uid, euid uid, suid uid) (automatic)
setreuid$auto(ruid uid, euid uid) (automatic)
setreuid32$auto(ruid uid, euid uid) (automatic)
setrlimit$auto(_resource int32, rlim ptr[inout, rlimit$auto_record]) (automatic)
setsockopt$auto(fd fd, level int32, optname int32, optval ptr[inout, string], optlen int32) (automatic)
settimeofday$auto(tv ptr[inout, __kernel_old_timeval$auto_record], tz ptr[inout, timezone$auto_record]) (automatic)
setuid$auto(uid uid) (automatic)
setuid32$auto(uid uid) (automatic)
setxattr$auto(pathname ptr[in, filename], name ptr[in, string], value ptr[in, array[auto_todo]], size intptr, flags int32) (automatic)
setxattrat$auto(dfd fd_dir, pathname ptr[in, filename], at_flags int32, name ptr[in, string], uargs ptr[in, xattr_args$auto_record], usize intptr) (automatic)
shmat$auto(shmid int32, shmaddr ptr[inout, string], shmflg int32) (automatic)
shmctl$auto(shmid int32, cmd int32, buf ptr[inout, shmid_ds$auto_record]) (automatic)
shmdt$auto(shmaddr ptr[inout, string]) (automatic)
shmget$auto(key int32, size intptr, shmflg int32) (automatic)
shutdown$auto(fd fd, how int32) (automatic)
sigaltstack$auto(uss ptr[in, sigaltstack$auto_record], uoss ptr[inout, sigaltstack$auto_record]) (automatic)
signal$auto(sig int32, handler ptr[inout, ptr[in, auto_todo]]) (automatic)
signalfd$auto(ufd fd, user_mask ptr[inout, sigset_t$auto_record], sizemask intptr) (automatic)
signalfd4$auto(ufd fd, user_mask ptr[inout, sigset_t$auto_record], sizemask intptr, flags int32) (automatic)
sigpending$auto(uset ptr[inout, intptr]) (automatic)
sigprocmask$auto(how int32, nset ptr[inout, intptr], oset ptr[inout, intptr]) (automatic)
sigsuspend$auto(unused1 const[0], unused2 const[0], mask intptr) (automatic)
socket$auto(family int32, type int32, protocol int32) (automatic)
socketcall$auto(call int32, args ptr[inout, intptr]) (automatic)
socketpair$auto(family int32, type int32, protocol int32, usockvec ptr[inout, int32]) (automatic)
splice$auto(fd_in fd, off_in ptr[inout, int64], fd_out fd, off_out ptr[inout, int64], len intptr, flags int32) (automatic)
ssetmask$auto(newmask int32) (automatic)
stat$auto(filename ptr[in, filename], statbuf ptr[inout, stat$auto_record]) (automatic)
statfs$auto(pathname ptr[in, filename], buf ptr[inout, statfs$auto_record]) (automatic)
statfs64$auto(pathname ptr[in, filename], sz intptr, buf ptr[inout, statfs64$auto_record]) (automatic)
statmount$auto(req ptr[in, mnt_id_req$auto_record], buf ptr[inout, statmount$auto_record], bufsize intptr, flags int32) (automatic)
statx$auto(dfd fd_dir, filename ptr[in, filename], flags int32, mask int32, buffer ptr[inout, statx$auto_record]) (automatic)
stime$auto(tptr ptr[inout, int32]) (automatic)
swapoff$auto(specialfile ptr[in, string]) (automatic)
swapon$auto(specialfile ptr[in, string], swap_flags int32) (automatic)
symlink$auto(oldname ptr[in, filename], newname ptr[in, filename]) (automatic)
symlinkat$auto(oldname ptr[in, filename], newdfd fd_dir, newname ptr[in, filename]) (automatic)
sync_file_range$auto(fd fd, offset intptr, nbytes intptr, flags int32) (automatic)
sync_file_range2$auto(fd fd, flags int32, offset intptr, nbytes intptr) (automatic)
syncfs$auto(fd fd) (automatic)
sysfs$auto(option int32, arg1 intptr, arg2 intptr) (automatic)
sysinfo$auto(info ptr[inout, sysinfo$auto_record]) (automatic)
syslog$auto(type int32, buf ptr[inout, string], len int32) (automatic)
syz_genetlink_get_family_id$auto_802_15_4_MAC(name ptr[in, string["802.15.4 MAC"]], fd sock_nl_generic) genl_802_15_4_MAC_family_id_auto (automatic)
syz_genetlink_get_family_id$auto_HSR(name ptr[in, string["HSR"]], fd sock_nl_generic) genl_HSR_family_id_auto (automatic)
syz_genetlink_get_family_id$auto_IOAM6(name ptr[in, string["IOAM6"]], fd sock_nl_generic) genl_IOAM6_family_id_auto (automatic)
syz_genetlink_get_family_id$auto_IPVS(name ptr[in, string["IPVS"]], fd sock_nl_generic) genl_IPVS_family_id_auto (automatic)
syz_genetlink_get_family_id$auto_MAC80211_HWSIM(name ptr[in, string["MAC80211_HWSIM"]], fd sock_nl_generic) genl_MAC80211_HWSIM_family_id_auto (automatic)
syz_genetlink_get_family_id$auto_MAC802154_HWSIM(name ptr[in, string["MAC802154_HWSIM"]], fd sock_nl_generic) genl_MAC802154_HWSIM_family_id_auto (automatic)
syz_genetlink_get_family_id$auto_NCSI(name ptr[in, string["NCSI"]], fd sock_nl_generic) genl_NCSI_family_id_auto (automatic)
syz_genetlink_get_family_id$auto_NET_DM(name ptr[in, string["NET_DM"]], fd sock_nl_generic) genl_NET_DM_family_id_auto (automatic)
syz_genetlink_get_family_id$auto_NLBL_CALIPSO(name ptr[in, string["NLBL_CALIPSO"]], fd sock_nl_generic) genl_NLBL_CALIPSO_family_id_auto (automatic)
syz_genetlink_get_family_id$auto_NLBL_CIPSOv4(name ptr[in, string["NLBL_CIPSOv4"]], fd sock_nl_generic) genl_NLBL_CIPSOv4_family_id_auto (automatic)
syz_genetlink_get_family_id$auto_NLBL_MGMT(name ptr[in, string["NLBL_MGMT"]], fd sock_nl_generic) genl_NLBL_MGMT_family_id_auto (automatic)
syz_genetlink_get_family_id$auto_NLBL_UNLBL(name ptr[in, string["NLBL_UNLBL"]], fd sock_nl_generic) genl_NLBL_UNLBL_family_id_auto (automatic)
syz_genetlink_get_family_id$auto_SEG6(name ptr[in, string["SEG6"]], fd sock_nl_generic) genl_SEG6_family_id_auto (automatic)
syz_genetlink_get_family_id$auto_SMC_GEN_NETLINK(name ptr[in, string["SMC_GEN_NETLINK"]], fd sock_nl_generic) genl_SMC_GEN_NETLINK_family_id_auto (automatic)
syz_genetlink_get_family_id$auto_SMC_PNETID(name ptr[in, string["SMC_PNETID"]], fd sock_nl_generic) genl_SMC_PNETID_family_id_auto (automatic)
syz_genetlink_get_family_id$auto_TASKSTATS(name ptr[in, string["TASKSTATS"]], fd sock_nl_generic) genl_TASKSTATS_family_id_auto (automatic)
syz_genetlink_get_family_id$auto_TIPCv2(name ptr[in, string["TIPCv2"]], fd sock_nl_generic) genl_TIPCv2_family_id_auto (automatic)
syz_genetlink_get_family_id$auto_batadv(name ptr[in, string["batadv"]], fd sock_nl_generic) genl_batadv_family_id_auto (automatic)
syz_genetlink_get_family_id$auto_cifs(name ptr[in, string["cifs"]], fd sock_nl_generic) genl_cifs_family_id_auto (automatic)
syz_genetlink_get_family_id$auto_ethtool(name ptr[in, string["ethtool"]], fd sock_nl_generic) genl_ethtool_family_id_auto (automatic)
syz_genetlink_get_family_id$auto_gtp(name ptr[in, string["gtp"]], fd sock_nl_generic) genl_gtp_family_id_auto (automatic)
syz_genetlink_get_family_id$auto_handshake(name ptr[in, string["handshake"]], fd sock_nl_generic) genl_handshake_family_id_auto (automatic)
syz_genetlink_get_family_id$auto_ila(name ptr[in, string["ila"]], fd sock_nl_generic) genl_ila_family_id_auto (automatic)
syz_genetlink_get_family_id$auto_l2tp(name ptr[in, string["l2tp"]], fd sock_nl_generic) genl_l2tp_family_id_auto (automatic)
syz_genetlink_get_family_id$auto_macsec(name ptr[in, string["macsec"]], fd sock_nl_generic) genl_macsec_family_id_auto (automatic)
syz_genetlink_get_family_id$auto_nbd(name ptr[in, string["nbd"]], fd sock_nl_generic) genl_nbd_family_id_auto (automatic)
syz_genetlink_get_family_id$auto_net_shaper(name ptr[in, string["net-shaper"]], fd sock_nl_generic) genl_net_shaper_family_id_auto (automatic)
syz_genetlink_get_family_id$auto_netdev(name ptr[in, string["netdev"]], fd sock_nl_generic) genl_netdev_family_id_auto (automatic)
syz_genetlink_get_family_id$auto_nfc(name ptr[in, string["nfc"]], fd sock_nl_generic) genl_nfc_family_id_auto (automatic)
syz_genetlink_get_family_id$auto_nfsd(name ptr[in, string["nfsd"]], fd sock_nl_generic) genl_nfsd_family_id_auto (automatic)
syz_genetlink_get_family_id$auto_nl80211(name ptr[in, string["nl80211"]], fd sock_nl_generic) genl_nl80211_family_id_auto (automatic)
syz_genetlink_get_family_id$auto_nl802154(name ptr[in, string["nl802154"]], fd sock_nl_generic) genl_nl802154_family_id_auto (automatic)
syz_genetlink_get_family_id$auto_nlctrl(name ptr[in, string["nlctrl"]], fd sock_nl_generic) genl_nlctrl_family_id_auto (automatic)
syz_genetlink_get_family_id$auto_ovs_ct_limit(name ptr[in, string["ovs_ct_limit"]], fd sock_nl_generic) genl_ovs_ct_limit_family_id_auto (automatic)
syz_genetlink_get_family_id$auto_ovs_datapath(name ptr[in, string["ovs_datapath"]], fd sock_nl_generic) genl_ovs_datapath_family_id_auto (automatic)
syz_genetlink_get_family_id$auto_ovs_flow(name ptr[in, string["ovs_flow"]], fd sock_nl_generic) genl_ovs_flow_family_id_auto (automatic)
syz_genetlink_get_family_id$auto_ovs_meter(name ptr[in, string["ovs_meter"]], fd sock_nl_generic) genl_ovs_meter_family_id_auto (automatic)
syz_genetlink_get_family_id$auto_ovs_packet(name ptr[in, string["ovs_packet"]], fd sock_nl_generic) genl_ovs_packet_family_id_auto (automatic)
syz_genetlink_get_family_id$auto_ovs_vport(name ptr[in, string["ovs_vport"]], fd sock_nl_generic) genl_ovs_vport_family_id_auto (automatic)
syz_genetlink_get_family_id$auto_tcp_metrics(name ptr[in, string["tcp_metrics"]], fd sock_nl_generic) genl_tcp_metrics_family_id_auto (automatic)
syz_genetlink_get_family_id$auto_thermal(name ptr[in, string["thermal"]], fd sock_nl_generic) genl_thermal_family_id_auto (automatic)
syz_genetlink_get_family_id$auto_vdpa(name ptr[in, string["vdpa"]], fd sock_nl_generic) genl_vdpa_family_id_auto (automatic)
syz_genetlink_get_family_id$auto_wireguard(name ptr[in, string["wireguard"]], fd sock_nl_generic) genl_wireguard_family_id_auto (automatic)
tee$auto(fdin fd, fdout fd, len intptr, flags int32) (automatic)
tgkill$auto(tgid pid, pid pid, sig int32) (automatic)
time$auto(tloc ptr[inout, intptr]) (automatic)
timer_create$auto(which_clock int32, timer_event_spec ptr[inout, sigevent$auto_record], created_timer_id ptr[inout, int32]) (automatic)
timer_delete$auto(timer_id int32) (automatic)
timer_getoverrun$auto(timer_id int32) (automatic)
timer_gettime$auto(timer_id int32, setting ptr[inout, __kernel_itimerspec$auto_record]) (automatic)
timer_gettime64$auto(timer_id int32, setting ptr[inout, __kernel_itimerspec$auto_record]) (automatic)
timer_settime$auto(timer_id int32, flags int32, new_setting ptr[in, __kernel_itimerspec$auto_record], old_setting ptr[inout, __kernel_itimerspec$auto_record]) (automatic)
timer_settime64$auto(timer_id int32, flags int32, new_setting ptr[in, __kernel_itimerspec$auto_record], old_setting ptr[inout, __kernel_itimerspec$auto_record]) (automatic)
timerfd_create$auto(clockid int32, flags int32) (automatic)
timerfd_gettime$auto(ufd fd, otmr ptr[inout, __kernel_itimerspec$auto_record]) (automatic)
timerfd_gettime64$auto(ufd fd, otmr ptr[inout, __kernel_itimerspec$auto_record]) (automatic)
timerfd_settime$auto(ufd fd, flags int32, utmr ptr[in, __kernel_itimerspec$auto_record], otmr ptr[inout, __kernel_itimerspec$auto_record]) (automatic)
timerfd_settime64$auto(ufd fd, flags int32, utmr ptr[in, __kernel_itimerspec$auto_record], otmr ptr[inout, __kernel_itimerspec$auto_record]) (automatic)
times$auto(tbuf ptr[inout, tms$auto_record]) (automatic)
tkill$auto(pid pid, sig int32) (automatic)
truncate$auto(path ptr[in, filename], length intptr) (automatic)
truncate64$auto(filename ptr[in, filename], offset_low intptr, offset_high intptr) (automatic)
ugetrlimit$auto(_resource int32, rlim ptr[inout, rlimit$auto_record]) (automatic)
umask$auto(mask int32) (automatic)
umount$auto(name ptr[inout, string]) (automatic)
umount2$auto(name ptr[inout, string], flags int32) (automatic)
uname$auto(name ptr[inout, new_utsname$auto_record]) (automatic)
unlink$auto(pathname ptr[in, filename]) (automatic)
unlinkat$auto(dfd fd_dir, pathname ptr[in, filename], flag int32) (automatic)
unshare$auto(unshare_flags intptr) (automatic)
userfaultfd$auto(flags int32) (automatic)
ustat$auto(dev int32, ubuf ptr[inout, ustat$auto_record]) (automatic)
utime$auto(filename ptr[inout, filename], times ptr[inout, utimbuf$auto_record]) (automatic)
utimensat$auto(dfd fd_dir, filename ptr[in, filename], utimes ptr[inout, __kernel_timespec$auto_record], flags int32) (automatic)
utimensat_time64$auto(dfd fd_dir, filename ptr[in, filename], utimes ptr[inout, __kernel_timespec$auto_record], flags int32) (automatic)
utimes$auto(filename ptr[inout, filename], utimes ptr[inout, __kernel_old_timeval$auto_record]) (automatic)
vmsplice$auto(fd fd, uiov ptr[in, iovec$auto_record], nr_segs intptr, flags int32) (automatic)
wait4$auto(upid int32, stat_addr ptr[inout, int32], options int32, ru ptr[inout, rusage$auto_record]) (automatic)
waitid$auto(which int32, upid int32, infop ptr[inout, siginfo$auto_record], options int32, ru ptr[inout, rusage$auto_record]) (automatic)
waitpid$auto(pid pid, stat_addr ptr[inout, int32], options int32) (automatic)
write$auto(fd fd, buf ptr[in, string], count intptr) (automatic)
writev$auto(fd intptr, vec ptr[in, iovec$auto_record], vlen intptr) (automatic)

__aio_sigset$auto_record {
	sigmask		ptr[in, sigset_t$auto_record]
	sigsetsize	const[8, intptr]
}

__kernel_fd_set$auto_record {
	fds_bits	array[intptr, 16]
}

__kernel_itimerspec$auto_record {
	it_interval	__kernel_timespec$auto_record
	it_value	__kernel_timespec$auto_record
}

__kernel_old_itimerval$auto_record {
	it_interval	__kernel_old_timeval$auto_record
	it_value	__kernel_old_timeval$auto_record
}

__kernel_old_timeval$auto_record {
	tv_sec	intptr
	tv_usec	intptr
}

__kernel_sockaddr_storage$auto_record {
	__kernel_sockaddr_storage_0	__kernel_sockaddr_storage_0$auto_record
}

__kernel_sockaddr_storage_0$auto_record [
	__kernel_sockaddr_storage_0_0	__kernel_sockaddr_storage_0_0$auto_record
	__align				ptr[inout, array[auto_todo]]
]

__kernel_sockaddr_storage_0_0$auto_record {
	ss_family	int16
	__data		array[int8, 126]
}

__kernel_timespec$auto_record {
	tv_sec	int64
	tv_nsec	int64
}

__kernel_timex$auto_record {
	modes			int32
	__kernel_timex_1	const[0, int32]
	offset			int64
	freq			int64
	maxerror		int64
	esterror		int64
	status			int32
	__kernel_timex_7	const[0, int32]
	constant		int64
	precision		int64
	tolerance		int64
	time			__kernel_timex_timeval$auto_record
	tick			int64
	ppsfreq			int64
	jitter			int64
	shift			int32
	__kernel_timex_16	const[0, int32]
	stabil			int64
	jitcnt			int64
	calcnt			int64
	errcnt			int64
	stbcnt			int64
	tai			int32
	__kernel_timex_23	const[0, int32]
	__kernel_timex_24	const[0, int32]
	__kernel_timex_25	const[0, int32]
	__kernel_timex_26	const[0, int32]
	__kernel_timex_27	const[0, int32]
	__kernel_timex_28	const[0, int32]
	__kernel_timex_29	const[0, int32]
	__kernel_timex_30	const[0, int32]
	__kernel_timex_31	const[0, int32]
	__kernel_timex_32	const[0, int32]
	__kernel_timex_33	const[0, int32]
}

__kernel_timex_timeval$auto_record {
	tv_sec	int64
	tv_usec	int64
}

__old_kernel_stat$auto_record {
	st_dev		int16
	st_ino		int16
	st_mode		int16
	st_nlink	int16
	st_uid		int16
	st_gid		int16
	st_rdev		int16
	st_size		int32
	st_atime	int32
	st_mtime	int32
	st_ctime	int32
}

__sifields$auto_record [
	_kill		__sifields__kill$auto_record
	_timer		__sifields__timer$auto_record
	_rt		__sifields__rt$auto_record
	_sigchld	__sifields__sigchld$auto_record
	_sigfault	__sifields__sigfault$auto_record
	_sigpoll	__sifields__sigpoll$auto_record
	_sigsys		__sifields__sigsys$auto_record
]

__sifields__kill$auto_record {
	_pid	pid
	_uid	uid
}

__sifields__rt$auto_record {
	_pid	pid
	_uid	uid
	_sigval	sigval$auto_record
}

__sifields__sigchld$auto_record {
	_pid	pid
	_uid	uid
	_status	int32
	_utime	intptr
	_stime	intptr
}

__sifields__sigfault$auto_record {
	_addr			ptr[inout, array[auto_todo]]
	__sifields__sigfault_1	__sifields__sigfault_1$auto_record
}

__sifields__sigfault_1$auto_record [
	_trapno		int32
	_addr_lsb	int16
	_addr_bnd	__sifields__sigfault_1__addr_bnd$auto_record
	_addr_pkey	__sifields__sigfault_1__addr_pkey$auto_record
	_perf		__sifields__sigfault_1__perf$auto_record
]

__sifields__sigfault_1__addr_bnd$auto_record {
	_dummy_bnd	array[int8, 8]
	_lower		ptr[inout, array[auto_todo]]
	_upper		ptr[inout, array[auto_todo]]
}

__sifields__sigfault_1__addr_pkey$auto_record {
	_dummy_pkey	array[int8, 8]
	_pkey		int32
}

__sifields__sigfault_1__perf$auto_record {
	_data	intptr
	_type	int32
	_flags	int32
}

__sifields__sigpoll$auto_record {
	_band	intptr
	_fd	fd
}

__sifields__sigsys$auto_record {
	_call_addr	ptr[inout, array[auto_todo]]
	_syscall	int32
	_arch		int32
}

__sifields__timer$auto_record {
	_tid		pid
	_overrun	int32
	_sigval		sigval$auto_record
	_sys_private	int32
}

__user_cap_data_struct$auto_record {
	effective	int32
	permitted	int32
	inheritable	int32
}

__user_cap_header_struct$auto_record {
	version	int32
	pid	pid
}

adf_user_cfg_ctl_data$auto_record {
	adf_user_cfg_ctl_data_0	adf_user_cfg_ctl_data_0$auto_record
	device_id		int8
} [packed]

adf_user_cfg_ctl_data_0$auto_record [
	config_section	ptr[inout, adf_user_cfg_section$auto_record]
	padding		const[0, int64]
]

adf_user_cfg_key_val$auto_record {
	key			array[int8, 64]
	val			array[int8, 64]
	adf_user_cfg_key_val_2	adf_user_cfg_key_val_2$auto_record
	type			flags[auto_adf_cfg_val_type, int32]
} [packed]

adf_user_cfg_key_val_2$auto_record [
	next		ptr[inout, adf_user_cfg_key_val$auto_record, opt]
	padding3	const[0, int64]
]

adf_user_cfg_section$auto_record {
	name			array[int8, 64]
	adf_user_cfg_section_1	adf_user_cfg_section_1$auto_record
	adf_user_cfg_section_2	adf_user_cfg_section_2$auto_record
} [packed]

adf_user_cfg_section_1$auto_record [
	params		ptr[inout, adf_user_cfg_key_val$auto_record]
	padding1	const[0, int64]
]

adf_user_cfg_section_2$auto_record [
	next		ptr[inout, adf_user_cfg_section$auto_record, opt]
	padding3	const[0, int64]
]

audio_buf_info$auto_record {
	fragments	int32
	fragstotal	int32
	fragsize	int32
	bytes		int32
}

batadv_netlink_policy$auto_netlink [
	BATADV_ATTR_VERSION				nlattr[BATADV_ATTR_VERSION, stringnoz]
	BATADV_ATTR_ALGO_NAME				nlattr[BATADV_ATTR_ALGO_NAME, stringnoz]
	BATADV_ATTR_MESH_IFINDEX			nlattr[BATADV_ATTR_MESH_IFINDEX, ifindex]
	BATADV_ATTR_MESH_IFNAME				nlattr[BATADV_ATTR_MESH_IFNAME, devname]
	BATADV_ATTR_MESH_ADDRESS			nlattr[BATADV_ATTR_MESH_ADDRESS, array[int8, 6]]
	BATADV_ATTR_HARD_IFINDEX			nlattr[BATADV_ATTR_HARD_IFINDEX, ifindex]
	BATADV_ATTR_HARD_IFNAME				nlattr[BATADV_ATTR_HARD_IFNAME, devname]
	BATADV_ATTR_HARD_ADDRESS			nlattr[BATADV_ATTR_HARD_ADDRESS, array[int8, 6]]
	BATADV_ATTR_ORIG_ADDRESS			nlattr[BATADV_ATTR_ORIG_ADDRESS, array[int8, 6]]
	BATADV_ATTR_TPMETER_RESULT			nlattr[BATADV_ATTR_TPMETER_RESULT, int8]
	BATADV_ATTR_TPMETER_TEST_TIME			nlattr[BATADV_ATTR_TPMETER_TEST_TIME, int32]
	BATADV_ATTR_TPMETER_BYTES			nlattr[BATADV_ATTR_TPMETER_BYTES, int64]
	BATADV_ATTR_TPMETER_COOKIE			nlattr[BATADV_ATTR_TPMETER_COOKIE, int32]
	BATADV_ATTR_ACTIVE				nlattr[BATADV_ATTR_ACTIVE, void]
	BATADV_ATTR_TT_ADDRESS				nlattr[BATADV_ATTR_TT_ADDRESS, array[int8, 6]]
	BATADV_ATTR_TT_TTVN				nlattr[BATADV_ATTR_TT_TTVN, int8]
	BATADV_ATTR_TT_LAST_TTVN			nlattr[BATADV_ATTR_TT_LAST_TTVN, int8]
	BATADV_ATTR_TT_CRC32				nlattr[BATADV_ATTR_TT_CRC32, int32]
	BATADV_ATTR_TT_VID				nlattr[BATADV_ATTR_TT_VID, int16]
	BATADV_ATTR_TT_FLAGS				nlattr[BATADV_ATTR_TT_FLAGS, int32]
	BATADV_ATTR_FLAG_BEST				nlattr[BATADV_ATTR_FLAG_BEST, void]
	BATADV_ATTR_LAST_SEEN_MSECS			nlattr[BATADV_ATTR_LAST_SEEN_MSECS, int32]
	BATADV_ATTR_NEIGH_ADDRESS			nlattr[BATADV_ATTR_NEIGH_ADDRESS, array[int8, 6]]
	BATADV_ATTR_TQ					nlattr[BATADV_ATTR_TQ, int8]
	BATADV_ATTR_THROUGHPUT				nlattr[BATADV_ATTR_THROUGHPUT, int32]
	BATADV_ATTR_BANDWIDTH_UP			nlattr[BATADV_ATTR_BANDWIDTH_UP, int32]
	BATADV_ATTR_BANDWIDTH_DOWN			nlattr[BATADV_ATTR_BANDWIDTH_DOWN, int32]
	BATADV_ATTR_ROUTER				nlattr[BATADV_ATTR_ROUTER, array[int8, 6]]
	BATADV_ATTR_BLA_OWN				nlattr[BATADV_ATTR_BLA_OWN, void]
	BATADV_ATTR_BLA_ADDRESS				nlattr[BATADV_ATTR_BLA_ADDRESS, array[int8, 6]]
	BATADV_ATTR_BLA_VID				nlattr[BATADV_ATTR_BLA_VID, int16]
	BATADV_ATTR_BLA_BACKBONE			nlattr[BATADV_ATTR_BLA_BACKBONE, array[int8, 6]]
	BATADV_ATTR_BLA_CRC				nlattr[BATADV_ATTR_BLA_CRC, int16]
	BATADV_ATTR_DAT_CACHE_IP4ADDRESS		nlattr[BATADV_ATTR_DAT_CACHE_IP4ADDRESS, int32]
	BATADV_ATTR_DAT_CACHE_HWADDRESS			nlattr[BATADV_ATTR_DAT_CACHE_HWADDRESS, array[int8, 6]]
	BATADV_ATTR_DAT_CACHE_VID			nlattr[BATADV_ATTR_DAT_CACHE_VID, int16]
	BATADV_ATTR_MCAST_FLAGS				nlattr[BATADV_ATTR_MCAST_FLAGS, int32]
	BATADV_ATTR_MCAST_FLAGS_PRIV			nlattr[BATADV_ATTR_MCAST_FLAGS_PRIV, int32]
	BATADV_ATTR_VLANID				nlattr[BATADV_ATTR_VLANID, int16]
	BATADV_ATTR_AGGREGATED_OGMS_ENABLED		nlattr[BATADV_ATTR_AGGREGATED_OGMS_ENABLED, bool8]
	BATADV_ATTR_AP_ISOLATION_ENABLED		nlattr[BATADV_ATTR_AP_ISOLATION_ENABLED, bool8]
	BATADV_ATTR_ISOLATION_MARK			nlattr[BATADV_ATTR_ISOLATION_MARK, int32]
	BATADV_ATTR_ISOLATION_MASK			nlattr[BATADV_ATTR_ISOLATION_MASK, int32]
	BATADV_ATTR_BONDING_ENABLED			nlattr[BATADV_ATTR_BONDING_ENABLED, bool8]
	BATADV_ATTR_BRIDGE_LOOP_AVOIDANCE_ENABLED	nlattr[BATADV_ATTR_BRIDGE_LOOP_AVOIDANCE_ENABLED, bool8]
	BATADV_ATTR_DISTRIBUTED_ARP_TABLE_ENABLED	nlattr[BATADV_ATTR_DISTRIBUTED_ARP_TABLE_ENABLED, bool8]
	BATADV_ATTR_FRAGMENTATION_ENABLED		nlattr[BATADV_ATTR_FRAGMENTATION_ENABLED, bool8]
	BATADV_ATTR_GW_BANDWIDTH_DOWN			nlattr[BATADV_ATTR_GW_BANDWIDTH_DOWN, int32]
	BATADV_ATTR_GW_BANDWIDTH_UP			nlattr[BATADV_ATTR_GW_BANDWIDTH_UP, int32]
	BATADV_ATTR_GW_MODE				nlattr[BATADV_ATTR_GW_MODE, int8]
	BATADV_ATTR_GW_SEL_CLASS			nlattr[BATADV_ATTR_GW_SEL_CLASS, int32]
	BATADV_ATTR_HOP_PENALTY				nlattr[BATADV_ATTR_HOP_PENALTY, int8]
	BATADV_ATTR_LOG_LEVEL				nlattr[BATADV_ATTR_LOG_LEVEL, int32]
	BATADV_ATTR_MULTICAST_FORCEFLOOD_ENABLED	nlattr[BATADV_ATTR_MULTICAST_FORCEFLOOD_ENABLED, bool8]
	BATADV_ATTR_NETWORK_CODING_ENABLED		nlattr[BATADV_ATTR_NETWORK_CODING_ENABLED, bool8]
	BATADV_ATTR_ORIG_INTERVAL			nlattr[BATADV_ATTR_ORIG_INTERVAL, int32]
	BATADV_ATTR_ELP_INTERVAL			nlattr[BATADV_ATTR_ELP_INTERVAL, int32]
	BATADV_ATTR_THROUGHPUT_OVERRIDE			nlattr[BATADV_ATTR_THROUGHPUT_OVERRIDE, int32]
	BATADV_ATTR_MULTICAST_FANOUT			nlattr[BATADV_ATTR_MULTICAST_FANOUT, int32]
] [varlen]

bpf_attr$auto_record [
	bpf_attr_0	bpf_attr_0$auto_record
	bpf_attr_1	bpf_attr_1$auto_record
	batch		bpf_attr_batch$auto_record
	bpf_attr_3	bpf_attr_3$auto_record
	bpf_attr_4	bpf_attr_4$auto_record
	bpf_attr_5	bpf_attr_5$auto_record
	test		bpf_attr_test$auto_record
	bpf_attr_7	bpf_attr_7$auto_record
	info		bpf_attr_info$auto_record
	query		bpf_attr_query$auto_record
	raw_tracepoint	bpf_attr_raw_tracepoint$auto_record
	bpf_attr_11	bpf_attr_11$auto_record
	task_fd_query	bpf_attr_task_fd_query$auto_record
	link_create	bpf_attr_link_create$auto_record
	link_update	bpf_attr_link_update$auto_record
	link_detach	bpf_attr_link_detach$auto_record
	enable_stats	bpf_attr_enable_stats$auto_record
	iter_create	bpf_attr_iter_create$auto_record
	prog_bind_map	bpf_attr_prog_bind_map$auto_record
	token_create	bpf_attr_token_create$auto_record
]

bpf_attr_0$auto_record {
	map_type			int32
	key_size			int32
	value_size			int32
	max_entries			int32
	map_flags			int32
	inner_map_fd			fd
	numa_node			int32
	map_name			array[int8, 16]
	map_ifindex			ifindex
	btf_fd				fd
	btf_key_type_id			int32
	btf_value_type_id		int32
	btf_vmlinux_value_type_id	int32
	map_extra			int64
	value_type_btf_obj_fd		fd
	map_token_fd			fd
}

bpf_attr_1$auto_record {
	map_fd		fd
	key		int64
	bpf_attr_1_2	bpf_attr_1_2$auto_record
	flags		int64
}

bpf_attr_11$auto_record {
	btf			int64
	btf_log_buf		int64
	btf_size		int32
	btf_log_size		int32
	btf_log_level		int32
	btf_log_true_size	int32
	btf_flags		int32
	btf_token_fd		fd
}

bpf_attr_1_2$auto_record [
	value		int64
	next_key	int64
]

bpf_attr_3$auto_record {
	prog_type		int32
	insn_cnt		int32
	insns			int64
	license			int64
	log_level		int32
	log_size		int32
	log_buf			int64
	kern_version		int32
	prog_flags		int32
	prog_name		array[int8, 16]
	prog_ifindex		ifindex
	expected_attach_type	int32
	prog_btf_fd		fd
	func_info_rec_size	int32
	func_info		int64
	func_info_cnt		int32
	line_info_rec_size	int32
	line_info		int64
	line_info_cnt		int32
	attach_btf_id		int32
	bpf_attr_3_20		bpf_attr_3_20$auto_record
	core_relo_cnt		int32
	fd_array		int64
	core_relos		int64
	core_relo_rec_size	int32
	log_true_size		int32
	prog_token_fd		fd
}

bpf_attr_3_20$auto_record [
	attach_prog_fd		fd
	attach_btf_obj_fd	fd
]

bpf_attr_4$auto_record {
	pathname	int64
	bpf_fd		fd
	file_flags	int32
	path_fd		fd
}

bpf_attr_5$auto_record {
	bpf_attr_5_0		bpf_attr_5_0$auto_record
	attach_bpf_fd		fd
	attach_type		int32
	attach_flags		int32
	replace_bpf_fd		fd
	bpf_attr_5_5		bpf_attr_5_5$auto_record
	expected_revision	int64
}

bpf_attr_5_0$auto_record [
	target_fd	fd
	target_ifindex	ifindex
]

bpf_attr_5_5$auto_record [
	relative_fd	fd
	relative_id	int32
]

bpf_attr_7$auto_record {
	bpf_attr_7_0	bpf_attr_7_0$auto_record
	next_id		int32
	open_flags	int32
}

bpf_attr_7_0$auto_record [
	start_id	int32
	prog_id		int32
	map_id		int32
	btf_id		int32
	link_id		int32
]

bpf_attr_batch$auto_record {
	in_batch	int64
	out_batch	int64
	keys		int64
	values		int64
	count		int32
	map_fd		fd
	elem_flags	int64
	flags		int64
}

bpf_attr_enable_stats$auto_record {
	type	int32
}

bpf_attr_info$auto_record {
	bpf_fd		fd
	info_len	int32
	info		int64
}

bpf_attr_iter_create$auto_record {
	link_fd	fd
	flags	int32
}

bpf_attr_link_create$auto_record {
	bpf_attr_link_create_0	bpf_attr_link_create_0$auto_record
	bpf_attr_link_create_1	bpf_attr_link_create_1$auto_record
	attach_type		int32
	flags			int32
	bpf_attr_link_create_4	bpf_attr_link_create_4$auto_record
}

bpf_attr_link_create_0$auto_record [
	prog_fd	fd
	map_fd	fd
]

bpf_attr_link_create_1$auto_record [
	target_fd	fd
	target_ifindex	ifindex
]

bpf_attr_link_create_4$auto_record [
	target_btf_id			int32
	bpf_attr_link_create_4_1	bpf_attr_link_create_4_1$auto_record
	perf_event			bpf_attr_link_create_4_perf_event$auto_record
	kprobe_multi			bpf_attr_link_create_4_kprobe_multi$auto_record
	tracing				bpf_attr_link_create_4_tracing$auto_record
	netfilter			bpf_attr_link_create_4_netfilter$auto_record
	tcx				bpf_attr_link_create_4_tcx$auto_record
	uprobe_multi			bpf_attr_link_create_4_uprobe_multi$auto_record
	netkit				bpf_attr_link_create_4_netkit$auto_record
]

bpf_attr_link_create_4_1$auto_record {
	iter_info	int64
	iter_info_len	int32
}

bpf_attr_link_create_4_kprobe_multi$auto_record {
	flags	int32
	cnt	int32
	syms	int64
	addrs	int64
	cookies	int64
}

bpf_attr_link_create_4_netfilter$auto_record {
	pf		int32
	hooknum		int32
	priority	int32
	flags		int32
}

bpf_attr_link_create_4_netkit$auto_record {
	bpf_attr_link_create_4_netkit_0	bpf_attr_link_create_4_netkit_0$auto_record
	expected_revision		int64
}

bpf_attr_link_create_4_netkit_0$auto_record [
	relative_fd	fd
	relative_id	int32
]

bpf_attr_link_create_4_perf_event$auto_record {
	bpf_cookie	int64
}

bpf_attr_link_create_4_tcx$auto_record {
	bpf_attr_link_create_4_tcx_0	bpf_attr_link_create_4_tcx_0$auto_record
	expected_revision		int64
}

bpf_attr_link_create_4_tcx_0$auto_record [
	relative_fd	fd
	relative_id	int32
]

bpf_attr_link_create_4_tracing$auto_record {
	target_btf_id	int32
	cookie		int64
}

bpf_attr_link_create_4_uprobe_multi$auto_record {
	path		int64
	offsets		int64
	ref_ctr_offsets	int64
	cookies		int64
	cnt		int32
	flags		int32
	pid		pid
}

bpf_attr_link_detach$auto_record {
	link_fd	fd
}

bpf_attr_link_update$auto_record {
	link_fd			fd
	bpf_attr_link_update_1	bpf_attr_link_update_1$auto_record
	flags			int32
	bpf_attr_link_update_3	bpf_attr_link_update_3$auto_record
}

bpf_attr_link_update_1$auto_record [
	new_prog_fd	fd
	new_map_fd	fd
]

bpf_attr_link_update_3$auto_record [
	old_prog_fd	fd
	old_map_fd	fd
]

bpf_attr_prog_bind_map$auto_record {
	prog_fd	fd
	map_fd	fd
	flags	int32
}

bpf_attr_query$auto_record {
	bpf_attr_query_0	bpf_attr_query_0$auto_record
	attach_type		int32
	query_flags		int32
	attach_flags		int32
	prog_ids		int64
	bpf_attr_query_5	bpf_attr_query_5$auto_record
	bpf_attr_query_6	const[0, int32]
	prog_attach_flags	int64
	link_ids		int64
	link_attach_flags	int64
	revision		int64
}

bpf_attr_query_0$auto_record [
	target_fd	fd
	target_ifindex	ifindex
]

bpf_attr_query_5$auto_record [
	prog_cnt	int32
	count		int32
]

bpf_attr_raw_tracepoint$auto_record {
	name				int64
	prog_fd				fd
	bpf_attr_raw_tracepoint_2	const[0, int32]
	cookie				int64
}

bpf_attr_task_fd_query$auto_record {
	pid		pid
	fd		fd
	flags		int32
	buf_len		int32
	buf		int64
	prog_id		int32
	fd_type		fd
	probe_offset	int64
	probe_addr	int64
}

bpf_attr_test$auto_record {
	prog_fd		fd
	retval		int32
	data_size_in	int32
	data_size_out	int32
	data_in		int64
	data_out	int64
	repeat		int32
	duration	int32
	ctx_size_in	int32
	ctx_size_out	int32
	ctx_in		int64
	ctx_out		int64
	flags		int32
	cpu		int32
	batch_size	int32
}

bpf_attr_token_create$auto_record {
	flags		int32
	bpffs_fd	fd
}

btrfs_ioctl_feature_flags$auto_record {
	compat_flags	int64
	compat_ro_flags	int64
	incompat_flags	int64
}

btrfs_ioctl_vol_args$auto_record {
	fd	int64
	name	array[int8, 4088]
}

buffmem_desc$auto_record {
	buffer	ptr[inout, int32]
	size	int32
}

cachestat$auto_record {
	nr_cache		int64
	nr_dirty		int64
	nr_writeback		int64
	nr_evicted		int64
	nr_recently_evicted	int64
}

cachestat_range$auto_record {
	off	int64
	len	int64
}

calipso_genl_policy$auto_netlabel_calipso [
	NLBL_CALIPSO_A_DOI	nlattr[NLBL_CALIPSO_A_DOI, int32]
	NLBL_CALIPSO_A_MTYPE	nlattr[NLBL_CALIPSO_A_MTYPE, int32]
] [varlen]

cec_connector_info$auto_record {
	type			int32
	cec_connector_info_1	cec_connector_info_1$auto_record
}

cec_connector_info_1$auto_record [
	drm	cec_drm_connector_info$auto_record
	raw	array[int32, 16]
]

cec_drm_connector_info$auto_record {
	card_no		int32
	connector_id	int32
}

cec_log_addrs$auto_record {
	log_addr		array[int8, 4]
	log_addr_mask		int16
	cec_version		int8
	num_log_addrs		int8
	vendor_id		int32
	flags			int32
	osd_name		array[int8, 15]
	primary_device_type	array[int8, 4]
	log_addr_type		array[int8, 4]
	all_device_types	array[int8, 4]
	features		array[array[int8, 12], 4]
}

cgroupstats_cmd_get_policy$auto_taskstats [
	CGROUPSTATS_CMD_ATTR_FD	nlattr[CGROUPSTATS_CMD_ATTR_FD, fd]
] [varlen]

cifs_genl_policy$auto_netlink [
	CIFS_GENL_ATTR_SWN_REGISTRATION_ID	nlattr[CIFS_GENL_ATTR_SWN_REGISTRATION_ID, int32]
	CIFS_GENL_ATTR_SWN_NET_NAME		nlattr[CIFS_GENL_ATTR_SWN_NET_NAME, stringnoz]
	CIFS_GENL_ATTR_SWN_SHARE_NAME		nlattr[CIFS_GENL_ATTR_SWN_SHARE_NAME, stringnoz]
	CIFS_GENL_ATTR_SWN_IP			nlattr[CIFS_GENL_ATTR_SWN_IP, __kernel_sockaddr_storage$auto_record]
	CIFS_GENL_ATTR_SWN_NET_NAME_NOTIFY	nlattr[CIFS_GENL_ATTR_SWN_NET_NAME_NOTIFY, void]
	CIFS_GENL_ATTR_SWN_SHARE_NAME_NOTIFY	nlattr[CIFS_GENL_ATTR_SWN_SHARE_NAME_NOTIFY, void]
	CIFS_GENL_ATTR_SWN_IP_NOTIFY		nlattr[CIFS_GENL_ATTR_SWN_IP_NOTIFY, void]
	CIFS_GENL_ATTR_SWN_KRB_AUTH		nlattr[CIFS_GENL_ATTR_SWN_KRB_AUTH, void]
	CIFS_GENL_ATTR_SWN_USER_NAME		nlattr[CIFS_GENL_ATTR_SWN_USER_NAME, stringnoz]
	CIFS_GENL_ATTR_SWN_PASSWORD		nlattr[CIFS_GENL_ATTR_SWN_PASSWORD, stringnoz]
	CIFS_GENL_ATTR_SWN_DOMAIN_NAME		nlattr[CIFS_GENL_ATTR_SWN_DOMAIN_NAME, stringnoz]
	CIFS_GENL_ATTR_SWN_NOTIFICATION_TYPE	nlattr[CIFS_GENL_ATTR_SWN_NOTIFICATION_TYPE, int32]
	CIFS_GENL_ATTR_SWN_RESOURCE_STATE	nlattr[CIFS_GENL_ATTR_SWN_RESOURCE_STATE, int32]
	CIFS_GENL_ATTR_SWN_RESOURCE_NAME	nlattr[CIFS_GENL_ATTR_SWN_RESOURCE_NAME, stringnoz]
] [varlen]

clone_args$auto_record {
	flags		int64
	pidfd		int64
	child_tid	int64
	parent_tid	int64
	exit_signal	int64
	stack		int64
	stack_size	int64
	tls		int64
	set_tid		int64
	set_tid_size	int64
	cgroup		int64
}

coalesce_irq_moderation_policy$auto_coalesce [
	ETHTOOL_A_IRQ_MODERATION_USEC	nlattr[ETHTOOL_A_IRQ_MODERATION_USEC, int32]
	ETHTOOL_A_IRQ_MODERATION_PKTS	nlattr[ETHTOOL_A_IRQ_MODERATION_PKTS, int32]
	ETHTOOL_A_IRQ_MODERATION_COMPS	nlattr[ETHTOOL_A_IRQ_MODERATION_COMPS, int32]
] [varlen]

coalesce_profile_policy$auto_coalesce [
	ETHTOOL_A_PROFILE_IRQ_MODERATION	nlnest[ETHTOOL_A_PROFILE_IRQ_MODERATION, array[coalesce_irq_moderation_policy$auto_coalesce]]
] [varlen]

count_info$auto_record {
	bytes	int32
	blocks	int32
	ptr	int32
}

ct_limit_policy$auto_conntrack [
	OVS_CT_LIMIT_ATTR_ZONE_LIMIT	nlnest[OVS_CT_LIMIT_ATTR_ZONE_LIMIT, array[nl_generic_attr]]
] [varlen]

ctrl_policy_family$auto_genetlink [
	CTRL_ATTR_FAMILY_ID	nlattr[CTRL_ATTR_FAMILY_ID, int16]
	CTRL_ATTR_FAMILY_NAME	nlattr[CTRL_ATTR_FAMILY_NAME, string]
] [varlen]

ctrl_policy_policy$auto_genetlink [
	CTRL_ATTR_FAMILY_ID	nlattr[CTRL_ATTR_FAMILY_ID, int16]
	CTRL_ATTR_FAMILY_NAME	nlattr[CTRL_ATTR_FAMILY_NAME, string]
	CTRL_ATTR_OP		nlattr[CTRL_ATTR_OP, int32]
] [varlen]

datapath_policy$auto_datapath [
	OVS_DP_ATTR_NAME		nlattr[OVS_DP_ATTR_NAME, string]
	OVS_DP_ATTR_UPCALL_PID		nlattr[OVS_DP_ATTR_UPCALL_PID, pid]
	OVS_DP_ATTR_USER_FEATURES	nlattr[OVS_DP_ATTR_USER_FEATURES, int32]
	OVS_DP_ATTR_MASKS_CACHE_SIZE	nlattr[OVS_DP_ATTR_MASKS_CACHE_SIZE, int32]
	OVS_DP_ATTR_IFINDEX		nlattr[OVS_DP_ATTR_IFINDEX, ifindex]
] [varlen]

device_policy$auto_netlink [
	WGDEVICE_A_IFINDEX	nlattr[WGDEVICE_A_IFINDEX, ifindex]
	WGDEVICE_A_IFNAME	nlattr[WGDEVICE_A_IFNAME, devname]
	WGDEVICE_A_PRIVATE_KEY	nlattr[WGDEVICE_A_PRIVATE_KEY, array[int8]]
	WGDEVICE_A_PUBLIC_KEY	nlattr[WGDEVICE_A_PUBLIC_KEY, array[int8]]
	WGDEVICE_A_FLAGS	nlattr[WGDEVICE_A_FLAGS, int32]
	WGDEVICE_A_LISTEN_PORT	nlattr[WGDEVICE_A_LISTEN_PORT, sock_port]
	WGDEVICE_A_FWMARK	nlattr[WGDEVICE_A_FWMARK, int32]
	WGDEVICE_A_PEERS	nlnest[WGDEVICE_A_PEERS, array[nl_generic_attr]]
] [varlen]

epoll_event$auto_record {
	events	int32
	data	int64
} [packed]

ethnl_cable_test_act_policy$auto_netlink [
	ETHTOOL_A_CABLE_TEST_HEADER	nlnest[ETHTOOL_A_CABLE_TEST_HEADER, array[ethnl_header_policy_phy$auto_netlink]]
] [varlen]

ethnl_cable_test_tdr_act_policy$auto_netlink [
	ETHTOOL_A_CABLE_TEST_TDR_HEADER	nlnest[ETHTOOL_A_CABLE_TEST_TDR_HEADER, array[ethnl_header_policy_phy$auto_netlink]]
	ETHTOOL_A_CABLE_TEST_TDR_CFG	nlnest[ETHTOOL_A_CABLE_TEST_TDR_CFG, array[nl_generic_attr]]
] [varlen]

ethnl_channels_get_policy$auto_netlink [
	ETHTOOL_A_CHANNELS_HEADER	nlnest[ETHTOOL_A_CHANNELS_HEADER, array[ethnl_header_policy$auto_netlink]]
] [varlen]

ethnl_channels_set_policy$auto_netlink [
	ETHTOOL_A_CHANNELS_HEADER		nlnest[ETHTOOL_A_CHANNELS_HEADER, array[ethnl_header_policy$auto_netlink]]
	ETHTOOL_A_CHANNELS_RX_COUNT		nlattr[ETHTOOL_A_CHANNELS_RX_COUNT, int32]
	ETHTOOL_A_CHANNELS_TX_COUNT		nlattr[ETHTOOL_A_CHANNELS_TX_COUNT, int32]
	ETHTOOL_A_CHANNELS_OTHER_COUNT		nlattr[ETHTOOL_A_CHANNELS_OTHER_COUNT, int32]
	ETHTOOL_A_CHANNELS_COMBINED_COUNT	nlattr[ETHTOOL_A_CHANNELS_COMBINED_COUNT, int32]
] [varlen]

ethnl_coalesce_get_policy$auto_netlink [
	ETHTOOL_A_COALESCE_HEADER	nlnest[ETHTOOL_A_COALESCE_HEADER, array[ethnl_header_policy$auto_netlink]]
] [varlen]

ethnl_coalesce_set_policy$auto_netlink [
	ETHTOOL_A_COALESCE_HEADER		nlnest[ETHTOOL_A_COALESCE_HEADER, array[ethnl_header_policy$auto_netlink]]
	ETHTOOL_A_COALESCE_RX_USECS		nlattr[ETHTOOL_A_COALESCE_RX_USECS, int32]
	ETHTOOL_A_COALESCE_RX_MAX_FRAMES	nlattr[ETHTOOL_A_COALESCE_RX_MAX_FRAMES, int32]
	ETHTOOL_A_COALESCE_RX_USECS_IRQ		nlattr[ETHTOOL_A_COALESCE_RX_USECS_IRQ, int32]
	ETHTOOL_A_COALESCE_RX_MAX_FRAMES_IRQ	nlattr[ETHTOOL_A_COALESCE_RX_MAX_FRAMES_IRQ, int32]
	ETHTOOL_A_COALESCE_TX_USECS		nlattr[ETHTOOL_A_COALESCE_TX_USECS, int32]
	ETHTOOL_A_COALESCE_TX_MAX_FRAMES	nlattr[ETHTOOL_A_COALESCE_TX_MAX_FRAMES, int32]
	ETHTOOL_A_COALESCE_TX_USECS_IRQ		nlattr[ETHTOOL_A_COALESCE_TX_USECS_IRQ, int32]
	ETHTOOL_A_COALESCE_TX_MAX_FRAMES_IRQ	nlattr[ETHTOOL_A_COALESCE_TX_MAX_FRAMES_IRQ, int32]
	ETHTOOL_A_COALESCE_STATS_BLOCK_USECS	nlattr[ETHTOOL_A_COALESCE_STATS_BLOCK_USECS, int32]
	ETHTOOL_A_COALESCE_USE_ADAPTIVE_RX	nlattr[ETHTOOL_A_COALESCE_USE_ADAPTIVE_RX, int8]
	ETHTOOL_A_COALESCE_USE_ADAPTIVE_TX	nlattr[ETHTOOL_A_COALESCE_USE_ADAPTIVE_TX, int8]
	ETHTOOL_A_COALESCE_PKT_RATE_LOW		nlattr[ETHTOOL_A_COALESCE_PKT_RATE_LOW, int32]
	ETHTOOL_A_COALESCE_RX_USECS_LOW		nlattr[ETHTOOL_A_COALESCE_RX_USECS_LOW, int32]
	ETHTOOL_A_COALESCE_RX_MAX_FRAMES_LOW	nlattr[ETHTOOL_A_COALESCE_RX_MAX_FRAMES_LOW, int32]
	ETHTOOL_A_COALESCE_TX_USECS_LOW		nlattr[ETHTOOL_A_COALESCE_TX_USECS_LOW, int32]
	ETHTOOL_A_COALESCE_TX_MAX_FRAMES_LOW	nlattr[ETHTOOL_A_COALESCE_TX_MAX_FRAMES_LOW, int32]
	ETHTOOL_A_COALESCE_PKT_RATE_HIGH	nlattr[ETHTOOL_A_COALESCE_PKT_RATE_HIGH, int32]
	ETHTOOL_A_COALESCE_RX_USECS_HIGH	nlattr[ETHTOOL_A_COALESCE_RX_USECS_HIGH, int32]
	ETHTOOL_A_COALESCE_RX_MAX_FRAMES_HIGH	nlattr[ETHTOOL_A_COALESCE_RX_MAX_FRAMES_HIGH, int32]
	ETHTOOL_A_COALESCE_TX_USECS_HIGH	nlattr[ETHTOOL_A_COALESCE_TX_USECS_HIGH, int32]
	ETHTOOL_A_COALESCE_TX_MAX_FRAMES_HIGH	nlattr[ETHTOOL_A_COALESCE_TX_MAX_FRAMES_HIGH, int32]
	ETHTOOL_A_COALESCE_RATE_SAMPLE_INTERVAL	nlattr[ETHTOOL_A_COALESCE_RATE_SAMPLE_INTERVAL, int32]
	ETHTOOL_A_COALESCE_USE_CQE_MODE_TX	nlattr[ETHTOOL_A_COALESCE_USE_CQE_MODE_TX, int8]
	ETHTOOL_A_COALESCE_USE_CQE_MODE_RX	nlattr[ETHTOOL_A_COALESCE_USE_CQE_MODE_RX, int8]
	ETHTOOL_A_COALESCE_TX_AGGR_MAX_BYTES	nlattr[ETHTOOL_A_COALESCE_TX_AGGR_MAX_BYTES, int32]
	ETHTOOL_A_COALESCE_TX_AGGR_MAX_FRAMES	nlattr[ETHTOOL_A_COALESCE_TX_AGGR_MAX_FRAMES, int32]
	ETHTOOL_A_COALESCE_TX_AGGR_TIME_USECS	nlattr[ETHTOOL_A_COALESCE_TX_AGGR_TIME_USECS, int32]
	ETHTOOL_A_COALESCE_RX_PROFILE		nlnest[ETHTOOL_A_COALESCE_RX_PROFILE, array[coalesce_profile_policy$auto_coalesce]]
	ETHTOOL_A_COALESCE_TX_PROFILE		nlnest[ETHTOOL_A_COALESCE_TX_PROFILE, array[coalesce_profile_policy$auto_coalesce]]
] [varlen]

ethnl_debug_get_policy$auto_netlink [
	ETHTOOL_A_DEBUG_HEADER	nlnest[ETHTOOL_A_DEBUG_HEADER, array[ethnl_header_policy$auto_netlink]]
] [varlen]

ethnl_debug_set_policy$auto_netlink [
	ETHTOOL_A_DEBUG_HEADER	nlnest[ETHTOOL_A_DEBUG_HEADER, array[ethnl_header_policy$auto_netlink]]
	ETHTOOL_A_DEBUG_MSGMASK	nlnest[ETHTOOL_A_DEBUG_MSGMASK, array[nl_generic_attr]]
] [varlen]

ethnl_eee_get_policy$auto_netlink [
	ETHTOOL_A_EEE_HEADER	nlnest[ETHTOOL_A_EEE_HEADER, array[ethnl_header_policy$auto_netlink]]
] [varlen]

ethnl_eee_set_policy$auto_netlink [
	ETHTOOL_A_EEE_HEADER		nlnest[ETHTOOL_A_EEE_HEADER, array[ethnl_header_policy$auto_netlink]]
	ETHTOOL_A_EEE_MODES_OURS	nlnest[ETHTOOL_A_EEE_MODES_OURS, array[nl_generic_attr]]
	ETHTOOL_A_EEE_ENABLED		nlattr[ETHTOOL_A_EEE_ENABLED, bool8]
	ETHTOOL_A_EEE_TX_LPI_ENABLED	nlattr[ETHTOOL_A_EEE_TX_LPI_ENABLED, bool8]
	ETHTOOL_A_EEE_TX_LPI_TIMER	nlattr[ETHTOOL_A_EEE_TX_LPI_TIMER, int32]
] [varlen]

ethnl_features_get_policy$auto_netlink [
	ETHTOOL_A_FEATURES_HEADER	nlnest[ETHTOOL_A_FEATURES_HEADER, array[ethnl_header_policy$auto_netlink]]
] [varlen]

ethnl_features_set_policy$auto_netlink [
	ETHTOOL_A_FEATURES_HEADER	nlnest[ETHTOOL_A_FEATURES_HEADER, array[ethnl_header_policy$auto_netlink]]
	ETHTOOL_A_FEATURES_WANTED	nlnest[ETHTOOL_A_FEATURES_WANTED, array[nl_generic_attr]]
] [varlen]

ethnl_fec_get_policy$auto_netlink [
	ETHTOOL_A_FEC_HEADER	nlnest[ETHTOOL_A_FEC_HEADER, array[ethnl_header_policy_stats$auto_netlink]]
] [varlen]

ethnl_fec_set_policy$auto_netlink [
	ETHTOOL_A_FEC_HEADER	nlnest[ETHTOOL_A_FEC_HEADER, array[ethnl_header_policy$auto_netlink]]
	ETHTOOL_A_FEC_MODES	nlnest[ETHTOOL_A_FEC_MODES, array[nl_generic_attr]]
	ETHTOOL_A_FEC_AUTO	nlattr[ETHTOOL_A_FEC_AUTO, int8]
] [varlen]

ethnl_header_policy$auto_netlink [
	ETHTOOL_A_HEADER_DEV_INDEX	nlattr[ETHTOOL_A_HEADER_DEV_INDEX, ifindex]
	ETHTOOL_A_HEADER_DEV_NAME	nlattr[ETHTOOL_A_HEADER_DEV_NAME, devname]
	ETHTOOL_A_HEADER_FLAGS		nlattr[ETHTOOL_A_HEADER_FLAGS, int32]
] [varlen]

ethnl_header_policy_phy$auto_netlink [
	ETHTOOL_A_HEADER_DEV_INDEX	nlattr[ETHTOOL_A_HEADER_DEV_INDEX, ifindex]
	ETHTOOL_A_HEADER_DEV_NAME	nlattr[ETHTOOL_A_HEADER_DEV_NAME, devname]
	ETHTOOL_A_HEADER_FLAGS		nlattr[ETHTOOL_A_HEADER_FLAGS, int32]
	ETHTOOL_A_HEADER_PHY_INDEX	nlattr[ETHTOOL_A_HEADER_PHY_INDEX, int32]
] [varlen]

ethnl_header_policy_stats$auto_netlink [
	ETHTOOL_A_HEADER_DEV_INDEX	nlattr[ETHTOOL_A_HEADER_DEV_INDEX, ifindex]
	ETHTOOL_A_HEADER_DEV_NAME	nlattr[ETHTOOL_A_HEADER_DEV_NAME, devname]
	ETHTOOL_A_HEADER_FLAGS		nlattr[ETHTOOL_A_HEADER_FLAGS, int32]
] [varlen]

ethnl_linkinfo_get_policy$auto_netlink [
	ETHTOOL_A_LINKINFO_HEADER	nlnest[ETHTOOL_A_LINKINFO_HEADER, array[ethnl_header_policy$auto_netlink]]
] [varlen]

ethnl_linkinfo_set_policy$auto_netlink [
	ETHTOOL_A_LINKINFO_HEADER	nlnest[ETHTOOL_A_LINKINFO_HEADER, array[ethnl_header_policy$auto_netlink]]
	ETHTOOL_A_LINKINFO_PORT		nlattr[ETHTOOL_A_LINKINFO_PORT, int8]
	ETHTOOL_A_LINKINFO_PHYADDR	nlattr[ETHTOOL_A_LINKINFO_PHYADDR, int8]
	ETHTOOL_A_LINKINFO_TP_MDIX_CTRL	nlattr[ETHTOOL_A_LINKINFO_TP_MDIX_CTRL, int8]
] [varlen]

ethnl_linkmodes_get_policy$auto_netlink [
	ETHTOOL_A_LINKMODES_HEADER	nlnest[ETHTOOL_A_LINKMODES_HEADER, array[ethnl_header_policy$auto_netlink]]
] [varlen]

ethnl_linkmodes_set_policy$auto_netlink [
	ETHTOOL_A_LINKMODES_HEADER		nlnest[ETHTOOL_A_LINKMODES_HEADER, array[ethnl_header_policy$auto_netlink]]
	ETHTOOL_A_LINKMODES_AUTONEG		nlattr[ETHTOOL_A_LINKMODES_AUTONEG, int8]
	ETHTOOL_A_LINKMODES_OURS		nlnest[ETHTOOL_A_LINKMODES_OURS, array[nl_generic_attr]]
	ETHTOOL_A_LINKMODES_SPEED		nlattr[ETHTOOL_A_LINKMODES_SPEED, int32]
	ETHTOOL_A_LINKMODES_DUPLEX		nlattr[ETHTOOL_A_LINKMODES_DUPLEX, int8]
	ETHTOOL_A_LINKMODES_MASTER_SLAVE_CFG	nlattr[ETHTOOL_A_LINKMODES_MASTER_SLAVE_CFG, int8]
	ETHTOOL_A_LINKMODES_LANES		nlattr[ETHTOOL_A_LINKMODES_LANES, int32]
] [varlen]

ethnl_linkstate_get_policy$auto_netlink [
	ETHTOOL_A_LINKSTATE_HEADER	nlnest[ETHTOOL_A_LINKSTATE_HEADER, array[ethnl_header_policy_stats$auto_netlink]]
] [varlen]

ethnl_mm_get_policy$auto_netlink [
	ETHTOOL_A_MM_HEADER	nlnest[ETHTOOL_A_MM_HEADER, array[ethnl_header_policy_stats$auto_netlink]]
] [varlen]

ethnl_mm_set_policy$auto_netlink [
	ETHTOOL_A_MM_HEADER		nlnest[ETHTOOL_A_MM_HEADER, array[ethnl_header_policy$auto_netlink]]
	ETHTOOL_A_MM_PMAC_ENABLED	nlattr[ETHTOOL_A_MM_PMAC_ENABLED, bool8]
	ETHTOOL_A_MM_TX_ENABLED		nlattr[ETHTOOL_A_MM_TX_ENABLED, bool8]
	ETHTOOL_A_MM_TX_MIN_FRAG_SIZE	nlattr[ETHTOOL_A_MM_TX_MIN_FRAG_SIZE, int32]
	ETHTOOL_A_MM_VERIFY_ENABLED	nlattr[ETHTOOL_A_MM_VERIFY_ENABLED, bool8]
	ETHTOOL_A_MM_VERIFY_TIME	nlattr[ETHTOOL_A_MM_VERIFY_TIME, int32]
] [varlen]

ethnl_module_eeprom_get_policy$auto_netlink [
	ETHTOOL_A_MODULE_EEPROM_HEADER		nlnest[ETHTOOL_A_MODULE_EEPROM_HEADER, array[ethnl_header_policy$auto_netlink]]
	ETHTOOL_A_MODULE_EEPROM_OFFSET		nlattr[ETHTOOL_A_MODULE_EEPROM_OFFSET, int32]
	ETHTOOL_A_MODULE_EEPROM_LENGTH		nlattr[ETHTOOL_A_MODULE_EEPROM_LENGTH, int32]
	ETHTOOL_A_MODULE_EEPROM_PAGE		nlattr[ETHTOOL_A_MODULE_EEPROM_PAGE, int8]
	ETHTOOL_A_MODULE_EEPROM_BANK		nlattr[ETHTOOL_A_MODULE_EEPROM_BANK, int8]
	ETHTOOL_A_MODULE_EEPROM_I2C_ADDRESS	nlattr[ETHTOOL_A_MODULE_EEPROM_I2C_ADDRESS, int8]
] [varlen]

ethnl_module_fw_flash_act_policy$auto_netlink [
	ETHTOOL_A_MODULE_FW_FLASH_HEADER	nlnest[ETHTOOL_A_MODULE_FW_FLASH_HEADER, array[ethnl_header_policy$auto_netlink]]
	ETHTOOL_A_MODULE_FW_FLASH_FILE_NAME	nlattr[ETHTOOL_A_MODULE_FW_FLASH_FILE_NAME, string]
	ETHTOOL_A_MODULE_FW_FLASH_PASSWORD	nlattr[ETHTOOL_A_MODULE_FW_FLASH_PASSWORD, int32]
] [varlen]

ethnl_module_get_policy$auto_netlink [
	ETHTOOL_A_MODULE_HEADER	nlnest[ETHTOOL_A_MODULE_HEADER, array[ethnl_header_policy$auto_netlink]]
] [varlen]

ethnl_module_set_policy$auto_netlink [
	ETHTOOL_A_MODULE_HEADER			nlnest[ETHTOOL_A_MODULE_HEADER, array[ethnl_header_policy$auto_netlink]]
	ETHTOOL_A_MODULE_POWER_MODE_POLICY	nlattr[ETHTOOL_A_MODULE_POWER_MODE_POLICY, int8]
] [varlen]

ethnl_pause_get_policy$auto_netlink [
	ETHTOOL_A_PAUSE_HEADER		nlnest[ETHTOOL_A_PAUSE_HEADER, array[ethnl_header_policy_stats$auto_netlink]]
	ETHTOOL_A_PAUSE_STATS_SRC	nlattr[ETHTOOL_A_PAUSE_STATS_SRC, int32]
] [varlen]

ethnl_pause_set_policy$auto_netlink [
	ETHTOOL_A_PAUSE_HEADER	nlnest[ETHTOOL_A_PAUSE_HEADER, array[ethnl_header_policy$auto_netlink]]
	ETHTOOL_A_PAUSE_AUTONEG	nlattr[ETHTOOL_A_PAUSE_AUTONEG, int8]
	ETHTOOL_A_PAUSE_RX	nlattr[ETHTOOL_A_PAUSE_RX, int8]
	ETHTOOL_A_PAUSE_TX	nlattr[ETHTOOL_A_PAUSE_TX, int8]
] [varlen]

ethnl_phc_vclocks_get_policy$auto_netlink [
	ETHTOOL_A_PHC_VCLOCKS_HEADER	nlnest[ETHTOOL_A_PHC_VCLOCKS_HEADER, array[ethnl_header_policy$auto_netlink]]
] [varlen]

ethnl_phy_get_policy$auto_netlink [
	ETHTOOL_A_PHY_HEADER	nlnest[ETHTOOL_A_PHY_HEADER, array[ethnl_header_policy$auto_netlink]]
] [varlen]

ethnl_plca_get_cfg_policy$auto_netlink [
	ETHTOOL_A_PLCA_HEADER	nlnest[ETHTOOL_A_PLCA_HEADER, array[ethnl_header_policy_phy$auto_netlink]]
] [varlen]

ethnl_plca_get_status_policy$auto_netlink [
	ETHTOOL_A_PLCA_HEADER	nlnest[ETHTOOL_A_PLCA_HEADER, array[ethnl_header_policy_phy$auto_netlink]]
] [varlen]

ethnl_plca_set_cfg_policy$auto_netlink [
	ETHTOOL_A_PLCA_HEADER		nlnest[ETHTOOL_A_PLCA_HEADER, array[ethnl_header_policy_phy$auto_netlink]]
	ETHTOOL_A_PLCA_ENABLED		nlattr[ETHTOOL_A_PLCA_ENABLED, bool8]
	ETHTOOL_A_PLCA_NODE_CNT		nlattr[ETHTOOL_A_PLCA_NODE_CNT, int32]
	ETHTOOL_A_PLCA_NODE_ID		nlattr[ETHTOOL_A_PLCA_NODE_ID, int32]
	ETHTOOL_A_PLCA_TO_TMR		nlattr[ETHTOOL_A_PLCA_TO_TMR, int32]
	ETHTOOL_A_PLCA_BURST_CNT	nlattr[ETHTOOL_A_PLCA_BURST_CNT, int32]
	ETHTOOL_A_PLCA_BURST_TMR	nlattr[ETHTOOL_A_PLCA_BURST_TMR, int32]
] [varlen]

ethnl_privflags_get_policy$auto_netlink [
	ETHTOOL_A_PRIVFLAGS_HEADER	nlnest[ETHTOOL_A_PRIVFLAGS_HEADER, array[ethnl_header_policy$auto_netlink]]
] [varlen]

ethnl_privflags_set_policy$auto_netlink [
	ETHTOOL_A_PRIVFLAGS_HEADER	nlnest[ETHTOOL_A_PRIVFLAGS_HEADER, array[ethnl_header_policy$auto_netlink]]
	ETHTOOL_A_PRIVFLAGS_FLAGS	nlnest[ETHTOOL_A_PRIVFLAGS_FLAGS, array[nl_generic_attr]]
] [varlen]

ethnl_pse_get_policy$auto_netlink [
	ETHTOOL_A_PSE_HEADER	nlnest[ETHTOOL_A_PSE_HEADER, array[ethnl_header_policy_phy$auto_netlink]]
] [varlen]

ethnl_pse_set_policy$auto_netlink [
	ETHTOOL_A_PSE_HEADER			nlnest[ETHTOOL_A_PSE_HEADER, array[ethnl_header_policy_phy$auto_netlink]]
	ETHTOOL_A_PODL_PSE_ADMIN_CONTROL	nlattr[ETHTOOL_A_PODL_PSE_ADMIN_CONTROL, int32]
	ETHTOOL_A_C33_PSE_ADMIN_CONTROL		nlattr[ETHTOOL_A_C33_PSE_ADMIN_CONTROL, int32]
	ETHTOOL_A_C33_PSE_AVAIL_PW_LIMIT	nlattr[ETHTOOL_A_C33_PSE_AVAIL_PW_LIMIT, int32]
] [varlen]

ethnl_rings_get_policy$auto_netlink [
	ETHTOOL_A_RINGS_HEADER	nlnest[ETHTOOL_A_RINGS_HEADER, array[ethnl_header_policy$auto_netlink]]
] [varlen]

ethnl_rings_set_policy$auto_netlink [
	ETHTOOL_A_RINGS_HEADER		nlnest[ETHTOOL_A_RINGS_HEADER, array[ethnl_header_policy$auto_netlink]]
	ETHTOOL_A_RINGS_RX		nlattr[ETHTOOL_A_RINGS_RX, int32]
	ETHTOOL_A_RINGS_RX_MINI		nlattr[ETHTOOL_A_RINGS_RX_MINI, int32]
	ETHTOOL_A_RINGS_RX_JUMBO	nlattr[ETHTOOL_A_RINGS_RX_JUMBO, int32]
	ETHTOOL_A_RINGS_TX		nlattr[ETHTOOL_A_RINGS_TX, int32]
	ETHTOOL_A_RINGS_RX_BUF_LEN	nlattr[ETHTOOL_A_RINGS_RX_BUF_LEN, int32]
	ETHTOOL_A_RINGS_TCP_DATA_SPLIT	nlattr[ETHTOOL_A_RINGS_TCP_DATA_SPLIT, int8]
	ETHTOOL_A_RINGS_CQE_SIZE	nlattr[ETHTOOL_A_RINGS_CQE_SIZE, int32]
	ETHTOOL_A_RINGS_TX_PUSH		nlattr[ETHTOOL_A_RINGS_TX_PUSH, int8]
	ETHTOOL_A_RINGS_RX_PUSH		nlattr[ETHTOOL_A_RINGS_RX_PUSH, int8]
	ETHTOOL_A_RINGS_TX_PUSH_BUF_LEN	nlattr[ETHTOOL_A_RINGS_TX_PUSH_BUF_LEN, int32]
] [varlen]

ethnl_rss_get_policy$auto_netlink [
	ETHTOOL_A_RSS_HEADER		nlnest[ETHTOOL_A_RSS_HEADER, array[ethnl_header_policy$auto_netlink]]
	ETHTOOL_A_RSS_CONTEXT		nlattr[ETHTOOL_A_RSS_CONTEXT, int32]
	ETHTOOL_A_RSS_START_CONTEXT	nlattr[ETHTOOL_A_RSS_START_CONTEXT, int32]
] [varlen]

ethnl_stats_get_policy$auto_netlink [
	ETHTOOL_A_STATS_HEADER	nlnest[ETHTOOL_A_STATS_HEADER, array[ethnl_header_policy$auto_netlink]]
	ETHTOOL_A_STATS_GROUPS	nlnest[ETHTOOL_A_STATS_GROUPS, array[nl_generic_attr]]
	ETHTOOL_A_STATS_SRC	nlattr[ETHTOOL_A_STATS_SRC, int32]
] [varlen]

ethnl_strset_get_policy$auto_netlink [
	ETHTOOL_A_STRSET_HEADER		nlnest[ETHTOOL_A_STRSET_HEADER, array[ethnl_header_policy_phy$auto_netlink]]
	ETHTOOL_A_STRSET_STRINGSETS	nlnest[ETHTOOL_A_STRSET_STRINGSETS, array[nl_generic_attr]]
	ETHTOOL_A_STRSET_COUNTS_ONLY	nlattr[ETHTOOL_A_STRSET_COUNTS_ONLY, void]
] [varlen]

ethnl_tsinfo_get_policy$auto_netlink [
	ETHTOOL_A_TSINFO_HEADER	nlnest[ETHTOOL_A_TSINFO_HEADER, array[ethnl_header_policy_stats$auto_netlink]]
] [varlen]

ethnl_tunnel_info_get_policy$auto_netlink [
	ETHTOOL_A_TUNNEL_INFO_HEADER	nlnest[ETHTOOL_A_TUNNEL_INFO_HEADER, array[ethnl_header_policy$auto_netlink]]
] [varlen]

ethnl_wol_get_policy$auto_netlink [
	ETHTOOL_A_WOL_HEADER	nlnest[ETHTOOL_A_WOL_HEADER, array[ethnl_header_policy$auto_netlink]]
] [varlen]

ethnl_wol_set_policy$auto_netlink [
	ETHTOOL_A_WOL_HEADER	nlnest[ETHTOOL_A_WOL_HEADER, array[ethnl_header_policy$auto_netlink]]
	ETHTOOL_A_WOL_MODES	nlnest[ETHTOOL_A_WOL_MODES, array[nl_generic_attr]]
	ETHTOOL_A_WOL_SOPASS	nlattr[ETHTOOL_A_WOL_SOPASS, array[int8, 0:6]]
] [varlen]

file_handle$auto_record {
	handle_bytes	len[f_handle, int32]
	handle_type	int32
	f_handle	array[int8]
}

flow_policy$auto_datapath [
	OVS_FLOW_ATTR_KEY		nlnest[OVS_FLOW_ATTR_KEY, array[nl_generic_attr]]
	OVS_FLOW_ATTR_ACTIONS		nlnest[OVS_FLOW_ATTR_ACTIONS, array[nl_generic_attr]]
	OVS_FLOW_ATTR_CLEAR		nlattr[OVS_FLOW_ATTR_CLEAR, void]
	OVS_FLOW_ATTR_MASK		nlnest[OVS_FLOW_ATTR_MASK, array[nl_generic_attr]]
	OVS_FLOW_ATTR_PROBE		nlattr[OVS_FLOW_ATTR_PROBE, void]
	OVS_FLOW_ATTR_UFID		nlattr[OVS_FLOW_ATTR_UFID, int8]
	OVS_FLOW_ATTR_UFID_FLAGS	nlattr[OVS_FLOW_ATTR_UFID_FLAGS, int32]
] [varlen]

fuse_backing_map$auto_record {
	fd	fd
	flags	int32
	padding	const[0, int64]
}

futex_waitv$auto_record {
	val		int64
	uaddr		int64
	flags		int32
	__reserved	const[0, int32]
}

getcpu_cache$auto_record {
	blob	array[intptr, 16]
}

gtp_genl_policy$auto_gtp [
	GTPA_LINK		nlattr[GTPA_LINK, int32]
	GTPA_VERSION		nlattr[GTPA_VERSION, int32]
	GTPA_TID		nlattr[GTPA_TID, int64]
	GTPA_PEER_ADDRESS	nlattr[GTPA_PEER_ADDRESS, int32]
	GTPA_MS_ADDRESS		nlattr[GTPA_MS_ADDRESS, int32]
	GTPA_FLOW		nlattr[GTPA_FLOW, int16]
	GTPA_NET_NS_FD		nlattr[GTPA_NET_NS_FD, fd_namespace]
	GTPA_I_TEI		nlattr[GTPA_I_TEI, int32]
	GTPA_O_TEI		nlattr[GTPA_O_TEI, int32]
	GTPA_PEER_ADDR6		nlattr[GTPA_PEER_ADDR6, in6_addr$auto_record]
	GTPA_MS_ADDR6		nlattr[GTPA_MS_ADDR6, in6_addr$auto_record]
	GTPA_FAMILY		nlattr[GTPA_FAMILY, int8]
] [varlen]

handshake_accept_nl_policy$auto_genl [
	HANDSHAKE_A_ACCEPT_HANDLER_CLASS	nlattr[HANDSHAKE_A_ACCEPT_HANDLER_CLASS, int32]
] [varlen]

handshake_done_nl_policy$auto_genl [
	HANDSHAKE_A_DONE_STATUS		nlattr[HANDSHAKE_A_DONE_STATUS, int32]
	HANDSHAKE_A_DONE_SOCKFD		nlattr[HANDSHAKE_A_DONE_SOCKFD, fd]
	HANDSHAKE_A_DONE_REMOTE_AUTH	nlattr[HANDSHAKE_A_DONE_REMOTE_AUTH, int32]
] [varlen]

he_bss_color_policy$auto_nl80211 [
	NL80211_HE_BSS_COLOR_ATTR_COLOR		nlattr[NL80211_HE_BSS_COLOR_ATTR_COLOR, int8]
	NL80211_HE_BSS_COLOR_ATTR_DISABLED	nlattr[NL80211_HE_BSS_COLOR_ATTR_DISABLED, void]
	NL80211_HE_BSS_COLOR_ATTR_PARTIAL	nlattr[NL80211_HE_BSS_COLOR_ATTR_PARTIAL, void]
] [varlen]

he_obss_pd_policy$auto_nl80211 [
	NL80211_HE_OBSS_PD_ATTR_MIN_OFFSET		nlattr[NL80211_HE_OBSS_PD_ATTR_MIN_OFFSET, int8]
	NL80211_HE_OBSS_PD_ATTR_MAX_OFFSET		nlattr[NL80211_HE_OBSS_PD_ATTR_MAX_OFFSET, int8]
	NL80211_HE_OBSS_PD_ATTR_NON_SRG_MAX_OFFSET	nlattr[NL80211_HE_OBSS_PD_ATTR_NON_SRG_MAX_OFFSET, int8]
	NL80211_HE_OBSS_PD_ATTR_BSS_COLOR_BITMAP	nlattr[NL80211_HE_OBSS_PD_ATTR_BSS_COLOR_BITMAP, array[int8]]
	NL80211_HE_OBSS_PD_ATTR_PARTIAL_BSSID_BITMAP	nlattr[NL80211_HE_OBSS_PD_ATTR_PARTIAL_BSSID_BITMAP, array[int8]]
	NL80211_HE_OBSS_PD_ATTR_SR_CTRL			nlattr[NL80211_HE_OBSS_PD_ATTR_SR_CTRL, int8]
] [varlen]

hsr_genl_policy$auto_hsr_netlink [
	HSR_A_NODE_ADDR		nlattr[HSR_A_NODE_ADDR, array[int8, 6]]
	HSR_A_IFINDEX		nlattr[HSR_A_IFINDEX, ifindex]
	HSR_A_IF1_AGE		nlattr[HSR_A_IF1_AGE, int32]
	HSR_A_IF2_AGE		nlattr[HSR_A_IF2_AGE, int32]
	HSR_A_NODE_ADDR_B	nlattr[HSR_A_NODE_ADDR_B, array[int8, 6]]
	HSR_A_IF1_SEQ		nlattr[HSR_A_IF1_SEQ, int16]
	HSR_A_IF2_SEQ		nlattr[HSR_A_IF2_SEQ, int16]
] [varlen]

hwsim_ftm_capa_policy$auto_mac80211_hwsim [
	NL80211_PMSR_FTM_CAPA_ATTR_ASAP			nlattr[NL80211_PMSR_FTM_CAPA_ATTR_ASAP, void]
	NL80211_PMSR_FTM_CAPA_ATTR_NON_ASAP		nlattr[NL80211_PMSR_FTM_CAPA_ATTR_NON_ASAP, void]
	NL80211_PMSR_FTM_CAPA_ATTR_REQ_LCI		nlattr[NL80211_PMSR_FTM_CAPA_ATTR_REQ_LCI, void]
	NL80211_PMSR_FTM_CAPA_ATTR_REQ_CIVICLOC		nlattr[NL80211_PMSR_FTM_CAPA_ATTR_REQ_CIVICLOC, void]
	NL80211_PMSR_FTM_CAPA_ATTR_PREAMBLES		nlattr[NL80211_PMSR_FTM_CAPA_ATTR_PREAMBLES, int32]
	NL80211_PMSR_FTM_CAPA_ATTR_BANDWIDTHS		nlattr[NL80211_PMSR_FTM_CAPA_ATTR_BANDWIDTHS, int32]
	NL80211_PMSR_FTM_CAPA_ATTR_MAX_BURSTS_EXPONENT	nlattr[NL80211_PMSR_FTM_CAPA_ATTR_MAX_BURSTS_EXPONENT, int8]
	NL80211_PMSR_FTM_CAPA_ATTR_MAX_FTMS_PER_BURST	nlattr[NL80211_PMSR_FTM_CAPA_ATTR_MAX_FTMS_PER_BURST, int8]
	NL80211_PMSR_FTM_CAPA_ATTR_TRIGGER_BASED	nlattr[NL80211_PMSR_FTM_CAPA_ATTR_TRIGGER_BASED, void]
	NL80211_PMSR_FTM_CAPA_ATTR_NON_TRIGGER_BASED	nlattr[NL80211_PMSR_FTM_CAPA_ATTR_NON_TRIGGER_BASED, void]
] [varlen]

hwsim_ftm_result_policy$auto_mac80211_hwsim [
	NL80211_PMSR_FTM_RESP_ATTR_FAIL_REASON		nlattr[NL80211_PMSR_FTM_RESP_ATTR_FAIL_REASON, int32]
	NL80211_PMSR_FTM_RESP_ATTR_BURST_INDEX		nlattr[NL80211_PMSR_FTM_RESP_ATTR_BURST_INDEX, int16]
	NL80211_PMSR_FTM_RESP_ATTR_NUM_FTMR_ATTEMPTS	nlattr[NL80211_PMSR_FTM_RESP_ATTR_NUM_FTMR_ATTEMPTS, int32]
	NL80211_PMSR_FTM_RESP_ATTR_NUM_FTMR_SUCCESSES	nlattr[NL80211_PMSR_FTM_RESP_ATTR_NUM_FTMR_SUCCESSES, int32]
	NL80211_PMSR_FTM_RESP_ATTR_BUSY_RETRY_TIME	nlattr[NL80211_PMSR_FTM_RESP_ATTR_BUSY_RETRY_TIME, int8]
	NL80211_PMSR_FTM_RESP_ATTR_NUM_BURSTS_EXP	nlattr[NL80211_PMSR_FTM_RESP_ATTR_NUM_BURSTS_EXP, int8]
	NL80211_PMSR_FTM_RESP_ATTR_BURST_DURATION	nlattr[NL80211_PMSR_FTM_RESP_ATTR_BURST_DURATION, int8]
	NL80211_PMSR_FTM_RESP_ATTR_FTMS_PER_BURST	nlattr[NL80211_PMSR_FTM_RESP_ATTR_FTMS_PER_BURST, int8]
	NL80211_PMSR_FTM_RESP_ATTR_RSSI_AVG		nlattr[NL80211_PMSR_FTM_RESP_ATTR_RSSI_AVG, int32]
	NL80211_PMSR_FTM_RESP_ATTR_RSSI_SPREAD		nlattr[NL80211_PMSR_FTM_RESP_ATTR_RSSI_SPREAD, int32]
	NL80211_PMSR_FTM_RESP_ATTR_TX_RATE		nlnest[NL80211_PMSR_FTM_RESP_ATTR_TX_RATE, array[hwsim_rate_info_policy$auto_mac80211_hwsim]]
	NL80211_PMSR_FTM_RESP_ATTR_RX_RATE		nlnest[NL80211_PMSR_FTM_RESP_ATTR_RX_RATE, array[hwsim_rate_info_policy$auto_mac80211_hwsim]]
	NL80211_PMSR_FTM_RESP_ATTR_RTT_AVG		nlattr[NL80211_PMSR_FTM_RESP_ATTR_RTT_AVG, int64]
	NL80211_PMSR_FTM_RESP_ATTR_RTT_VARIANCE		nlattr[NL80211_PMSR_FTM_RESP_ATTR_RTT_VARIANCE, int64]
	NL80211_PMSR_FTM_RESP_ATTR_RTT_SPREAD		nlattr[NL80211_PMSR_FTM_RESP_ATTR_RTT_SPREAD, int64]
	NL80211_PMSR_FTM_RESP_ATTR_DIST_AVG		nlattr[NL80211_PMSR_FTM_RESP_ATTR_DIST_AVG, int64]
	NL80211_PMSR_FTM_RESP_ATTR_DIST_VARIANCE	nlattr[NL80211_PMSR_FTM_RESP_ATTR_DIST_VARIANCE, int64]
	NL80211_PMSR_FTM_RESP_ATTR_DIST_SPREAD		nlattr[NL80211_PMSR_FTM_RESP_ATTR_DIST_SPREAD, int64]
	NL80211_PMSR_FTM_RESP_ATTR_LCI			nlattr[NL80211_PMSR_FTM_RESP_ATTR_LCI, stringnoz]
	NL80211_PMSR_FTM_RESP_ATTR_CIVICLOC		nlattr[NL80211_PMSR_FTM_RESP_ATTR_CIVICLOC, stringnoz]
] [varlen]

hwsim_genl_policy$auto_mac80211_hwsim [
	HWSIM_ATTR_ADDR_RECEIVER		nlattr[HWSIM_ATTR_ADDR_RECEIVER, array[int8]]
	HWSIM_ATTR_ADDR_TRANSMITTER		nlattr[HWSIM_ATTR_ADDR_TRANSMITTER, array[int8]]
	HWSIM_ATTR_FRAME			nlattr[HWSIM_ATTR_FRAME, array[int8, 0:2304]]
	HWSIM_ATTR_FLAGS			nlattr[HWSIM_ATTR_FLAGS, int32]
	HWSIM_ATTR_RX_RATE			nlattr[HWSIM_ATTR_RX_RATE, int32]
	HWSIM_ATTR_SIGNAL			nlattr[HWSIM_ATTR_SIGNAL, int32]
	HWSIM_ATTR_TX_INFO			nlattr[HWSIM_ATTR_TX_INFO, array[hwsim_tx_rate$auto_record, 0:4]]
	HWSIM_ATTR_COOKIE			nlattr[HWSIM_ATTR_COOKIE, int64]
	HWSIM_ATTR_CHANNELS			nlattr[HWSIM_ATTR_CHANNELS, int32]
	HWSIM_ATTR_RADIO_ID			nlattr[HWSIM_ATTR_RADIO_ID, int32]
	HWSIM_ATTR_REG_HINT_ALPHA2		nlattr[HWSIM_ATTR_REG_HINT_ALPHA2, stringnoz]
	HWSIM_ATTR_REG_CUSTOM_REG		nlattr[HWSIM_ATTR_REG_CUSTOM_REG, int32]
	HWSIM_ATTR_REG_STRICT_REG		nlattr[HWSIM_ATTR_REG_STRICT_REG, void]
	HWSIM_ATTR_SUPPORT_P2P_DEVICE		nlattr[HWSIM_ATTR_SUPPORT_P2P_DEVICE, void]
	HWSIM_ATTR_USE_CHANCTX			nlattr[HWSIM_ATTR_USE_CHANCTX, void]
	HWSIM_ATTR_DESTROY_RADIO_ON_CLOSE	nlattr[HWSIM_ATTR_DESTROY_RADIO_ON_CLOSE, void]
	HWSIM_ATTR_RADIO_NAME			nlattr[HWSIM_ATTR_RADIO_NAME, stringnoz]
	HWSIM_ATTR_NO_VIF			nlattr[HWSIM_ATTR_NO_VIF, void]
	HWSIM_ATTR_FREQ				nlattr[HWSIM_ATTR_FREQ, int32]
	HWSIM_ATTR_TX_INFO_FLAGS		nlattr[HWSIM_ATTR_TX_INFO_FLAGS, array[int8]]
	HWSIM_ATTR_PERM_ADDR			nlattr[HWSIM_ATTR_PERM_ADDR, array[int8]]
	HWSIM_ATTR_IFTYPE_SUPPORT		nlattr[HWSIM_ATTR_IFTYPE_SUPPORT, int32]
	HWSIM_ATTR_CIPHER_SUPPORT		nlattr[HWSIM_ATTR_CIPHER_SUPPORT, array[int8]]
	HWSIM_ATTR_MLO_SUPPORT			nlattr[HWSIM_ATTR_MLO_SUPPORT, void]
	HWSIM_ATTR_PMSR_SUPPORT			nlnest[HWSIM_ATTR_PMSR_SUPPORT, array[hwsim_pmsr_capa_policy$auto_mac80211_hwsim]]
	HWSIM_ATTR_PMSR_RESULT			nlnest[HWSIM_ATTR_PMSR_RESULT, array[hwsim_pmsr_peers_result_policy$auto_mac80211_hwsim]]
	HWSIM_ATTR_MULTI_RADIO			nlattr[HWSIM_ATTR_MULTI_RADIO, void]
] [varlen]

hwsim_genl_policy$auto_mac802154_hwsim [
	MAC802154_HWSIM_ATTR_RADIO_ID		nlattr[MAC802154_HWSIM_ATTR_RADIO_ID, int32]
	MAC802154_HWSIM_ATTR_RADIO_EDGE		nlnest[MAC802154_HWSIM_ATTR_RADIO_EDGE, array[nl_generic_attr]]
	MAC802154_HWSIM_ATTR_RADIO_EDGES	nlnest[MAC802154_HWSIM_ATTR_RADIO_EDGES, array[nl_generic_attr]]
] [varlen]

hwsim_pmsr_capa_policy$auto_mac80211_hwsim [
	NL80211_PMSR_ATTR_MAX_PEERS		nlattr[NL80211_PMSR_ATTR_MAX_PEERS, int32]
	NL80211_PMSR_ATTR_REPORT_AP_TSF		nlattr[NL80211_PMSR_ATTR_REPORT_AP_TSF, void]
	NL80211_PMSR_ATTR_RANDOMIZE_MAC_ADDR	nlattr[NL80211_PMSR_ATTR_RANDOMIZE_MAC_ADDR, void]
	NL80211_PMSR_ATTR_TYPE_CAPA		nlnest[NL80211_PMSR_ATTR_TYPE_CAPA, array[hwsim_pmsr_capa_type_policy$auto_mac80211_hwsim]]
] [varlen]

hwsim_pmsr_capa_type_policy$auto_mac80211_hwsim [
	NL80211_PMSR_TYPE_FTM	nlnest[NL80211_PMSR_TYPE_FTM, array[hwsim_ftm_capa_policy$auto_mac80211_hwsim]]
] [varlen]

hwsim_pmsr_peer_result_policy$auto_mac80211_hwsim [
	NL80211_PMSR_PEER_ATTR_ADDR	nlattr[NL80211_PMSR_PEER_ATTR_ADDR, array[int8]]
	NL80211_PMSR_PEER_ATTR_RESP	nlnest[NL80211_PMSR_PEER_ATTR_RESP, array[hwsim_pmsr_resp_policy$auto_mac80211_hwsim]]
] [varlen]

hwsim_pmsr_peers_result_policy$auto_mac80211_hwsim [
	NL80211_PMSR_ATTR_PEERS	nlnest[NL80211_PMSR_ATTR_PEERS, array[nlnest[0, array[hwsim_pmsr_peer_result_policy$auto_mac80211_hwsim]]]]
] [varlen]

hwsim_pmsr_resp_policy$auto_mac80211_hwsim [
	NL80211_PMSR_RESP_ATTR_DATA		nlnest[NL80211_PMSR_RESP_ATTR_DATA, array[hwsim_pmsr_resp_type_policy$auto_mac80211_hwsim]]
	NL80211_PMSR_RESP_ATTR_STATUS		nlattr[NL80211_PMSR_RESP_ATTR_STATUS, int32]
	NL80211_PMSR_RESP_ATTR_HOST_TIME	nlattr[NL80211_PMSR_RESP_ATTR_HOST_TIME, int64]
	NL80211_PMSR_RESP_ATTR_AP_TSF		nlattr[NL80211_PMSR_RESP_ATTR_AP_TSF, int64]
	NL80211_PMSR_RESP_ATTR_FINAL		nlattr[NL80211_PMSR_RESP_ATTR_FINAL, void]
] [varlen]

hwsim_pmsr_resp_type_policy$auto_mac80211_hwsim [
	NL80211_PMSR_TYPE_FTM	nlnest[NL80211_PMSR_TYPE_FTM, array[hwsim_ftm_result_policy$auto_mac80211_hwsim]]
] [varlen]

hwsim_rate_info_policy$auto_mac80211_hwsim [
	HWSIM_RATE_INFO_ATTR_FLAGS		nlattr[HWSIM_RATE_INFO_ATTR_FLAGS, int8]
	HWSIM_RATE_INFO_ATTR_MCS		nlattr[HWSIM_RATE_INFO_ATTR_MCS, int8]
	HWSIM_RATE_INFO_ATTR_LEGACY		nlattr[HWSIM_RATE_INFO_ATTR_LEGACY, int16]
	HWSIM_RATE_INFO_ATTR_NSS		nlattr[HWSIM_RATE_INFO_ATTR_NSS, int8]
	HWSIM_RATE_INFO_ATTR_BW			nlattr[HWSIM_RATE_INFO_ATTR_BW, int8]
	HWSIM_RATE_INFO_ATTR_HE_GI		nlattr[HWSIM_RATE_INFO_ATTR_HE_GI, int8]
	HWSIM_RATE_INFO_ATTR_HE_DCM		nlattr[HWSIM_RATE_INFO_ATTR_HE_DCM, int8]
	HWSIM_RATE_INFO_ATTR_HE_RU_ALLOC	nlattr[HWSIM_RATE_INFO_ATTR_HE_RU_ALLOC, int8]
	HWSIM_RATE_INFO_ATTR_N_BOUNDED_CH	nlattr[HWSIM_RATE_INFO_ATTR_N_BOUNDED_CH, int8]
	HWSIM_RATE_INFO_ATTR_EHT_GI		nlattr[HWSIM_RATE_INFO_ATTR_EHT_GI, int8]
	HWSIM_RATE_INFO_ATTR_EHT_RU_ALLOC	nlattr[HWSIM_RATE_INFO_ATTR_EHT_RU_ALLOC, int8]
] [varlen]

hwsim_tx_rate$auto_record {
	idx	int8
	count	int8
} [packed]

ieee802154_policy$auto_nl802154 [
	IEEE802154_ATTR_DEV_NAME			nlattr[IEEE802154_ATTR_DEV_NAME, devname]
	IEEE802154_ATTR_DEV_INDEX			nlattr[IEEE802154_ATTR_DEV_INDEX, ifindex]
	IEEE802154_ATTR_STATUS				nlattr[IEEE802154_ATTR_STATUS, int8]
	IEEE802154_ATTR_SHORT_ADDR			nlattr[IEEE802154_ATTR_SHORT_ADDR, int16]
	IEEE802154_ATTR_HW_ADDR				nlattr[IEEE802154_ATTR_HW_ADDR, int64]
	IEEE802154_ATTR_PAN_ID				nlattr[IEEE802154_ATTR_PAN_ID, int16]
	IEEE802154_ATTR_CHANNEL				nlattr[IEEE802154_ATTR_CHANNEL, int8]
	IEEE802154_ATTR_COORD_SHORT_ADDR		nlattr[IEEE802154_ATTR_COORD_SHORT_ADDR, int16]
	IEEE802154_ATTR_COORD_HW_ADDR			nlattr[IEEE802154_ATTR_COORD_HW_ADDR, int64]
	IEEE802154_ATTR_COORD_PAN_ID			nlattr[IEEE802154_ATTR_COORD_PAN_ID, int16]
	IEEE802154_ATTR_SRC_SHORT_ADDR			nlattr[IEEE802154_ATTR_SRC_SHORT_ADDR, int16]
	IEEE802154_ATTR_SRC_HW_ADDR			nlattr[IEEE802154_ATTR_SRC_HW_ADDR, int64]
	IEEE802154_ATTR_SRC_PAN_ID			nlattr[IEEE802154_ATTR_SRC_PAN_ID, int16]
	IEEE802154_ATTR_DEST_SHORT_ADDR			nlattr[IEEE802154_ATTR_DEST_SHORT_ADDR, int16]
	IEEE802154_ATTR_DEST_HW_ADDR			nlattr[IEEE802154_ATTR_DEST_HW_ADDR, int64]
	IEEE802154_ATTR_DEST_PAN_ID			nlattr[IEEE802154_ATTR_DEST_PAN_ID, int16]
	IEEE802154_ATTR_CAPABILITY			nlattr[IEEE802154_ATTR_CAPABILITY, int8]
	IEEE802154_ATTR_REASON				nlattr[IEEE802154_ATTR_REASON, int8]
	IEEE802154_ATTR_SCAN_TYPE			nlattr[IEEE802154_ATTR_SCAN_TYPE, int8]
	IEEE802154_ATTR_CHANNELS			nlattr[IEEE802154_ATTR_CHANNELS, int32]
	IEEE802154_ATTR_DURATION			nlattr[IEEE802154_ATTR_DURATION, int8]
	IEEE802154_ATTR_ED_LIST				nlattr[IEEE802154_ATTR_ED_LIST, array[int8, 27]]
	IEEE802154_ATTR_BCN_ORD				nlattr[IEEE802154_ATTR_BCN_ORD, int8]
	IEEE802154_ATTR_SF_ORD				nlattr[IEEE802154_ATTR_SF_ORD, int8]
	IEEE802154_ATTR_PAN_COORD			nlattr[IEEE802154_ATTR_PAN_COORD, int8]
	IEEE802154_ATTR_BAT_EXT				nlattr[IEEE802154_ATTR_BAT_EXT, int8]
	IEEE802154_ATTR_COORD_REALIGN			nlattr[IEEE802154_ATTR_COORD_REALIGN, int8]
	IEEE802154_ATTR_PAGE				nlattr[IEEE802154_ATTR_PAGE, int8]
	IEEE802154_ATTR_CHANNEL_PAGE_LIST		nlattr[IEEE802154_ATTR_CHANNEL_PAGE_LIST, array[int8, 128]]
	IEEE802154_ATTR_PHY_NAME			nlattr[IEEE802154_ATTR_PHY_NAME, stringnoz]
	IEEE802154_ATTR_DEV_TYPE			nlattr[IEEE802154_ATTR_DEV_TYPE, int8]
	IEEE802154_ATTR_TXPOWER				nlattr[IEEE802154_ATTR_TXPOWER, int8]
	IEEE802154_ATTR_LBT_ENABLED			nlattr[IEEE802154_ATTR_LBT_ENABLED, bool8]
	IEEE802154_ATTR_CCA_MODE			nlattr[IEEE802154_ATTR_CCA_MODE, int8]
	IEEE802154_ATTR_CCA_ED_LEVEL			nlattr[IEEE802154_ATTR_CCA_ED_LEVEL, int32]
	IEEE802154_ATTR_CSMA_RETRIES			nlattr[IEEE802154_ATTR_CSMA_RETRIES, int8]
	IEEE802154_ATTR_CSMA_MIN_BE			nlattr[IEEE802154_ATTR_CSMA_MIN_BE, int8]
	IEEE802154_ATTR_CSMA_MAX_BE			nlattr[IEEE802154_ATTR_CSMA_MAX_BE, int8]
	IEEE802154_ATTR_FRAME_RETRIES			nlattr[IEEE802154_ATTR_FRAME_RETRIES, int8]
	IEEE802154_ATTR_LLSEC_ENABLED			nlattr[IEEE802154_ATTR_LLSEC_ENABLED, bool8]
	IEEE802154_ATTR_LLSEC_SECLEVEL			nlattr[IEEE802154_ATTR_LLSEC_SECLEVEL, int8]
	IEEE802154_ATTR_LLSEC_KEY_MODE			nlattr[IEEE802154_ATTR_LLSEC_KEY_MODE, int8]
	IEEE802154_ATTR_LLSEC_KEY_SOURCE_SHORT		nlattr[IEEE802154_ATTR_LLSEC_KEY_SOURCE_SHORT, int32]
	IEEE802154_ATTR_LLSEC_KEY_SOURCE_EXTENDED	nlattr[IEEE802154_ATTR_LLSEC_KEY_SOURCE_EXTENDED, int64]
	IEEE802154_ATTR_LLSEC_KEY_ID			nlattr[IEEE802154_ATTR_LLSEC_KEY_ID, int8]
	IEEE802154_ATTR_LLSEC_FRAME_COUNTER		nlattr[IEEE802154_ATTR_LLSEC_FRAME_COUNTER, int32]
	IEEE802154_ATTR_LLSEC_KEY_BYTES			nlattr[IEEE802154_ATTR_LLSEC_KEY_BYTES, array[int8, 16]]
	IEEE802154_ATTR_LLSEC_KEY_USAGE_FRAME_TYPES	nlattr[IEEE802154_ATTR_LLSEC_KEY_USAGE_FRAME_TYPES, int8]
	IEEE802154_ATTR_LLSEC_KEY_USAGE_COMMANDS	nlattr[IEEE802154_ATTR_LLSEC_KEY_USAGE_COMMANDS, array[int8, 32]]
	IEEE802154_ATTR_LLSEC_FRAME_TYPE		nlattr[IEEE802154_ATTR_LLSEC_FRAME_TYPE, int8]
	IEEE802154_ATTR_LLSEC_CMD_FRAME_ID		nlattr[IEEE802154_ATTR_LLSEC_CMD_FRAME_ID, int8]
	IEEE802154_ATTR_LLSEC_SECLEVELS			nlattr[IEEE802154_ATTR_LLSEC_SECLEVELS, int8]
	IEEE802154_ATTR_LLSEC_DEV_OVERRIDE		nlattr[IEEE802154_ATTR_LLSEC_DEV_OVERRIDE, int8]
	IEEE802154_ATTR_LLSEC_DEV_KEY_MODE		nlattr[IEEE802154_ATTR_LLSEC_DEV_KEY_MODE, int8]
] [varlen]

ila_nl_policy$auto_ila_main [
	ILA_ATTR_LOCATOR	nlattr[ILA_ATTR_LOCATOR, int64]
	ILA_ATTR_LOCATOR_MATCH	nlattr[ILA_ATTR_LOCATOR_MATCH, int64]
	ILA_ATTR_IFINDEX	nlattr[ILA_ATTR_IFINDEX, ifindex]
	ILA_ATTR_CSUM_MODE	nlattr[ILA_ATTR_CSUM_MODE, int8]
	ILA_ATTR_IDENT_TYPE	nlattr[ILA_ATTR_IDENT_TYPE, int8]
] [varlen]

in6_addr$auto_record {
	in6_u	in6_addr_in6_u$auto_record
}

in6_addr_in6_u$auto_record [
	u6_addr8	array[int8, 16]
	u6_addr16	array[int16, 8]
	u6_addr32	array[int32, 4]
]

in_addr$auto_record {
	s_addr	int32
}

io_cqring_offsets$auto_record {
	head		int32
	tail		int32
	ring_mask	int32
	ring_entries	int32
	overflow	int32
	cqes		int32
	flags		int32
	resv1		int32
	user_addr	int64
}

io_event$auto_record {
	data	int64
	obj	int64
	res	int64
	res2	int64
}

io_sqring_offsets$auto_record {
	head		int32
	tail		int32
	ring_mask	int32
	ring_entries	int32
	flags		int32
	dropped		int32
	array		int32
	resv1		int32
	user_addr	int64
}

io_uring_params$auto_record {
	sq_entries	int32
	cq_entries	int32
	flags		int32
	sq_thread_cpu	int32
	sq_thread_idle	int32
	features	int32
	wq_fd		fd
	resv		array[int32, 3]
	sq_off		io_sqring_offsets$auto_record
	cq_off		io_cqring_offsets$auto_record
}

ioam6_genl_policy_addns$auto_ioam6 [
	IOAM6_ATTR_NS_ID	nlattr[IOAM6_ATTR_NS_ID, int16]
	IOAM6_ATTR_NS_DATA	nlattr[IOAM6_ATTR_NS_DATA, int32]
	IOAM6_ATTR_NS_DATA_WIDE	nlattr[IOAM6_ATTR_NS_DATA_WIDE, int64]
] [varlen]

ioam6_genl_policy_addsc$auto_ioam6 [
	IOAM6_ATTR_SC_ID	nlattr[IOAM6_ATTR_SC_ID, int32]
	IOAM6_ATTR_SC_DATA	nlattr[IOAM6_ATTR_SC_DATA, array[int8, 0:1020]]
] [varlen]

ioam6_genl_policy_delns$auto_ioam6 [
	IOAM6_ATTR_NS_ID	nlattr[IOAM6_ATTR_NS_ID, int16]
] [varlen]

ioam6_genl_policy_delsc$auto_ioam6 [
	IOAM6_ATTR_SC_ID	nlattr[IOAM6_ATTR_SC_ID, int32]
] [varlen]

ioam6_genl_policy_ns_sc$auto_ioam6 [
	IOAM6_ATTR_NS_ID	nlattr[IOAM6_ATTR_NS_ID, int16]
	IOAM6_ATTR_SC_ID	nlattr[IOAM6_ATTR_SC_ID, int32]
	IOAM6_ATTR_SC_NONE	nlattr[IOAM6_ATTR_SC_NONE, void]
] [varlen]

iocb$auto_record {
	aio_data	int64
	aio_key		int32
	aio_rw_flags	int32
	aio_lio_opcode	int16
	aio_reqprio	int16
	aio_fildes	fd
	aio_buf		int64
	aio_nbytes	int64
	aio_offset	int64
	aio_reserved2	const[0, int64]
	aio_flags	int32
	aio_resfd	fd
}

iovec$auto_record {
	iov_base	ptr[inout, array[auto_todo]]
	iov_len		intptr
}

ip_vs_cmd_policy$auto_ip_vs_ctl [
	IPVS_CMD_ATTR_SERVICE		nlnest[IPVS_CMD_ATTR_SERVICE, array[nl_generic_attr]]
	IPVS_CMD_ATTR_DEST		nlnest[IPVS_CMD_ATTR_DEST, array[nl_generic_attr]]
	IPVS_CMD_ATTR_DAEMON		nlnest[IPVS_CMD_ATTR_DAEMON, array[nl_generic_attr]]
	IPVS_CMD_ATTR_TIMEOUT_TCP	nlattr[IPVS_CMD_ATTR_TIMEOUT_TCP, int32]
	IPVS_CMD_ATTR_TIMEOUT_TCP_FIN	nlattr[IPVS_CMD_ATTR_TIMEOUT_TCP_FIN, int32]
	IPVS_CMD_ATTR_TIMEOUT_UDP	nlattr[IPVS_CMD_ATTR_TIMEOUT_UDP, int32]
] [varlen]

ipc_perm$auto_record {
	key	int32
	uid	uid
	gid	gid
	cuid	int32
	cgid	int32
	mode	int32
	seq	int16
}

kexec_segment$auto_record {
	kexec_segment_0	kexec_segment_0$auto_record
	bufsz		intptr
	mem		intptr
	memsz		intptr
}

kexec_segment_0$auto_record [
	buf	ptr[inout, array[auto_todo]]
	kbuf	ptr[inout, array[auto_todo]]
]

l2tp_nl_policy$auto_l2tp_netlink [
	L2TP_ATTR_NONE			nlattr[L2TP_ATTR_NONE, array[int8]]
	L2TP_ATTR_PW_TYPE		nlattr[L2TP_ATTR_PW_TYPE, int16]
	L2TP_ATTR_ENCAP_TYPE		nlattr[L2TP_ATTR_ENCAP_TYPE, int16]
	L2TP_ATTR_OFFSET		nlattr[L2TP_ATTR_OFFSET, int16]
	L2TP_ATTR_DATA_SEQ		nlattr[L2TP_ATTR_DATA_SEQ, int8]
	L2TP_ATTR_L2SPEC_TYPE		nlattr[L2TP_ATTR_L2SPEC_TYPE, int8]
	L2TP_ATTR_L2SPEC_LEN		nlattr[L2TP_ATTR_L2SPEC_LEN, int8]
	L2TP_ATTR_PROTO_VERSION		nlattr[L2TP_ATTR_PROTO_VERSION, int8]
	L2TP_ATTR_IFNAME		nlattr[L2TP_ATTR_IFNAME, devname]
	L2TP_ATTR_CONN_ID		nlattr[L2TP_ATTR_CONN_ID, int32]
	L2TP_ATTR_PEER_CONN_ID		nlattr[L2TP_ATTR_PEER_CONN_ID, int32]
	L2TP_ATTR_SESSION_ID		nlattr[L2TP_ATTR_SESSION_ID, int32]
	L2TP_ATTR_PEER_SESSION_ID	nlattr[L2TP_ATTR_PEER_SESSION_ID, int32]
	L2TP_ATTR_UDP_CSUM		nlattr[L2TP_ATTR_UDP_CSUM, int8]
	L2TP_ATTR_VLAN_ID		nlattr[L2TP_ATTR_VLAN_ID, int16]
	L2TP_ATTR_COOKIE		nlattr[L2TP_ATTR_COOKIE, int64]
	L2TP_ATTR_PEER_COOKIE		nlattr[L2TP_ATTR_PEER_COOKIE, int64]
	L2TP_ATTR_DEBUG			nlattr[L2TP_ATTR_DEBUG, int32]
	L2TP_ATTR_RECV_SEQ		nlattr[L2TP_ATTR_RECV_SEQ, int8]
	L2TP_ATTR_SEND_SEQ		nlattr[L2TP_ATTR_SEND_SEQ, int8]
	L2TP_ATTR_LNS_MODE		nlattr[L2TP_ATTR_LNS_MODE, int8]
	L2TP_ATTR_USING_IPSEC		nlattr[L2TP_ATTR_USING_IPSEC, int8]
	L2TP_ATTR_RECV_TIMEOUT		nlattr[L2TP_ATTR_RECV_TIMEOUT, int64]
	L2TP_ATTR_FD			nlattr[L2TP_ATTR_FD, fd]
	L2TP_ATTR_IP_SADDR		nlattr[L2TP_ATTR_IP_SADDR, int32]
	L2TP_ATTR_IP_DADDR		nlattr[L2TP_ATTR_IP_DADDR, int32]
	L2TP_ATTR_UDP_SPORT		nlattr[L2TP_ATTR_UDP_SPORT, sock_port]
	L2TP_ATTR_UDP_DPORT		nlattr[L2TP_ATTR_UDP_DPORT, sock_port]
	L2TP_ATTR_MTU			nlattr[L2TP_ATTR_MTU, int16]
	L2TP_ATTR_MRU			nlattr[L2TP_ATTR_MRU, int16]
	L2TP_ATTR_STATS			nlnest[L2TP_ATTR_STATS, array[nl_generic_attr]]
	L2TP_ATTR_IP6_SADDR		nlattr[L2TP_ATTR_IP6_SADDR, in6_addr$auto_record]
	L2TP_ATTR_IP6_DADDR		nlattr[L2TP_ATTR_IP6_DADDR, in6_addr$auto_record]
] [varlen]

landlock_ruleset_attr$auto_record {
	handled_access_fs	int64
	handled_access_net	int64
	scoped			int64
}

linux_dirent$auto_record {
	d_ino		intptr
	d_off		intptr
	d_reclen	int16
	d_name		array[int8]
}

linux_dirent64$auto_record {
	d_ino		int64
	d_off		int64
	d_reclen	int16
	d_type		int8
	d_name		array[int8]
}

lsm_ctx$auto_record {
	id	int64
	flags	int64
	len	int64
	ctx_len	len[ctx, int64]
	ctx	array[int8]
}

macsec_genl_policy$auto_macsec [
	MACSEC_ATTR_IFINDEX	nlattr[MACSEC_ATTR_IFINDEX, ifindex]
	MACSEC_ATTR_RXSC_CONFIG	nlnest[MACSEC_ATTR_RXSC_CONFIG, array[nl_generic_attr]]
	MACSEC_ATTR_SA_CONFIG	nlnest[MACSEC_ATTR_SA_CONFIG, array[nl_generic_attr]]
	MACSEC_ATTR_OFFLOAD	nlnest[MACSEC_ATTR_OFFLOAD, array[nl_generic_attr]]
] [varlen]

meter_policy$auto_meter [
	OVS_METER_ATTR_ID		nlattr[OVS_METER_ATTR_ID, int32]
	OVS_METER_ATTR_KBPS		nlattr[OVS_METER_ATTR_KBPS, void]
	OVS_METER_ATTR_STATS		nlattr[OVS_METER_ATTR_STATS, ovs_flow_stats$auto_record]
	OVS_METER_ATTR_BANDS		nlnest[OVS_METER_ATTR_BANDS, array[nl_generic_attr]]
	OVS_METER_ATTR_USED		nlattr[OVS_METER_ATTR_USED, int64]
	OVS_METER_ATTR_CLEAR		nlattr[OVS_METER_ATTR_CLEAR, void]
	OVS_METER_ATTR_MAX_METERS	nlattr[OVS_METER_ATTR_MAX_METERS, int32]
	OVS_METER_ATTR_MAX_BANDS	nlattr[OVS_METER_ATTR_MAX_BANDS, int32]
] [varlen]

mmsghdr$auto_record {
	msg_hdr	user_msghdr$auto_record
	msg_len	int32
}

mnt_id_req$auto_record {
	size		int32
	spare		int32
	mnt_id		int64
	param		int64
	mnt_ns_id	int64
}

mount_attr$auto_record {
	attr_set	int64
	attr_clr	int64
	propagation	int64
	userns_fd	int64
}

mq_attr$auto_record {
	mq_flags	intptr
	mq_maxmsg	intptr
	mq_msgsize	intptr
	mq_curmsgs	intptr
	__reserved	array[const[0, intptr], 4]
}

msgbuf$auto_record {
	mtype	intptr
	mtext	int8
}

msqid_ds$auto_record {
	msg_perm	ipc_perm$auto_record
	msg_first	ptr[inout, auto_todo]
	msg_last	ptr[inout, auto_todo]
	msg_stime	intptr
	msg_rtime	intptr
	msg_ctime	intptr
	msg_lcbytes	intptr
	msg_lqbytes	intptr
	msg_cbytes	int16
	msg_qnum	int16
	msg_qbytes	int16
	msg_lspid	int32
	msg_lrpid	int32
}

nbd_attr_policy$auto_nbd [
	NBD_ATTR_INDEX			nlattr[NBD_ATTR_INDEX, int32]
	NBD_ATTR_SIZE_BYTES		nlattr[NBD_ATTR_SIZE_BYTES, int64]
	NBD_ATTR_BLOCK_SIZE_BYTES	nlattr[NBD_ATTR_BLOCK_SIZE_BYTES, int64]
	NBD_ATTR_TIMEOUT		nlattr[NBD_ATTR_TIMEOUT, int64]
	NBD_ATTR_SERVER_FLAGS		nlattr[NBD_ATTR_SERVER_FLAGS, int64]
	NBD_ATTR_CLIENT_FLAGS		nlattr[NBD_ATTR_CLIENT_FLAGS, int64]
	NBD_ATTR_SOCKETS		nlnest[NBD_ATTR_SOCKETS, array[nl_generic_attr]]
	NBD_ATTR_DEAD_CONN_TIMEOUT	nlattr[NBD_ATTR_DEAD_CONN_TIMEOUT, int64]
	NBD_ATTR_DEVICE_LIST		nlnest[NBD_ATTR_DEVICE_LIST, array[nl_generic_attr]]
	NBD_ATTR_BACKEND_IDENTIFIER	nlattr[NBD_ATTR_BACKEND_IDENTIFIER, stringnoz]
] [varlen]

ncsi_genl_policy$auto_ncsi_netlink [
	NCSI_ATTR_IFINDEX	nlattr[NCSI_ATTR_IFINDEX, ifindex]
	NCSI_ATTR_PACKAGE_LIST	nlnest[NCSI_ATTR_PACKAGE_LIST, array[nl_generic_attr]]
	NCSI_ATTR_PACKAGE_ID	nlattr[NCSI_ATTR_PACKAGE_ID, int32]
	NCSI_ATTR_CHANNEL_ID	nlattr[NCSI_ATTR_CHANNEL_ID, int32]
	NCSI_ATTR_DATA		nlattr[NCSI_ATTR_DATA, array[int8, 0:2048]]
	NCSI_ATTR_MULTI_FLAG	nlattr[NCSI_ATTR_MULTI_FLAG, void]
	NCSI_ATTR_PACKAGE_MASK	nlattr[NCSI_ATTR_PACKAGE_MASK, int32]
	NCSI_ATTR_CHANNEL_MASK	nlattr[NCSI_ATTR_CHANNEL_MASK, int32]
] [varlen]

net_dm_nl_policy$auto_drop_monitor [
	NET_DM_ATTR_UNSPEC	nlattr[NET_DM_ATTR_UNSPEC, array[int8]]
	NET_DM_ATTR_ALERT_MODE	nlattr[NET_DM_ATTR_ALERT_MODE, int8]
	NET_DM_ATTR_TRUNC_LEN	nlattr[NET_DM_ATTR_TRUNC_LEN, int32]
	NET_DM_ATTR_QUEUE_LEN	nlattr[NET_DM_ATTR_QUEUE_LEN, int32]
	NET_DM_ATTR_SW_DROPS	nlattr[NET_DM_ATTR_SW_DROPS, void]
	NET_DM_ATTR_HW_DROPS	nlattr[NET_DM_ATTR_HW_DROPS, void]
] [varlen]

net_shaper_cap_get_do_nl_policy$auto_shaper_nl_gen [
	NET_SHAPER_A_CAPS_IFINDEX	nlattr[NET_SHAPER_A_CAPS_IFINDEX, ifindex]
	NET_SHAPER_A_CAPS_SCOPE		nlattr[NET_SHAPER_A_CAPS_SCOPE, int32]
] [varlen]

net_shaper_cap_get_dump_nl_policy$auto_shaper_nl_gen [
	NET_SHAPER_A_CAPS_IFINDEX	nlattr[NET_SHAPER_A_CAPS_IFINDEX, ifindex]
] [varlen]

net_shaper_delete_nl_policy$auto_shaper_nl_gen [
	NET_SHAPER_A_HANDLE	nlnest[NET_SHAPER_A_HANDLE, array[net_shaper_handle_nl_policy$auto_shaper_nl_gen]]
	NET_SHAPER_A_IFINDEX	nlattr[NET_SHAPER_A_IFINDEX, ifindex]
] [varlen]

net_shaper_get_do_nl_policy$auto_shaper_nl_gen [
	NET_SHAPER_A_HANDLE	nlnest[NET_SHAPER_A_HANDLE, array[net_shaper_handle_nl_policy$auto_shaper_nl_gen]]
	NET_SHAPER_A_IFINDEX	nlattr[NET_SHAPER_A_IFINDEX, ifindex]
] [varlen]

net_shaper_get_dump_nl_policy$auto_shaper_nl_gen [
	NET_SHAPER_A_IFINDEX	nlattr[NET_SHAPER_A_IFINDEX, ifindex]
] [varlen]

net_shaper_group_nl_policy$auto_shaper_nl_gen [
	NET_SHAPER_A_HANDLE	nlnest[NET_SHAPER_A_HANDLE, array[net_shaper_handle_nl_policy$auto_shaper_nl_gen]]
	NET_SHAPER_A_METRIC	nlattr[NET_SHAPER_A_METRIC, int32]
	NET_SHAPER_A_BW_MIN	nlattr[NET_SHAPER_A_BW_MIN, int64]
	NET_SHAPER_A_BW_MAX	nlattr[NET_SHAPER_A_BW_MAX, int64]
	NET_SHAPER_A_BURST	nlattr[NET_SHAPER_A_BURST, int64]
	NET_SHAPER_A_PRIORITY	nlattr[NET_SHAPER_A_PRIORITY, int32]
	NET_SHAPER_A_WEIGHT	nlattr[NET_SHAPER_A_WEIGHT, int32]
	NET_SHAPER_A_IFINDEX	nlattr[NET_SHAPER_A_IFINDEX, ifindex]
	NET_SHAPER_A_PARENT	nlnest[NET_SHAPER_A_PARENT, array[net_shaper_handle_nl_policy$auto_shaper_nl_gen]]
	NET_SHAPER_A_LEAVES	nlnest[NET_SHAPER_A_LEAVES, array[net_shaper_leaf_info_nl_policy$auto_shaper_nl_gen]]
] [varlen]

net_shaper_handle_nl_policy$auto_shaper_nl_gen [
	NET_SHAPER_A_HANDLE_SCOPE	nlattr[NET_SHAPER_A_HANDLE_SCOPE, int32]
	NET_SHAPER_A_HANDLE_ID		nlattr[NET_SHAPER_A_HANDLE_ID, int32]
] [varlen]

net_shaper_leaf_info_nl_policy$auto_shaper_nl_gen [
	NET_SHAPER_A_HANDLE	nlnest[NET_SHAPER_A_HANDLE, array[net_shaper_handle_nl_policy$auto_shaper_nl_gen]]
	NET_SHAPER_A_PRIORITY	nlattr[NET_SHAPER_A_PRIORITY, int32]
	NET_SHAPER_A_WEIGHT	nlattr[NET_SHAPER_A_WEIGHT, int32]
] [varlen]

net_shaper_set_nl_policy$auto_shaper_nl_gen [
	NET_SHAPER_A_HANDLE	nlnest[NET_SHAPER_A_HANDLE, array[net_shaper_handle_nl_policy$auto_shaper_nl_gen]]
	NET_SHAPER_A_METRIC	nlattr[NET_SHAPER_A_METRIC, int32]
	NET_SHAPER_A_BW_MIN	nlattr[NET_SHAPER_A_BW_MIN, int64]
	NET_SHAPER_A_BW_MAX	nlattr[NET_SHAPER_A_BW_MAX, int64]
	NET_SHAPER_A_BURST	nlattr[NET_SHAPER_A_BURST, int64]
	NET_SHAPER_A_PRIORITY	nlattr[NET_SHAPER_A_PRIORITY, int32]
	NET_SHAPER_A_WEIGHT	nlattr[NET_SHAPER_A_WEIGHT, int32]
	NET_SHAPER_A_IFINDEX	nlattr[NET_SHAPER_A_IFINDEX, ifindex]
] [varlen]

netdev_bind_rx_nl_policy$auto_netdev_genl_gen [
	NETDEV_A_DMABUF_IFINDEX	nlattr[NETDEV_A_DMABUF_IFINDEX, ifindex]
	NETDEV_A_DMABUF_QUEUES	nlnest[NETDEV_A_DMABUF_QUEUES, array[netdev_queue_id_nl_policy$auto_netdev_genl_gen]]
	NETDEV_A_DMABUF_FD	nlattr[NETDEV_A_DMABUF_FD, fd]
] [varlen]

netdev_dev_get_nl_policy$auto_netdev_genl_gen [
	NETDEV_A_DEV_IFINDEX	nlattr[NETDEV_A_DEV_IFINDEX, ifindex]
] [varlen]

netdev_napi_get_do_nl_policy$auto_netdev_genl_gen [
	NETDEV_A_NAPI_ID	nlattr[NETDEV_A_NAPI_ID, int32]
] [varlen]

netdev_napi_get_dump_nl_policy$auto_netdev_genl_gen [
	NETDEV_A_NAPI_IFINDEX	nlattr[NETDEV_A_NAPI_IFINDEX, ifindex]
] [varlen]

netdev_napi_set_nl_policy$auto_netdev_genl_gen [
	NETDEV_A_NAPI_ID			nlattr[NETDEV_A_NAPI_ID, int32]
	NETDEV_A_NAPI_DEFER_HARD_IRQS		nlattr[NETDEV_A_NAPI_DEFER_HARD_IRQS, int32]
	NETDEV_A_NAPI_GRO_FLUSH_TIMEOUT		nlattr[NETDEV_A_NAPI_GRO_FLUSH_TIMEOUT, int64]
	NETDEV_A_NAPI_IRQ_SUSPEND_TIMEOUT	nlattr[NETDEV_A_NAPI_IRQ_SUSPEND_TIMEOUT, int64]
] [varlen]

netdev_page_pool_get_nl_policy$auto_netdev_genl_gen [
	NETDEV_A_PAGE_POOL_ID	nlattr[NETDEV_A_PAGE_POOL_ID, int64]
] [varlen]

netdev_qstats_get_nl_policy$auto_netdev_genl_gen [
	NETDEV_A_QSTATS_IFINDEX	nlattr[NETDEV_A_QSTATS_IFINDEX, ifindex]
	NETDEV_A_QSTATS_SCOPE	nlattr[NETDEV_A_QSTATS_SCOPE, int64]
] [varlen]

netdev_queue_get_do_nl_policy$auto_netdev_genl_gen [
	NETDEV_A_QUEUE_ID	nlattr[NETDEV_A_QUEUE_ID, int32]
	NETDEV_A_QUEUE_IFINDEX	nlattr[NETDEV_A_QUEUE_IFINDEX, ifindex]
	NETDEV_A_QUEUE_TYPE	nlattr[NETDEV_A_QUEUE_TYPE, int32]
] [varlen]

netdev_queue_get_dump_nl_policy$auto_netdev_genl_gen [
	NETDEV_A_QUEUE_IFINDEX	nlattr[NETDEV_A_QUEUE_IFINDEX, ifindex]
] [varlen]

netdev_queue_id_nl_policy$auto_netdev_genl_gen [
	NETDEV_A_QUEUE_ID	nlattr[NETDEV_A_QUEUE_ID, int32]
	NETDEV_A_QUEUE_TYPE	nlattr[NETDEV_A_QUEUE_TYPE, int32]
] [varlen]

netlbl_cipsov4_genl_policy$auto_netlabel_cipso_v4 [
	NLBL_CIPSOV4_A_DOI		nlattr[NLBL_CIPSOV4_A_DOI, int32]
	NLBL_CIPSOV4_A_MTYPE		nlattr[NLBL_CIPSOV4_A_MTYPE, int32]
	NLBL_CIPSOV4_A_TAG		nlattr[NLBL_CIPSOV4_A_TAG, int8]
	NLBL_CIPSOV4_A_TAGLST		nlnest[NLBL_CIPSOV4_A_TAGLST, array[nl_generic_attr]]
	NLBL_CIPSOV4_A_MLSLVLLOC	nlattr[NLBL_CIPSOV4_A_MLSLVLLOC, int32]
	NLBL_CIPSOV4_A_MLSLVLREM	nlattr[NLBL_CIPSOV4_A_MLSLVLREM, int32]
	NLBL_CIPSOV4_A_MLSLVL		nlnest[NLBL_CIPSOV4_A_MLSLVL, array[nl_generic_attr]]
	NLBL_CIPSOV4_A_MLSLVLLST	nlnest[NLBL_CIPSOV4_A_MLSLVLLST, array[nl_generic_attr]]
	NLBL_CIPSOV4_A_MLSCATLOC	nlattr[NLBL_CIPSOV4_A_MLSCATLOC, int32]
	NLBL_CIPSOV4_A_MLSCATREM	nlattr[NLBL_CIPSOV4_A_MLSCATREM, int32]
	NLBL_CIPSOV4_A_MLSCAT		nlnest[NLBL_CIPSOV4_A_MLSCAT, array[nl_generic_attr]]
	NLBL_CIPSOV4_A_MLSCATLST	nlnest[NLBL_CIPSOV4_A_MLSCATLST, array[nl_generic_attr]]
] [varlen]

netlbl_mgmt_genl_policy$auto_netlabel_mgmt [
	NLBL_MGMT_A_DOMAIN	nlattr[NLBL_MGMT_A_DOMAIN, string]
	NLBL_MGMT_A_PROTOCOL	nlattr[NLBL_MGMT_A_PROTOCOL, int32]
	NLBL_MGMT_A_VERSION	nlattr[NLBL_MGMT_A_VERSION, int32]
	NLBL_MGMT_A_CV4DOI	nlattr[NLBL_MGMT_A_CV4DOI, int32]
	NLBL_MGMT_A_FAMILY	nlattr[NLBL_MGMT_A_FAMILY, int16]
	NLBL_MGMT_A_CLPDOI	nlattr[NLBL_MGMT_A_CLPDOI, int32]
] [varlen]

netlbl_unlabel_genl_policy$auto_netlabel_unlabeled [
	NLBL_UNLABEL_A_ACPTFLG	nlattr[NLBL_UNLABEL_A_ACPTFLG, int8]
	NLBL_UNLABEL_A_IPV6ADDR	nlattr[NLBL_UNLABEL_A_IPV6ADDR, in6_addr$auto_record]
	NLBL_UNLABEL_A_IPV6MASK	nlattr[NLBL_UNLABEL_A_IPV6MASK, in6_addr$auto_record]
	NLBL_UNLABEL_A_IPV4ADDR	nlattr[NLBL_UNLABEL_A_IPV4ADDR, in_addr$auto_record]
	NLBL_UNLABEL_A_IPV4MASK	nlattr[NLBL_UNLABEL_A_IPV4MASK, in_addr$auto_record]
	NLBL_UNLABEL_A_IFACE	nlattr[NLBL_UNLABEL_A_IFACE, string]
	NLBL_UNLABEL_A_SECCTX	nlattr[NLBL_UNLABEL_A_SECCTX, array[int8]]
] [varlen]

new_utsname$auto_record {
	sysname		array[int8, 65]
	nodename	array[int8, 65]
	release		array[int8, 65]
	version		array[int8, 65]
	machine		array[int8, 65]
	domainname	array[int8, 65]
}

nfc_genl_policy$auto_netlink [
	NFC_ATTR_DEVICE_INDEX	nlattr[NFC_ATTR_DEVICE_INDEX, int32]
	NFC_ATTR_DEVICE_NAME	nlattr[NFC_ATTR_DEVICE_NAME, stringnoz]
	NFC_ATTR_PROTOCOLS	nlattr[NFC_ATTR_PROTOCOLS, int32]
	NFC_ATTR_TARGET_INDEX	nlattr[NFC_ATTR_TARGET_INDEX, int32]
	NFC_ATTR_COMM_MODE	nlattr[NFC_ATTR_COMM_MODE, int8]
	NFC_ATTR_RF_MODE	nlattr[NFC_ATTR_RF_MODE, int8]
	NFC_ATTR_DEVICE_POWERED	nlattr[NFC_ATTR_DEVICE_POWERED, int8]
	NFC_ATTR_IM_PROTOCOLS	nlattr[NFC_ATTR_IM_PROTOCOLS, int32]
	NFC_ATTR_TM_PROTOCOLS	nlattr[NFC_ATTR_TM_PROTOCOLS, int32]
	NFC_ATTR_LLC_PARAM_LTO	nlattr[NFC_ATTR_LLC_PARAM_LTO, int8]
	NFC_ATTR_LLC_PARAM_RW	nlattr[NFC_ATTR_LLC_PARAM_RW, int8]
	NFC_ATTR_LLC_PARAM_MIUX	nlattr[NFC_ATTR_LLC_PARAM_MIUX, int16]
	NFC_ATTR_LLC_SDP	nlnest[NFC_ATTR_LLC_SDP, array[nl_generic_attr]]
	NFC_ATTR_FIRMWARE_NAME	nlattr[NFC_ATTR_FIRMWARE_NAME, stringnoz]
	NFC_ATTR_SE_INDEX	nlattr[NFC_ATTR_SE_INDEX, int32]
	NFC_ATTR_SE_APDU	nlattr[NFC_ATTR_SE_APDU, array[int8]]
	NFC_ATTR_VENDOR_ID	nlattr[NFC_ATTR_VENDOR_ID, int32]
	NFC_ATTR_VENDOR_SUBCMD	nlattr[NFC_ATTR_VENDOR_SUBCMD, int32]
	NFC_ATTR_VENDOR_DATA	nlattr[NFC_ATTR_VENDOR_DATA, array[int8]]
] [varlen]

nfsd_listener_set_nl_policy$auto_netlink [
	NFSD_A_SERVER_SOCK_ADDR	nlnest[NFSD_A_SERVER_SOCK_ADDR, array[nfsd_sock_nl_policy$auto_netlink]]
] [varlen]

nfsd_pool_mode_set_nl_policy$auto_netlink [
	NFSD_A_POOL_MODE_MODE	nlattr[NFSD_A_POOL_MODE_MODE, string]
] [varlen]

nfsd_sock_nl_policy$auto_netlink [
	NFSD_A_SOCK_ADDR		nlattr[NFSD_A_SOCK_ADDR, array[int8]]
	NFSD_A_SOCK_TRANSPORT_NAME	nlattr[NFSD_A_SOCK_TRANSPORT_NAME, string]
] [varlen]

nfsd_threads_set_nl_policy$auto_netlink [
	NFSD_A_SERVER_THREADS	nlattr[NFSD_A_SERVER_THREADS, int32]
	NFSD_A_SERVER_GRACETIME	nlattr[NFSD_A_SERVER_GRACETIME, int32]
	NFSD_A_SERVER_LEASETIME	nlattr[NFSD_A_SERVER_LEASETIME, int32]
	NFSD_A_SERVER_SCOPE	nlattr[NFSD_A_SERVER_SCOPE, string]
] [varlen]

nfsd_version_nl_policy$auto_netlink [
	NFSD_A_VERSION_MAJOR	nlattr[NFSD_A_VERSION_MAJOR, int32]
	NFSD_A_VERSION_MINOR	nlattr[NFSD_A_VERSION_MINOR, int32]
	NFSD_A_VERSION_ENABLED	nlattr[NFSD_A_VERSION_ENABLED, void]
] [varlen]

nfsd_version_set_nl_policy$auto_netlink [
	NFSD_A_SERVER_PROTO_VERSION	nlnest[NFSD_A_SERVER_PROTO_VERSION, array[nfsd_version_nl_policy$auto_netlink]]
] [varlen]

nl80211_bss_select_rssi_adjust$auto_record {
	band	int8
	delta	int8
} [packed]

nl80211_fils_discovery_policy$auto_nl80211 [
	NL80211_FILS_DISCOVERY_ATTR_INT_MIN	nlattr[NL80211_FILS_DISCOVERY_ATTR_INT_MIN, int32]
	NL80211_FILS_DISCOVERY_ATTR_INT_MAX	nlattr[NL80211_FILS_DISCOVERY_ATTR_INT_MAX, int32]
	NL80211_FILS_DISCOVERY_ATTR_TMPL	nlattr[NL80211_FILS_DISCOVERY_ATTR_TMPL, array[int8]]
] [varlen]

nl80211_ftm_responder_policy$auto_nl80211 [
	NL80211_FTM_RESP_ATTR_ENABLED	nlattr[NL80211_FTM_RESP_ATTR_ENABLED, void]
	NL80211_FTM_RESP_ATTR_LCI	nlattr[NL80211_FTM_RESP_ATTR_LCI, array[int8, 0:255]]
	NL80211_FTM_RESP_ATTR_CIVICLOC	nlattr[NL80211_FTM_RESP_ATTR_CIVICLOC, array[int8, 0:255]]
] [varlen]

nl80211_mbssid_config_policy$auto_nl80211 [
	NL80211_MBSSID_CONFIG_ATTR_MAX_INTERFACES		nlattr[NL80211_MBSSID_CONFIG_ATTR_MAX_INTERFACES, int8]
	NL80211_MBSSID_CONFIG_ATTR_MAX_EMA_PROFILE_PERIODICITY	nlattr[NL80211_MBSSID_CONFIG_ATTR_MAX_EMA_PROFILE_PERIODICITY, int8]
	NL80211_MBSSID_CONFIG_ATTR_INDEX			nlattr[NL80211_MBSSID_CONFIG_ATTR_INDEX, int8]
	NL80211_MBSSID_CONFIG_ATTR_TX_IFINDEX			nlattr[NL80211_MBSSID_CONFIG_ATTR_TX_IFINDEX, ifindex]
	NL80211_MBSSID_CONFIG_ATTR_EMA				nlattr[NL80211_MBSSID_CONFIG_ATTR_EMA, void]
] [varlen]

nl80211_pmsr_attr_policy$auto_nl80211 [
	NL80211_PMSR_ATTR_PEERS	nlnest[NL80211_PMSR_ATTR_PEERS, array[nlnest[0, array[nl80211_pmsr_peer_attr_policy$auto_nl80211]]]]
] [varlen]

nl80211_pmsr_ftm_req_attr_policy$auto_nl80211 [
	NL80211_PMSR_FTM_REQ_ATTR_ASAP			nlattr[NL80211_PMSR_FTM_REQ_ATTR_ASAP, void]
	NL80211_PMSR_FTM_REQ_ATTR_PREAMBLE		nlattr[NL80211_PMSR_FTM_REQ_ATTR_PREAMBLE, int32]
	NL80211_PMSR_FTM_REQ_ATTR_NUM_BURSTS_EXP	nlattr[NL80211_PMSR_FTM_REQ_ATTR_NUM_BURSTS_EXP, int8]
	NL80211_PMSR_FTM_REQ_ATTR_BURST_PERIOD		nlattr[NL80211_PMSR_FTM_REQ_ATTR_BURST_PERIOD, int16]
	NL80211_PMSR_FTM_REQ_ATTR_BURST_DURATION	nlattr[NL80211_PMSR_FTM_REQ_ATTR_BURST_DURATION, int8]
	NL80211_PMSR_FTM_REQ_ATTR_FTMS_PER_BURST	nlattr[NL80211_PMSR_FTM_REQ_ATTR_FTMS_PER_BURST, int8]
	NL80211_PMSR_FTM_REQ_ATTR_NUM_FTMR_RETRIES	nlattr[NL80211_PMSR_FTM_REQ_ATTR_NUM_FTMR_RETRIES, int8]
	NL80211_PMSR_FTM_REQ_ATTR_REQUEST_LCI		nlattr[NL80211_PMSR_FTM_REQ_ATTR_REQUEST_LCI, void]
	NL80211_PMSR_FTM_REQ_ATTR_REQUEST_CIVICLOC	nlattr[NL80211_PMSR_FTM_REQ_ATTR_REQUEST_CIVICLOC, void]
	NL80211_PMSR_FTM_REQ_ATTR_TRIGGER_BASED		nlattr[NL80211_PMSR_FTM_REQ_ATTR_TRIGGER_BASED, void]
	NL80211_PMSR_FTM_REQ_ATTR_NON_TRIGGER_BASED	nlattr[NL80211_PMSR_FTM_REQ_ATTR_NON_TRIGGER_BASED, void]
	NL80211_PMSR_FTM_REQ_ATTR_LMR_FEEDBACK		nlattr[NL80211_PMSR_FTM_REQ_ATTR_LMR_FEEDBACK, void]
	NL80211_PMSR_FTM_REQ_ATTR_BSS_COLOR		nlattr[NL80211_PMSR_FTM_REQ_ATTR_BSS_COLOR, int8]
] [varlen]

nl80211_pmsr_peer_attr_policy$auto_nl80211 [
	NL80211_PMSR_PEER_ATTR_ADDR	nlattr[NL80211_PMSR_PEER_ATTR_ADDR, array[int8]]
	NL80211_PMSR_PEER_ATTR_CHAN	nlnest[NL80211_PMSR_PEER_ATTR_CHAN, array[nl80211_policy$auto_nl80211]]
	NL80211_PMSR_PEER_ATTR_REQ	nlnest[NL80211_PMSR_PEER_ATTR_REQ, array[nl80211_pmsr_req_attr_policy$auto_nl80211]]
] [varlen]

nl80211_pmsr_req_attr_policy$auto_nl80211 [
	NL80211_PMSR_REQ_ATTR_DATA		nlnest[NL80211_PMSR_REQ_ATTR_DATA, array[nl80211_pmsr_req_data_policy$auto_nl80211]]
	NL80211_PMSR_REQ_ATTR_GET_AP_TSF	nlattr[NL80211_PMSR_REQ_ATTR_GET_AP_TSF, void]
] [varlen]

nl80211_pmsr_req_data_policy$auto_nl80211 [
	NL80211_PMSR_TYPE_FTM	nlnest[NL80211_PMSR_TYPE_FTM, array[nl80211_pmsr_ftm_req_attr_policy$auto_nl80211]]
] [varlen]

nl80211_policy$auto_nl80211 [
	NL80211_ATTR_WIPHY				nlattr[NL80211_ATTR_WIPHY, int32]
	NL80211_ATTR_WIPHY_NAME				nlattr[NL80211_ATTR_WIPHY_NAME, string]
	NL80211_ATTR_IFINDEX				nlattr[NL80211_ATTR_IFINDEX, ifindex]
	NL80211_ATTR_IFNAME				nlattr[NL80211_ATTR_IFNAME, devname]
	NL80211_ATTR_IFTYPE				nlattr[NL80211_ATTR_IFTYPE, int32]
	NL80211_ATTR_MAC				nlattr[NL80211_ATTR_MAC, array[int8]]
	NL80211_ATTR_KEY_DATA				nlattr[NL80211_ATTR_KEY_DATA, array[int8, 0:32]]
	NL80211_ATTR_KEY_IDX				nlattr[NL80211_ATTR_KEY_IDX, int8]
	NL80211_ATTR_KEY_CIPHER				nlattr[NL80211_ATTR_KEY_CIPHER, int32]
	NL80211_ATTR_KEY_SEQ				nlattr[NL80211_ATTR_KEY_SEQ, array[int8, 0:16]]
	NL80211_ATTR_KEY_DEFAULT			nlattr[NL80211_ATTR_KEY_DEFAULT, void]
	NL80211_ATTR_BEACON_INTERVAL			nlattr[NL80211_ATTR_BEACON_INTERVAL, int32]
	NL80211_ATTR_DTIM_PERIOD			nlattr[NL80211_ATTR_DTIM_PERIOD, int32]
	NL80211_ATTR_BEACON_HEAD			nlattr[NL80211_ATTR_BEACON_HEAD, array[int8, 0:2304]]
	NL80211_ATTR_BEACON_TAIL			nlattr[NL80211_ATTR_BEACON_TAIL, array[int8, 0:2304]]
	NL80211_ATTR_STA_AID				nlattr[NL80211_ATTR_STA_AID, int16]
	NL80211_ATTR_STA_FLAGS				nlnest[NL80211_ATTR_STA_FLAGS, array[nl_generic_attr]]
	NL80211_ATTR_STA_LISTEN_INTERVAL		nlattr[NL80211_ATTR_STA_LISTEN_INTERVAL, int16]
	NL80211_ATTR_STA_SUPPORTED_RATES		nlattr[NL80211_ATTR_STA_SUPPORTED_RATES, array[int8, 0:32]]
	NL80211_ATTR_STA_VLAN				nlattr[NL80211_ATTR_STA_VLAN, int32]
	NL80211_ATTR_MNTR_FLAGS				nlattr[NL80211_ATTR_MNTR_FLAGS, array[int8]]
	NL80211_ATTR_MESH_ID				nlattr[NL80211_ATTR_MESH_ID, array[int8, 0:32]]
	NL80211_ATTR_STA_PLINK_ACTION			nlattr[NL80211_ATTR_STA_PLINK_ACTION, int8]
	NL80211_ATTR_MPATH_NEXT_HOP			nlattr[NL80211_ATTR_MPATH_NEXT_HOP, array[int8]]
	NL80211_ATTR_BSS_CTS_PROT			nlattr[NL80211_ATTR_BSS_CTS_PROT, int8]
	NL80211_ATTR_BSS_SHORT_PREAMBLE			nlattr[NL80211_ATTR_BSS_SHORT_PREAMBLE, int8]
	NL80211_ATTR_BSS_SHORT_SLOT_TIME		nlattr[NL80211_ATTR_BSS_SHORT_SLOT_TIME, int8]
	NL80211_ATTR_HT_CAPABILITY			nlattr[NL80211_ATTR_HT_CAPABILITY, array[int8]]
	NL80211_ATTR_REG_ALPHA2				nlattr[NL80211_ATTR_REG_ALPHA2, array[int8]]
	NL80211_ATTR_REG_RULES				nlnest[NL80211_ATTR_REG_RULES, array[nl_generic_attr]]
	NL80211_ATTR_MESH_CONFIG			nlnest[NL80211_ATTR_MESH_CONFIG, array[nl_generic_attr]]
	NL80211_ATTR_BSS_BASIC_RATES			nlattr[NL80211_ATTR_BSS_BASIC_RATES, array[int8, 0:32]]
	NL80211_ATTR_WIPHY_TXQ_PARAMS			nlnest[NL80211_ATTR_WIPHY_TXQ_PARAMS, array[nl_generic_attr]]
	NL80211_ATTR_WIPHY_FREQ				nlattr[NL80211_ATTR_WIPHY_FREQ, int32]
	NL80211_ATTR_WIPHY_CHANNEL_TYPE			nlattr[NL80211_ATTR_WIPHY_CHANNEL_TYPE, int32]
	NL80211_ATTR_MGMT_SUBTYPE			nlattr[NL80211_ATTR_MGMT_SUBTYPE, int8]
	NL80211_ATTR_IE					nlattr[NL80211_ATTR_IE, array[int8, 0:2304]]
	NL80211_ATTR_SCAN_FREQUENCIES			nlnest[NL80211_ATTR_SCAN_FREQUENCIES, array[nl_generic_attr]]
	NL80211_ATTR_SCAN_SSIDS				nlnest[NL80211_ATTR_SCAN_SSIDS, array[nl_generic_attr]]
	NL80211_ATTR_FRAME				nlattr[NL80211_ATTR_FRAME, array[int8, 0:2304]]
	NL80211_ATTR_SSID				nlattr[NL80211_ATTR_SSID, array[int8, 0:32]]
	NL80211_ATTR_AUTH_TYPE				nlattr[NL80211_ATTR_AUTH_TYPE, int32]
	NL80211_ATTR_REASON_CODE			nlattr[NL80211_ATTR_REASON_CODE, int16]
	NL80211_ATTR_KEY_TYPE				nlattr[NL80211_ATTR_KEY_TYPE, int32]
	NL80211_ATTR_FREQ_FIXED				nlattr[NL80211_ATTR_FREQ_FIXED, void]
	NL80211_ATTR_WIPHY_RETRY_SHORT			nlattr[NL80211_ATTR_WIPHY_RETRY_SHORT, int8]
	NL80211_ATTR_WIPHY_RETRY_LONG			nlattr[NL80211_ATTR_WIPHY_RETRY_LONG, int8]
	NL80211_ATTR_WIPHY_FRAG_THRESHOLD		nlattr[NL80211_ATTR_WIPHY_FRAG_THRESHOLD, int32]
	NL80211_ATTR_WIPHY_RTS_THRESHOLD		nlattr[NL80211_ATTR_WIPHY_RTS_THRESHOLD, int32]
	NL80211_ATTR_TIMED_OUT				nlattr[NL80211_ATTR_TIMED_OUT, void]
	NL80211_ATTR_USE_MFP				nlattr[NL80211_ATTR_USE_MFP, int32]
	NL80211_ATTR_STA_FLAGS2				nlattr[NL80211_ATTR_STA_FLAGS2, array[int8]]
	NL80211_ATTR_CONTROL_PORT			nlattr[NL80211_ATTR_CONTROL_PORT, void]
	NL80211_ATTR_PRIVACY				nlattr[NL80211_ATTR_PRIVACY, void]
	NL80211_ATTR_STATUS_CODE			nlattr[NL80211_ATTR_STATUS_CODE, int16]
	NL80211_ATTR_CIPHER_SUITE_GROUP			nlattr[NL80211_ATTR_CIPHER_SUITE_GROUP, int32]
	NL80211_ATTR_WPA_VERSIONS			nlattr[NL80211_ATTR_WPA_VERSIONS, int32]
	NL80211_ATTR_PREV_BSSID				nlattr[NL80211_ATTR_PREV_BSSID, array[int8]]
	NL80211_ATTR_KEY				nlnest[NL80211_ATTR_KEY, array[nl_generic_attr]]
	NL80211_ATTR_PID				nlattr[NL80211_ATTR_PID, pid]
	NL80211_ATTR_4ADDR				nlattr[NL80211_ATTR_4ADDR, int8]
	NL80211_ATTR_PMKID				nlattr[NL80211_ATTR_PMKID, array[int8]]
	NL80211_ATTR_DURATION				nlattr[NL80211_ATTR_DURATION, int32]
	NL80211_ATTR_COOKIE				nlattr[NL80211_ATTR_COOKIE, int64]
	NL80211_ATTR_WIPHY_COVERAGE_CLASS		nlattr[NL80211_ATTR_WIPHY_COVERAGE_CLASS, int8]
	NL80211_ATTR_TX_RATES				nlnest[NL80211_ATTR_TX_RATES, array[nl_generic_attr]]
	NL80211_ATTR_FRAME_MATCH			nlattr[NL80211_ATTR_FRAME_MATCH, array[int8]]
	NL80211_ATTR_PS_STATE				nlattr[NL80211_ATTR_PS_STATE, int32]
	NL80211_ATTR_CQM				nlnest[NL80211_ATTR_CQM, array[nl_generic_attr]]
	NL80211_ATTR_LOCAL_STATE_CHANGE			nlattr[NL80211_ATTR_LOCAL_STATE_CHANGE, void]
	NL80211_ATTR_AP_ISOLATE				nlattr[NL80211_ATTR_AP_ISOLATE, int8]
	NL80211_ATTR_WIPHY_TX_POWER_SETTING		nlattr[NL80211_ATTR_WIPHY_TX_POWER_SETTING, int32]
	NL80211_ATTR_WIPHY_TX_POWER_LEVEL		nlattr[NL80211_ATTR_WIPHY_TX_POWER_LEVEL, int32]
	NL80211_ATTR_FRAME_TYPE				nlattr[NL80211_ATTR_FRAME_TYPE, int16]
	NL80211_ATTR_CONTROL_PORT_ETHERTYPE		nlattr[NL80211_ATTR_CONTROL_PORT_ETHERTYPE, sock_port]
	NL80211_ATTR_CONTROL_PORT_NO_ENCRYPT		nlattr[NL80211_ATTR_CONTROL_PORT_NO_ENCRYPT, void]
	NL80211_ATTR_WIPHY_ANTENNA_TX			nlattr[NL80211_ATTR_WIPHY_ANTENNA_TX, int32]
	NL80211_ATTR_WIPHY_ANTENNA_RX			nlattr[NL80211_ATTR_WIPHY_ANTENNA_RX, int32]
	NL80211_ATTR_MCAST_RATE				nlattr[NL80211_ATTR_MCAST_RATE, int32]
	NL80211_ATTR_OFFCHANNEL_TX_OK			nlattr[NL80211_ATTR_OFFCHANNEL_TX_OK, void]
	NL80211_ATTR_BSS_HT_OPMODE			nlattr[NL80211_ATTR_BSS_HT_OPMODE, int16]
	NL80211_ATTR_KEY_DEFAULT_TYPES			nlnest[NL80211_ATTR_KEY_DEFAULT_TYPES, array[nl_generic_attr]]
	NL80211_ATTR_SUPPORT_MESH_AUTH			nlattr[NL80211_ATTR_SUPPORT_MESH_AUTH, void]
	NL80211_ATTR_STA_PLINK_STATE			nlattr[NL80211_ATTR_STA_PLINK_STATE, int8]
	NL80211_ATTR_WOWLAN_TRIGGERS			nlnest[NL80211_ATTR_WOWLAN_TRIGGERS, array[nl_generic_attr]]
	NL80211_ATTR_SCHED_SCAN_INTERVAL		nlattr[NL80211_ATTR_SCHED_SCAN_INTERVAL, int32]
	NL80211_ATTR_REKEY_DATA				nlnest[NL80211_ATTR_REKEY_DATA, array[nl_generic_attr]]
	NL80211_ATTR_SCAN_SUPP_RATES			nlnest[NL80211_ATTR_SCAN_SUPP_RATES, array[nl_generic_attr]]
	NL80211_ATTR_HIDDEN_SSID			nlattr[NL80211_ATTR_HIDDEN_SSID, int32]
	NL80211_ATTR_IE_PROBE_RESP			nlattr[NL80211_ATTR_IE_PROBE_RESP, array[int8, 0:2304]]
	NL80211_ATTR_IE_ASSOC_RESP			nlattr[NL80211_ATTR_IE_ASSOC_RESP, array[int8, 0:2304]]
	NL80211_ATTR_STA_WME				nlnest[NL80211_ATTR_STA_WME, array[nl80211_sta_wme_policy$auto_nl80211]]
	NL80211_ATTR_ROAM_SUPPORT			nlattr[NL80211_ATTR_ROAM_SUPPORT, void]
	NL80211_ATTR_SCHED_SCAN_MATCH			nlnest[NL80211_ATTR_SCHED_SCAN_MATCH, array[nl_generic_attr]]
	NL80211_ATTR_TX_NO_CCK_RATE			nlattr[NL80211_ATTR_TX_NO_CCK_RATE, void]
	NL80211_ATTR_TDLS_ACTION			nlattr[NL80211_ATTR_TDLS_ACTION, int8]
	NL80211_ATTR_TDLS_DIALOG_TOKEN			nlattr[NL80211_ATTR_TDLS_DIALOG_TOKEN, int8]
	NL80211_ATTR_TDLS_OPERATION			nlattr[NL80211_ATTR_TDLS_OPERATION, int8]
	NL80211_ATTR_TDLS_SUPPORT			nlattr[NL80211_ATTR_TDLS_SUPPORT, void]
	NL80211_ATTR_TDLS_EXTERNAL_SETUP		nlattr[NL80211_ATTR_TDLS_EXTERNAL_SETUP, void]
	NL80211_ATTR_DONT_WAIT_FOR_ACK			nlattr[NL80211_ATTR_DONT_WAIT_FOR_ACK, void]
	NL80211_ATTR_PROBE_RESP				nlattr[NL80211_ATTR_PROBE_RESP, array[int8, 0:2304]]
	NL80211_ATTR_DFS_REGION				nlattr[NL80211_ATTR_DFS_REGION, int8]
	NL80211_ATTR_DISABLE_HT				nlattr[NL80211_ATTR_DISABLE_HT, void]
	NL80211_ATTR_HT_CAPABILITY_MASK			nlattr[NL80211_ATTR_HT_CAPABILITY_MASK, array[int8, 26]]
	NL80211_ATTR_NOACK_MAP				nlattr[NL80211_ATTR_NOACK_MAP, int16]
	NL80211_ATTR_INACTIVITY_TIMEOUT			nlattr[NL80211_ATTR_INACTIVITY_TIMEOUT, int16]
	NL80211_ATTR_BG_SCAN_PERIOD			nlattr[NL80211_ATTR_BG_SCAN_PERIOD, int16]
	NL80211_ATTR_WDEV				nlattr[NL80211_ATTR_WDEV, int64]
	NL80211_ATTR_USER_REG_HINT_TYPE			nlattr[NL80211_ATTR_USER_REG_HINT_TYPE, int32]
	NL80211_ATTR_AUTH_DATA				nlattr[NL80211_ATTR_AUTH_DATA, array[int8]]
	NL80211_ATTR_VHT_CAPABILITY			nlattr[NL80211_ATTR_VHT_CAPABILITY, array[int8]]
	NL80211_ATTR_SCAN_FLAGS				nlattr[NL80211_ATTR_SCAN_FLAGS, int32]
	NL80211_ATTR_CHANNEL_WIDTH			nlattr[NL80211_ATTR_CHANNEL_WIDTH, int32]
	NL80211_ATTR_CENTER_FREQ1			nlattr[NL80211_ATTR_CENTER_FREQ1, int32]
	NL80211_ATTR_CENTER_FREQ2			nlattr[NL80211_ATTR_CENTER_FREQ2, int32]
	NL80211_ATTR_P2P_CTWINDOW			nlattr[NL80211_ATTR_P2P_CTWINDOW, int8]
	NL80211_ATTR_P2P_OPPPS				nlattr[NL80211_ATTR_P2P_OPPPS, int8]
	NL80211_ATTR_LOCAL_MESH_POWER_MODE		nlattr[NL80211_ATTR_LOCAL_MESH_POWER_MODE, int32]
	NL80211_ATTR_ACL_POLICY				nlattr[NL80211_ATTR_ACL_POLICY, int32]
	NL80211_ATTR_MAC_ADDRS				nlnest[NL80211_ATTR_MAC_ADDRS, array[nl_generic_attr]]
	NL80211_ATTR_STA_CAPABILITY			nlattr[NL80211_ATTR_STA_CAPABILITY, int16]
	NL80211_ATTR_STA_EXT_CAPABILITY			nlattr[NL80211_ATTR_STA_EXT_CAPABILITY, array[int8]]
	NL80211_ATTR_SPLIT_WIPHY_DUMP			nlattr[NL80211_ATTR_SPLIT_WIPHY_DUMP, void]
	NL80211_ATTR_DISABLE_VHT			nlattr[NL80211_ATTR_DISABLE_VHT, void]
	NL80211_ATTR_VHT_CAPABILITY_MASK		nlattr[NL80211_ATTR_VHT_CAPABILITY_MASK, array[int8, 12]]
	NL80211_ATTR_MDID				nlattr[NL80211_ATTR_MDID, int16]
	NL80211_ATTR_IE_RIC				nlattr[NL80211_ATTR_IE_RIC, array[int8, 0:2304]]
	NL80211_ATTR_CRIT_PROT_ID			nlattr[NL80211_ATTR_CRIT_PROT_ID, int16]
	NL80211_ATTR_MAX_CRIT_PROT_DURATION		nlattr[NL80211_ATTR_MAX_CRIT_PROT_DURATION, int16]
	NL80211_ATTR_PEER_AID				nlattr[NL80211_ATTR_PEER_AID, int16]
	NL80211_ATTR_CH_SWITCH_COUNT			nlattr[NL80211_ATTR_CH_SWITCH_COUNT, int32]
	NL80211_ATTR_CH_SWITCH_BLOCK_TX			nlattr[NL80211_ATTR_CH_SWITCH_BLOCK_TX, void]
	NL80211_ATTR_CSA_IES				nlnest[NL80211_ATTR_CSA_IES, array[nl_generic_attr]]
	NL80211_ATTR_CNTDWN_OFFS_BEACON			nlattr[NL80211_ATTR_CNTDWN_OFFS_BEACON, array[int8]]
	NL80211_ATTR_CNTDWN_OFFS_PRESP			nlattr[NL80211_ATTR_CNTDWN_OFFS_PRESP, array[int8]]
	NL80211_ATTR_STA_SUPPORTED_CHANNELS		nlattr[NL80211_ATTR_STA_SUPPORTED_CHANNELS, array[int8]]
	NL80211_ATTR_STA_SUPPORTED_OPER_CLASSES		nlattr[NL80211_ATTR_STA_SUPPORTED_OPER_CLASSES, array[int8]]
	NL80211_ATTR_HANDLE_DFS				nlattr[NL80211_ATTR_HANDLE_DFS, void]
	NL80211_ATTR_OPMODE_NOTIF			nlattr[NL80211_ATTR_OPMODE_NOTIF, int8]
	NL80211_ATTR_VENDOR_ID				nlattr[NL80211_ATTR_VENDOR_ID, int32]
	NL80211_ATTR_VENDOR_SUBCMD			nlattr[NL80211_ATTR_VENDOR_SUBCMD, int32]
	NL80211_ATTR_VENDOR_DATA			nlattr[NL80211_ATTR_VENDOR_DATA, array[int8]]
	NL80211_ATTR_QOS_MAP				nlattr[NL80211_ATTR_QOS_MAP, array[int8]]
	NL80211_ATTR_MAC_HINT				nlattr[NL80211_ATTR_MAC_HINT, array[int8]]
	NL80211_ATTR_WIPHY_FREQ_HINT			nlattr[NL80211_ATTR_WIPHY_FREQ_HINT, int32]
	NL80211_ATTR_TDLS_PEER_CAPABILITY		nlattr[NL80211_ATTR_TDLS_PEER_CAPABILITY, int32]
	NL80211_ATTR_SOCKET_OWNER			nlattr[NL80211_ATTR_SOCKET_OWNER, void]
	NL80211_ATTR_CSA_C_OFFSETS_TX			nlattr[NL80211_ATTR_CSA_C_OFFSETS_TX, array[int8]]
	NL80211_ATTR_TDLS_INITIATOR			nlattr[NL80211_ATTR_TDLS_INITIATOR, void]
	NL80211_ATTR_USE_RRM				nlattr[NL80211_ATTR_USE_RRM, void]
	NL80211_ATTR_WIPHY_DYN_ACK			nlattr[NL80211_ATTR_WIPHY_DYN_ACK, void]
	NL80211_ATTR_TSID				nlattr[NL80211_ATTR_TSID, int8]
	NL80211_ATTR_USER_PRIO				nlattr[NL80211_ATTR_USER_PRIO, int8]
	NL80211_ATTR_ADMITTED_TIME			nlattr[NL80211_ATTR_ADMITTED_TIME, int16]
	NL80211_ATTR_SMPS_MODE				nlattr[NL80211_ATTR_SMPS_MODE, int8]
	NL80211_ATTR_OPER_CLASS				nlattr[NL80211_ATTR_OPER_CLASS, int8]
	NL80211_ATTR_MAC_MASK				nlattr[NL80211_ATTR_MAC_MASK, array[int8]]
	NL80211_ATTR_WIPHY_SELF_MANAGED_REG		nlattr[NL80211_ATTR_WIPHY_SELF_MANAGED_REG, void]
	NL80211_ATTR_NETNS_FD				nlattr[NL80211_ATTR_NETNS_FD, fd_namespace]
	NL80211_ATTR_SCHED_SCAN_DELAY			nlattr[NL80211_ATTR_SCHED_SCAN_DELAY, int32]
	NL80211_ATTR_REG_INDOOR				nlattr[NL80211_ATTR_REG_INDOOR, void]
	NL80211_ATTR_PBSS				nlattr[NL80211_ATTR_PBSS, void]
	NL80211_ATTR_BSS_SELECT				nlnest[NL80211_ATTR_BSS_SELECT, array[nl_generic_attr]]
	NL80211_ATTR_STA_SUPPORT_P2P_PS			nlattr[NL80211_ATTR_STA_SUPPORT_P2P_PS, int8]
	NL80211_ATTR_MU_MIMO_GROUP_DATA			nlattr[NL80211_ATTR_MU_MIMO_GROUP_DATA, array[int8, 24]]
	NL80211_ATTR_MU_MIMO_FOLLOW_MAC_ADDR		nlattr[NL80211_ATTR_MU_MIMO_FOLLOW_MAC_ADDR, array[int8]]
	NL80211_ATTR_MEASUREMENT_DURATION		nlattr[NL80211_ATTR_MEASUREMENT_DURATION, int16]
	NL80211_ATTR_MEASUREMENT_DURATION_MANDATORY	nlattr[NL80211_ATTR_MEASUREMENT_DURATION_MANDATORY, void]
	NL80211_ATTR_MESH_PEER_AID			nlattr[NL80211_ATTR_MESH_PEER_AID, int16]
	NL80211_ATTR_NAN_MASTER_PREF			nlattr[NL80211_ATTR_NAN_MASTER_PREF, int8]
	NL80211_ATTR_BANDS				nlattr[NL80211_ATTR_BANDS, int32]
	NL80211_ATTR_NAN_FUNC				nlnest[NL80211_ATTR_NAN_FUNC, array[nl_generic_attr]]
	NL80211_ATTR_FILS_KEK				nlattr[NL80211_ATTR_FILS_KEK, array[int8, 0:64]]
	NL80211_ATTR_FILS_NONCES			nlattr[NL80211_ATTR_FILS_NONCES, array[int8]]
	NL80211_ATTR_MULTICAST_TO_UNICAST_ENABLED	nlattr[NL80211_ATTR_MULTICAST_TO_UNICAST_ENABLED, void]
	NL80211_ATTR_BSSID				nlattr[NL80211_ATTR_BSSID, array[int8]]
	NL80211_ATTR_SCHED_SCAN_RELATIVE_RSSI		nlattr[NL80211_ATTR_SCHED_SCAN_RELATIVE_RSSI, int8]
	NL80211_ATTR_SCHED_SCAN_RSSI_ADJUST		nlattr[NL80211_ATTR_SCHED_SCAN_RSSI_ADJUST, nl80211_bss_select_rssi_adjust$auto_record]
	NL80211_ATTR_TIMEOUT_REASON			nlattr[NL80211_ATTR_TIMEOUT_REASON, int32]
	NL80211_ATTR_FILS_ERP_USERNAME			nlattr[NL80211_ATTR_FILS_ERP_USERNAME, array[int8, 0:16]]
	NL80211_ATTR_FILS_ERP_REALM			nlattr[NL80211_ATTR_FILS_ERP_REALM, array[int8, 0:253]]
	NL80211_ATTR_FILS_ERP_NEXT_SEQ_NUM		nlattr[NL80211_ATTR_FILS_ERP_NEXT_SEQ_NUM, int16]
	NL80211_ATTR_FILS_ERP_RRK			nlattr[NL80211_ATTR_FILS_ERP_RRK, array[int8, 0:64]]
	NL80211_ATTR_FILS_CACHE_ID			nlattr[NL80211_ATTR_FILS_CACHE_ID, array[int8]]
	NL80211_ATTR_PMK				nlattr[NL80211_ATTR_PMK, array[int8, 0:64]]
	NL80211_ATTR_SCHED_SCAN_MULTI			nlattr[NL80211_ATTR_SCHED_SCAN_MULTI, void]
	NL80211_ATTR_PMKR0_NAME				nlattr[NL80211_ATTR_PMKR0_NAME, array[int8]]
	NL80211_ATTR_EXTERNAL_AUTH_SUPPORT		nlattr[NL80211_ATTR_EXTERNAL_AUTH_SUPPORT, void]
	NL80211_ATTR_CONTROL_PORT_OVER_NL80211		nlattr[NL80211_ATTR_CONTROL_PORT_OVER_NL80211, void]
	NL80211_ATTR_TXQ_LIMIT				nlattr[NL80211_ATTR_TXQ_LIMIT, int32]
	NL80211_ATTR_TXQ_MEMORY_LIMIT			nlattr[NL80211_ATTR_TXQ_MEMORY_LIMIT, int32]
	NL80211_ATTR_TXQ_QUANTUM			nlattr[NL80211_ATTR_TXQ_QUANTUM, int32]
	NL80211_ATTR_HE_CAPABILITY			nlattr[NL80211_ATTR_HE_CAPABILITY, array[int8, 0:54]]
	NL80211_ATTR_FTM_RESPONDER			nlnest[NL80211_ATTR_FTM_RESPONDER, array[nl80211_ftm_responder_policy$auto_nl80211]]
	NL80211_ATTR_TIMEOUT				nlattr[NL80211_ATTR_TIMEOUT, int32]
	NL80211_ATTR_PEER_MEASUREMENTS			nlnest[NL80211_ATTR_PEER_MEASUREMENTS, array[nl80211_pmsr_attr_policy$auto_nl80211]]
	NL80211_ATTR_AIRTIME_WEIGHT			nlattr[NL80211_ATTR_AIRTIME_WEIGHT, int16]
	NL80211_ATTR_STA_TX_POWER_SETTING		nlattr[NL80211_ATTR_STA_TX_POWER_SETTING, int8]
	NL80211_ATTR_STA_TX_POWER			nlattr[NL80211_ATTR_STA_TX_POWER, int16]
	NL80211_ATTR_SAE_PASSWORD			nlattr[NL80211_ATTR_SAE_PASSWORD, array[int8, 0:128]]
	NL80211_ATTR_TWT_RESPONDER			nlattr[NL80211_ATTR_TWT_RESPONDER, void]
	NL80211_ATTR_HE_OBSS_PD				nlnest[NL80211_ATTR_HE_OBSS_PD, array[he_obss_pd_policy$auto_nl80211]]
	NL80211_ATTR_WIPHY_EDMG_CHANNELS		nlattr[NL80211_ATTR_WIPHY_EDMG_CHANNELS, int8]
	NL80211_ATTR_WIPHY_EDMG_BW_CONFIG		nlattr[NL80211_ATTR_WIPHY_EDMG_BW_CONFIG, int8]
	NL80211_ATTR_VLAN_ID				nlattr[NL80211_ATTR_VLAN_ID, int16]
	NL80211_ATTR_HE_BSS_COLOR			nlnest[NL80211_ATTR_HE_BSS_COLOR, array[he_bss_color_policy$auto_nl80211]]
	NL80211_ATTR_TID_CONFIG				nlnest[NL80211_ATTR_TID_CONFIG, array[nlnest[0, array[nl80211_tid_config_attr_policy$auto_nl80211]]]]
	NL80211_ATTR_CONTROL_PORT_NO_PREAUTH		nlattr[NL80211_ATTR_CONTROL_PORT_NO_PREAUTH, void]
	NL80211_ATTR_PMK_LIFETIME			nlattr[NL80211_ATTR_PMK_LIFETIME, int32]
	NL80211_ATTR_PMK_REAUTH_THRESHOLD		nlattr[NL80211_ATTR_PMK_REAUTH_THRESHOLD, int8]
	NL80211_ATTR_RECEIVE_MULTICAST			nlattr[NL80211_ATTR_RECEIVE_MULTICAST, void]
	NL80211_ATTR_WIPHY_FREQ_OFFSET			nlattr[NL80211_ATTR_WIPHY_FREQ_OFFSET, int32]
	NL80211_ATTR_CENTER_FREQ1_OFFSET		nlattr[NL80211_ATTR_CENTER_FREQ1_OFFSET, int32]
	NL80211_ATTR_SCAN_FREQ_KHZ			nlnest[NL80211_ATTR_SCAN_FREQ_KHZ, array[nl_generic_attr]]
	NL80211_ATTR_HE_6GHZ_CAPABILITY			nlattr[NL80211_ATTR_HE_6GHZ_CAPABILITY, array[int8]]
	NL80211_ATTR_FILS_DISCOVERY			nlnest[NL80211_ATTR_FILS_DISCOVERY, array[nl80211_fils_discovery_policy$auto_nl80211]]
	NL80211_ATTR_UNSOL_BCAST_PROBE_RESP		nlnest[NL80211_ATTR_UNSOL_BCAST_PROBE_RESP, array[nl80211_unsol_bcast_probe_resp_policy$auto_nl80211]]
	NL80211_ATTR_S1G_CAPABILITY			nlattr[NL80211_ATTR_S1G_CAPABILITY, array[int8]]
	NL80211_ATTR_S1G_CAPABILITY_MASK		nlattr[NL80211_ATTR_S1G_CAPABILITY_MASK, array[int8]]
	NL80211_ATTR_SAE_PWE				nlattr[NL80211_ATTR_SAE_PWE, int8]
	NL80211_ATTR_SAR_SPEC				nlnest[NL80211_ATTR_SAR_SPEC, array[sar_policy$auto_nl80211]]
	NL80211_ATTR_DISABLE_HE				nlattr[NL80211_ATTR_DISABLE_HE, void]
	NL80211_ATTR_OBSS_COLOR_BITMAP			nlattr[NL80211_ATTR_OBSS_COLOR_BITMAP, int64]
	NL80211_ATTR_COLOR_CHANGE_COUNT			nlattr[NL80211_ATTR_COLOR_CHANGE_COUNT, int8]
	NL80211_ATTR_COLOR_CHANGE_COLOR			nlattr[NL80211_ATTR_COLOR_CHANGE_COLOR, int8]
	NL80211_ATTR_COLOR_CHANGE_ELEMS			nlnest[NL80211_ATTR_COLOR_CHANGE_ELEMS, array[nl80211_policy$auto_nl80211]]
	NL80211_ATTR_MBSSID_CONFIG			nlnest[NL80211_ATTR_MBSSID_CONFIG, array[nl80211_mbssid_config_policy$auto_nl80211]]
	NL80211_ATTR_MBSSID_ELEMS			nlnest[NL80211_ATTR_MBSSID_ELEMS, array[nl_generic_attr]]
	NL80211_ATTR_RADAR_BACKGROUND			nlattr[NL80211_ATTR_RADAR_BACKGROUND, void]
	NL80211_ATTR_AP_SETTINGS_FLAGS			nlattr[NL80211_ATTR_AP_SETTINGS_FLAGS, int32]
	NL80211_ATTR_EHT_CAPABILITY			nlattr[NL80211_ATTR_EHT_CAPABILITY, array[int8]]
	NL80211_ATTR_DISABLE_EHT			nlattr[NL80211_ATTR_DISABLE_EHT, void]
	NL80211_ATTR_MLO_LINKS				nlnest[NL80211_ATTR_MLO_LINKS, array[nlnest[0, array[nl80211_policy$auto_nl80211]]]]
	NL80211_ATTR_MLO_LINK_ID			nlattr[NL80211_ATTR_MLO_LINK_ID, int8]
	NL80211_ATTR_MLD_ADDR				nlattr[NL80211_ATTR_MLD_ADDR, array[int8]]
	NL80211_ATTR_MLO_SUPPORT			nlattr[NL80211_ATTR_MLO_SUPPORT, void]
	NL80211_ATTR_PUNCT_BITMAP			nlattr[NL80211_ATTR_PUNCT_BITMAP, int32]
	NL80211_ATTR_MAX_HW_TIMESTAMP_PEERS		nlattr[NL80211_ATTR_MAX_HW_TIMESTAMP_PEERS, int16]
	NL80211_ATTR_HW_TIMESTAMP_ENABLED		nlattr[NL80211_ATTR_HW_TIMESTAMP_ENABLED, void]
	NL80211_ATTR_EMA_RNR_ELEMS			nlnest[NL80211_ATTR_EMA_RNR_ELEMS, array[nl_generic_attr]]
	NL80211_ATTR_MLO_LINK_DISABLED			nlattr[NL80211_ATTR_MLO_LINK_DISABLED, void]
	NL80211_ATTR_BSS_DUMP_INCLUDE_USE_DATA		nlattr[NL80211_ATTR_BSS_DUMP_INCLUDE_USE_DATA, void]
	NL80211_ATTR_MLO_TTLM_DLINK			nlattr[NL80211_ATTR_MLO_TTLM_DLINK, array[int8]]
	NL80211_ATTR_MLO_TTLM_ULINK			nlattr[NL80211_ATTR_MLO_TTLM_ULINK, array[int8]]
	NL80211_ATTR_ASSOC_SPP_AMSDU			nlattr[NL80211_ATTR_ASSOC_SPP_AMSDU, void]
	NL80211_ATTR_VIF_RADIO_MASK			nlattr[NL80211_ATTR_VIF_RADIO_MASK, int32]
] [varlen]

nl80211_sta_wme_policy$auto_nl80211 [
	NL80211_STA_WME_UAPSD_QUEUES	nlattr[NL80211_STA_WME_UAPSD_QUEUES, int8]
	NL80211_STA_WME_MAX_SP		nlattr[NL80211_STA_WME_MAX_SP, int8]
] [varlen]

nl80211_tid_config_attr_policy$auto_nl80211 [
	NL80211_TID_CONFIG_ATTR_VIF_SUPP	nlattr[NL80211_TID_CONFIG_ATTR_VIF_SUPP, int64]
	NL80211_TID_CONFIG_ATTR_PEER_SUPP	nlattr[NL80211_TID_CONFIG_ATTR_PEER_SUPP, int64]
	NL80211_TID_CONFIG_ATTR_OVERRIDE	nlattr[NL80211_TID_CONFIG_ATTR_OVERRIDE, void]
	NL80211_TID_CONFIG_ATTR_TIDS		nlattr[NL80211_TID_CONFIG_ATTR_TIDS, int16]
	NL80211_TID_CONFIG_ATTR_NOACK		nlattr[NL80211_TID_CONFIG_ATTR_NOACK, int8]
	NL80211_TID_CONFIG_ATTR_RETRY_SHORT	nlattr[NL80211_TID_CONFIG_ATTR_RETRY_SHORT, int8]
	NL80211_TID_CONFIG_ATTR_RETRY_LONG	nlattr[NL80211_TID_CONFIG_ATTR_RETRY_LONG, int8]
	NL80211_TID_CONFIG_ATTR_AMPDU_CTRL	nlattr[NL80211_TID_CONFIG_ATTR_AMPDU_CTRL, int8]
	NL80211_TID_CONFIG_ATTR_RTSCTS_CTRL	nlattr[NL80211_TID_CONFIG_ATTR_RTSCTS_CTRL, int8]
	NL80211_TID_CONFIG_ATTR_AMSDU_CTRL	nlattr[NL80211_TID_CONFIG_ATTR_AMSDU_CTRL, int8]
	NL80211_TID_CONFIG_ATTR_TX_RATE_TYPE	nlattr[NL80211_TID_CONFIG_ATTR_TX_RATE_TYPE, int8]
	NL80211_TID_CONFIG_ATTR_TX_RATE		nlnest[NL80211_TID_CONFIG_ATTR_TX_RATE, array[nl80211_txattr_policy$auto_nl80211]]
] [varlen]

nl80211_txattr_policy$auto_nl80211 [
	NL80211_TXRATE_LEGACY	nlattr[NL80211_TXRATE_LEGACY, array[int8, 0:32]]
	NL80211_TXRATE_HT	nlattr[NL80211_TXRATE_HT, array[int8, 0:77]]
	NL80211_TXRATE_VHT	nlattr[NL80211_TXRATE_VHT, array[int8]]
	NL80211_TXRATE_GI	nlattr[NL80211_TXRATE_GI, int8]
	NL80211_TXRATE_HE	nlattr[NL80211_TXRATE_HE, array[int8]]
	NL80211_TXRATE_HE_GI	nlattr[NL80211_TXRATE_HE_GI, int8]
	NL80211_TXRATE_HE_LTF	nlattr[NL80211_TXRATE_HE_LTF, int8]
] [varlen]

nl80211_unsol_bcast_probe_resp_policy$auto_nl80211 [
	NL80211_UNSOL_BCAST_PROBE_RESP_ATTR_INT		nlattr[NL80211_UNSOL_BCAST_PROBE_RESP_ATTR_INT, int32]
	NL80211_UNSOL_BCAST_PROBE_RESP_ATTR_TMPL	nlattr[NL80211_UNSOL_BCAST_PROBE_RESP_ATTR_TMPL, array[int8, 0:2304]]
] [varlen]

nl802154_policy$auto_nl802154 [
	NL802154_ATTR_WPAN_PHY			nlattr[NL802154_ATTR_WPAN_PHY, int32]
	NL802154_ATTR_WPAN_PHY_NAME		nlattr[NL802154_ATTR_WPAN_PHY_NAME, string]
	NL802154_ATTR_IFINDEX			nlattr[NL802154_ATTR_IFINDEX, ifindex]
	NL802154_ATTR_IFNAME			nlattr[NL802154_ATTR_IFNAME, devname]
	NL802154_ATTR_IFTYPE			nlattr[NL802154_ATTR_IFTYPE, int32]
	NL802154_ATTR_WPAN_DEV			nlattr[NL802154_ATTR_WPAN_DEV, int64]
	NL802154_ATTR_PAGE			nlattr[NL802154_ATTR_PAGE, int8]
	NL802154_ATTR_CHANNEL			nlattr[NL802154_ATTR_CHANNEL, int8]
	NL802154_ATTR_PAN_ID			nlattr[NL802154_ATTR_PAN_ID, int16]
	NL802154_ATTR_SHORT_ADDR		nlattr[NL802154_ATTR_SHORT_ADDR, int16]
	NL802154_ATTR_TX_POWER			nlattr[NL802154_ATTR_TX_POWER, int32]
	NL802154_ATTR_CCA_MODE			nlattr[NL802154_ATTR_CCA_MODE, int32]
	NL802154_ATTR_CCA_OPT			nlattr[NL802154_ATTR_CCA_OPT, int32]
	NL802154_ATTR_CCA_ED_LEVEL		nlattr[NL802154_ATTR_CCA_ED_LEVEL, int32]
	NL802154_ATTR_MAX_FRAME_RETRIES		nlattr[NL802154_ATTR_MAX_FRAME_RETRIES, int8]
	NL802154_ATTR_MAX_BE			nlattr[NL802154_ATTR_MAX_BE, int8]
	NL802154_ATTR_MIN_BE			nlattr[NL802154_ATTR_MIN_BE, int8]
	NL802154_ATTR_MAX_CSMA_BACKOFFS		nlattr[NL802154_ATTR_MAX_CSMA_BACKOFFS, int8]
	NL802154_ATTR_LBT_MODE			nlattr[NL802154_ATTR_LBT_MODE, int8]
	NL802154_ATTR_SUPPORTED_CHANNEL		nlattr[NL802154_ATTR_SUPPORTED_CHANNEL, int32]
	NL802154_ATTR_EXTENDED_ADDR		nlattr[NL802154_ATTR_EXTENDED_ADDR, int64]
	NL802154_ATTR_WPAN_PHY_CAPS		nlnest[NL802154_ATTR_WPAN_PHY_CAPS, array[nl_generic_attr]]
	NL802154_ATTR_SUPPORTED_COMMANDS	nlnest[NL802154_ATTR_SUPPORTED_COMMANDS, array[nl_generic_attr]]
	NL802154_ATTR_ACKREQ_DEFAULT		nlattr[NL802154_ATTR_ACKREQ_DEFAULT, int8]
	NL802154_ATTR_PID			nlattr[NL802154_ATTR_PID, pid]
	NL802154_ATTR_NETNS_FD			nlattr[NL802154_ATTR_NETNS_FD, fd_namespace]
	NL802154_ATTR_COORDINATOR		nlnest[NL802154_ATTR_COORDINATOR, array[nl_generic_attr]]
	NL802154_ATTR_SCAN_TYPE			nlattr[NL802154_ATTR_SCAN_TYPE, int8]
	NL802154_ATTR_SCAN_CHANNELS		nlattr[NL802154_ATTR_SCAN_CHANNELS, int32]
	NL802154_ATTR_SCAN_DURATION		nlattr[NL802154_ATTR_SCAN_DURATION, int8]
	NL802154_ATTR_SCAN_DONE_REASON		nlattr[NL802154_ATTR_SCAN_DONE_REASON, int8]
	NL802154_ATTR_BEACON_INTERVAL		nlattr[NL802154_ATTR_BEACON_INTERVAL, int8]
	NL802154_ATTR_MAX_ASSOCIATIONS		nlattr[NL802154_ATTR_MAX_ASSOCIATIONS, int32]
	NL802154_ATTR_PEER			nlnest[NL802154_ATTR_PEER, array[nl_generic_attr]]
	NL802154_ATTR_SEC_ENABLED		nlattr[NL802154_ATTR_SEC_ENABLED, bool8]
	NL802154_ATTR_SEC_OUT_LEVEL		nlattr[NL802154_ATTR_SEC_OUT_LEVEL, int32]
	NL802154_ATTR_SEC_OUT_KEY_ID		nlnest[NL802154_ATTR_SEC_OUT_KEY_ID, array[nl_generic_attr]]
	NL802154_ATTR_SEC_FRAME_COUNTER		nlattr[NL802154_ATTR_SEC_FRAME_COUNTER, int32]
	NL802154_ATTR_SEC_LEVEL			nlnest[NL802154_ATTR_SEC_LEVEL, array[nl_generic_attr]]
	NL802154_ATTR_SEC_DEVICE		nlnest[NL802154_ATTR_SEC_DEVICE, array[nl_generic_attr]]
	NL802154_ATTR_SEC_DEVKEY		nlnest[NL802154_ATTR_SEC_DEVKEY, array[nl_generic_attr]]
	NL802154_ATTR_SEC_KEY			nlnest[NL802154_ATTR_SEC_KEY, array[nl_generic_attr]]
] [varlen]

old_linux_dirent$auto_record {
	d_ino		intptr
	d_offset	intptr
	d_namlen	int16
	d_name		array[int8]
}

old_utsname$auto_record {
	sysname		array[int8, 65]
	nodename	array[int8, 65]
	release		array[int8, 65]
	version		array[int8, 65]
	machine		array[int8, 65]
}

oldold_utsname$auto_record {
	sysname		array[int8, 9]
	nodename	array[int8, 9]
	release		array[int8, 9]
	version		array[int8, 9]
	machine		array[int8, 9]
}

open_how$auto_record {
	flags	int64
	mode	int64
	resolve	int64
}

ovs_flow_stats$auto_record {
	n_packets	int64
	n_bytes		int64
}

ovs_vport_stats$auto_record {
	rx_packets	int64
	tx_packets	int64
	rx_bytes	int64
	tx_bytes	int64
	rx_errors	int64
	tx_errors	int64
	rx_dropped	int64
	tx_dropped	int64
}

packet_policy$auto_datapath [
	OVS_PACKET_ATTR_PACKET	nlattr[OVS_PACKET_ATTR_PACKET, array[int8, 14]]
	OVS_PACKET_ATTR_KEY	nlnest[OVS_PACKET_ATTR_KEY, array[nl_generic_attr]]
	OVS_PACKET_ATTR_ACTIONS	nlnest[OVS_PACKET_ATTR_ACTIONS, array[nl_generic_attr]]
	OVS_PACKET_ATTR_PROBE	nlattr[OVS_PACKET_ATTR_PROBE, void]
	OVS_PACKET_ATTR_MRU	nlattr[OVS_PACKET_ATTR_MRU, int16]
	OVS_PACKET_ATTR_HASH	nlattr[OVS_PACKET_ATTR_HASH, int64]
] [varlen]

perf_event_attr$auto_record {
	type				int32
	size				int32
	config				int64
	perf_event_attr_3		perf_event_attr_3$auto_record
	sample_type			int64
	read_format			int64
	disabled			int64:1
	inherit				int64:1
	pinned				int64:1
	exclusive			int64:1
	exclude_user			int64:1
	exclude_kernel			int64:1
	exclude_hv			int64:1
	exclude_idle			int64:1
	mmap				int64:1
	comm				int64:1
	freq				int64:1
	inherit_stat			int64:1
	enable_on_exec			int64:1
	task				int64:1
	watermark			int64:1
	precise_ip			int64:2
	mmap_data			int64:1
	sample_id_all			int64:1
	exclude_host			int64:1
	exclude_guest			int64:1
	exclude_callchain_kernel	int64:1
	exclude_callchain_user		int64:1
	mmap2				int64:1
	comm_exec			int64:1
	use_clockid			int64:1
	context_switch			int64:1
	write_backward			int64:1
	namespaces			int64:1
	ksymbol				int64:1
	bpf_event			int64:1
	aux_output			int64:1
	cgroup				int64:1
	text_poke			int64:1
	build_id			int64:1
	inherit_thread			int64:1
	remove_on_exec			int64:1
	sigtrap				int64:1
	__reserved_1			const[0, int64:26]
	perf_event_attr_44		perf_event_attr_44$auto_record
	bp_type				int32
	perf_event_attr_46		perf_event_attr_46$auto_record
	perf_event_attr_47		perf_event_attr_47$auto_record
	branch_sample_type		int64
	sample_regs_user		int64
	sample_stack_user		int32
	clockid				int32
	sample_regs_intr		int64
	aux_watermark			int32
	sample_max_stack		int16
	__reserved_2			const[0, int16]
	aux_sample_size			int32
	perf_event_attr_57		perf_event_attr_57$auto_record
	sig_data			int64
	config3				int64
}

perf_event_attr_3$auto_record [
	sample_period	int64
	sample_freq	int64
]

perf_event_attr_44$auto_record [
	wakeup_events		int32
	wakeup_watermark	int32
]

perf_event_attr_46$auto_record [
	bp_addr		int64
	kprobe_func	int64
	uprobe_path	int64
	config1		int64
]

perf_event_attr_47$auto_record [
	bp_len		int64
	kprobe_addr	int64
	probe_offset	int64
	config2		int64
]

perf_event_attr_57$auto_record [
	aux_action		int32
	perf_event_attr_57_1	perf_event_attr_57_1$auto_record
]

perf_event_attr_57_1$auto_record {
	aux_start_paused	int32:1
	aux_pause		int32:1
	aux_resume		int32:1
	__reserved_3		const[0, int32:29]
}

pollfd$auto_record {
	fd	fd
	events	int16
	revents	int16
}

resume_swap_area$auto_record {
	offset	int64
	dev	int32
} [packed]

rlimit$auto_record {
	rlim_cur	intptr
	rlim_max	intptr
}

rlimit64$auto_record {
	rlim_cur	int64
	rlim_max	int64
}

robust_list$auto_record {
	next	ptr[inout, robust_list$auto_record, opt]
}

robust_list_head$auto_record {
	list		robust_list$auto_record
	futex_offset	intptr
	list_op_pending	ptr[inout, robust_list$auto_record]
}

rseq$auto_record {
	cpu_id_start	int32
	cpu_id		int32
	rseq_cs		int64
	flags		int32
	node_id		int32
	mm_cid		int32
	end		array[int8]
} [align[32]]

rusage$auto_record {
	ru_utime	__kernel_old_timeval$auto_record
	ru_stime	__kernel_old_timeval$auto_record
	ru_maxrss	intptr
	ru_ixrss	intptr
	ru_idrss	intptr
	ru_isrss	intptr
	ru_minflt	intptr
	ru_majflt	intptr
	ru_nswap	intptr
	ru_inblock	intptr
	ru_oublock	intptr
	ru_msgsnd	intptr
	ru_msgrcv	intptr
	ru_nsignals	intptr
	ru_nvcsw	intptr
	ru_nivcsw	intptr
}

sar_policy$auto_nl80211 [
	NL80211_SAR_ATTR_TYPE	nlattr[NL80211_SAR_ATTR_TYPE, int32]
	NL80211_SAR_ATTR_SPECS	nlnest[NL80211_SAR_ATTR_SPECS, array[nlnest[0, array[sar_specs_policy$auto_nl80211]]]]
] [varlen]

sar_specs_policy$auto_nl80211 [
	NL80211_SAR_ATTR_SPECS_POWER		nlattr[NL80211_SAR_ATTR_SPECS_POWER, int32]
	NL80211_SAR_ATTR_SPECS_RANGE_INDEX	nlattr[NL80211_SAR_ATTR_SPECS_RANGE_INDEX, int32]
] [varlen]

sched_attr$auto_record {
	size		int32
	sched_policy	int32
	sched_flags	int64
	sched_nice	int32
	sched_priority	int32
	sched_runtime	int64
	sched_deadline	int64
	sched_period	int64
	sched_util_min	int32
	sched_util_max	int32
}

sched_param$auto_record {
	sched_priority	int32
}

seg6_genl_policy$auto_seg6 [
	SEG6_ATTR_DST		nlattr[SEG6_ATTR_DST, in6_addr$auto_record]
	SEG6_ATTR_DSTLEN	nlattr[SEG6_ATTR_DSTLEN, int32]
	SEG6_ATTR_HMACKEYID	nlattr[SEG6_ATTR_HMACKEYID, int32]
	SEG6_ATTR_SECRET	nlattr[SEG6_ATTR_SECRET, array[int8]]
	SEG6_ATTR_SECRETLEN	nlattr[SEG6_ATTR_SECRETLEN, int8]
	SEG6_ATTR_ALGID		nlattr[SEG6_ATTR_ALGID, int8]
	SEG6_ATTR_HMACINFO	nlnest[SEG6_ATTR_HMACINFO, array[nl_generic_attr]]
] [varlen]

sembuf$auto_record {
	sem_num	int16
	sem_op	int16
	sem_flg	int16
}

shmid_ds$auto_record {
	shm_perm	ipc_perm$auto_record
	shm_segsz	int32
	shm_atime	intptr
	shm_dtime	intptr
	shm_ctime	intptr
	shm_cpid	int32
	shm_lpid	int32
	shm_nattch	int16
	shm_unused	const[0, int16]
	shm_unused2	ptr[inout, array[auto_todo]]
	shm_unused3	ptr[inout, array[auto_todo]]
}

sigaction$auto_record {
	sa_handler	ptr[inout, ptr[in, auto_todo]]
	sa_flags	intptr
	sa_restorer	ptr[inout, ptr[in, auto_todo]]
	sa_mask		sigaction_sa_mask$auto_record
}

sigaction_sa_mask$auto_record {
	sig	intptr
}

sigaltstack$auto_record {
	ss_sp		ptr[inout, array[auto_todo]]
	ss_flags	int32
	ss_size		intptr
}

sigevent$auto_record {
	sigev_value	sigval$auto_record
	sigev_signo	int32
	sigev_notify	int32
	_sigev_un	sigevent__sigev_un$auto_record
}

sigevent__sigev_un$auto_record [
	_pad		array[const[0, int32], 12]
	_tid		pid
	_sigev_thread	sigevent__sigev_un__sigev_thread$auto_record
]

sigevent__sigev_un__sigev_thread$auto_record {
	_function	ptr[inout, ptr[in, auto_todo]]
	_attribute	ptr[inout, array[auto_todo]]
}

siginfo$auto_record {
	siginfo_0	siginfo_0$auto_record
}

siginfo_0$auto_record [
	siginfo_0_0	siginfo_0_0$auto_record
	_si_pad		array[const[0, int32], 32]
]

siginfo_0_0$auto_record {
	si_signo	int32
	si_errno	int32
	si_code		int32
	_sifields	__sifields$auto_record
}

sigset_t$auto_record {
	sig	intptr
}

sigval$auto_record [
	sival_int	int32
	sival_ptr	ptr[inout, array[auto_todo]]
]

smc_gen_ueid_policy$auto_smc_netlink [
	SMC_NLA_EID_TABLE_UNSPEC	nlattr[SMC_NLA_EID_TABLE_UNSPEC, array[int8]]
	SMC_NLA_EID_TABLE_ENTRY		nlattr[SMC_NLA_EID_TABLE_ENTRY, stringnoz]
] [varlen]

smc_pnet_policy$auto_smc_pnet [
	SMC_PNETID_NAME		nlattr[SMC_PNETID_NAME, string]
	SMC_PNETID_ETHNAME	nlattr[SMC_PNETID_ETHNAME, string]
	SMC_PNETID_IBNAME	nlattr[SMC_PNETID_IBNAME, string]
	SMC_PNETID_IBPORT	nlattr[SMC_PNETID_IBPORT, int8]
] [varlen]

snd_ctl_card_info$auto_record {
	card		int32
	pad		const[0, int32]
	id		array[int8, 16]
	driver		array[int8, 16]
	name		array[int8, 32]
	longname	array[int8, 80]
	reserved_	array[int8, 16]
	mixername	array[int8, 80]
	components	array[int8, 128]
}

snd_ctl_elem_id$auto_record {
	numid		int32
	iface		int32
	device		int32
	subdevice	int32
	name		array[int8, 44]
	index		int32
}

sockaddr$auto_record {
	sa_family	int16
	sockaddr_1	sockaddr_1$auto_record
}

sockaddr_1$auto_record [
	sa_data_min	array[int8, 14]
	sockaddr_1_1	sockaddr_1_1$auto_record
] [varlen]

sockaddr_1_1$auto_record {
	sa_data	array[int8]
}

stat$auto_record {
	st_dev		intptr
	st_ino		intptr
	st_nlink	intptr
	st_mode		int32
	st_uid		uid
	st_gid		gid
	__pad0		const[0, int32]
	st_rdev		intptr
	st_size		intptr
	st_blksize	intptr
	st_blocks	intptr
	st_atime	intptr
	st_atime_nsec	intptr
	st_mtime	intptr
	st_mtime_nsec	intptr
	st_ctime	intptr
	st_ctime_nsec	intptr
	__unused	array[const[0, intptr], 3]
}

statfs$auto_record {
	f_type		intptr
	f_bsize		intptr
	f_blocks	intptr
	f_bfree		intptr
	f_bavail	intptr
	f_files		intptr
	f_ffree		intptr
	f_fsid		statfs_f_fsid$auto_record
	f_namelen	intptr
	f_frsize	intptr
	f_flags		intptr
	f_spare		array[intptr, 4]
}

statfs64$auto_record {
	f_type		intptr
	f_bsize		intptr
	f_blocks	int64
	f_bfree		int64
	f_bavail	int64
	f_files		int64
	f_ffree		int64
	f_fsid		statfs64_f_fsid$auto_record
	f_namelen	intptr
	f_frsize	intptr
	f_flags		intptr
	f_spare		array[intptr, 4]
}

statfs64_f_fsid$auto_record {
	val	array[int32, 2]
}

statfs_f_fsid$auto_record {
	val	array[int32, 2]
}

statmount$auto_record {
	size			int32
	mnt_opts		int32
	mask			int64
	sb_dev_major		int32
	sb_dev_minor		int32
	sb_magic		int64
	sb_flags		int32
	fs_type			int32
	mnt_id			int64
	mnt_parent_id		int64
	mnt_id_old		int32
	mnt_parent_id_old	int32
	mnt_attr		int64
	mnt_propagation		int64
	mnt_peer_group		int64
	mnt_master		int64
	propagate_from		int64
	mnt_root		int32
	mnt_point		int32
	mnt_ns_id		int64
	fs_subtype		int32
	sb_source		int32
	opt_num			int32
	opt_array		int32
	opt_sec_num		int32
	opt_sec_array		int32
	__spare2		array[int64, 46]
	str			array[int8]
}

statx$auto_record {
	stx_mask			int32
	stx_blksize			int32
	stx_attributes			int64
	stx_nlink			int32
	stx_uid				uid
	stx_gid				gid
	stx_mode			int16
	__spare0			int16
	stx_ino				int64
	stx_size			int64
	stx_blocks			int64
	stx_attributes_mask		int64
	stx_atime			statx_timestamp$auto_record
	stx_btime			statx_timestamp$auto_record
	stx_ctime			statx_timestamp$auto_record
	stx_mtime			statx_timestamp$auto_record
	stx_rdev_major			int32
	stx_rdev_minor			int32
	stx_dev_major			int32
	stx_dev_minor			int32
	stx_mnt_id			int64
	stx_dio_mem_align		int32
	stx_dio_offset_align		int32
	stx_subvol			int64
	stx_atomic_write_unit_min	int32
	stx_atomic_write_unit_max	int32
	stx_atomic_write_segments_max	int32
	__spare1			int32
	__spare3			array[int64, 9]
}

statx_timestamp$auto_record {
	tv_sec		int64
	tv_nsec		int32
	__reserved	const[0, int32]
}

sysinfo$auto_record {
	uptime		intptr
	loads		array[intptr, 3]
	totalram	intptr
	freeram		intptr
	sharedram	intptr
	bufferram	intptr
	totalswap	intptr
	freeswap	intptr
	procs		int16
	pad		const[0, int16]
	totalhigh	intptr
	freehigh	intptr
	mem_unit	int32
	_f		array[int8]
}

taskstats_cmd_get_policy$auto_taskstats [
	TASKSTATS_CMD_ATTR_PID			nlattr[TASKSTATS_CMD_ATTR_PID, pid]
	TASKSTATS_CMD_ATTR_TGID			nlattr[TASKSTATS_CMD_ATTR_TGID, pid]
	TASKSTATS_CMD_ATTR_REGISTER_CPUMASK	nlattr[TASKSTATS_CMD_ATTR_REGISTER_CPUMASK, stringnoz]
	TASKSTATS_CMD_ATTR_DEREGISTER_CPUMASK	nlattr[TASKSTATS_CMD_ATTR_DEREGISTER_CPUMASK, stringnoz]
] [varlen]

tcp_metrics_nl_policy$auto_tcp_metrics [
	TCP_METRICS_ATTR_ADDR_IPV4	nlattr[TCP_METRICS_ATTR_ADDR_IPV4, ipv4_addr]
	TCP_METRICS_ATTR_ADDR_IPV6	nlattr[TCP_METRICS_ATTR_ADDR_IPV6, array[int8]]
	TCP_METRICS_ATTR_SADDR_IPV4	nlattr[TCP_METRICS_ATTR_SADDR_IPV4, ipv4_addr]
	TCP_METRICS_ATTR_SADDR_IPV6	nlattr[TCP_METRICS_ATTR_SADDR_IPV6, array[int8]]
] [varlen]

thermal_genl_policy$auto_thermal_netlink [
	THERMAL_GENL_ATTR_TZ				nlnest[THERMAL_GENL_ATTR_TZ, array[nl_generic_attr]]
	THERMAL_GENL_ATTR_TZ_ID				nlattr[THERMAL_GENL_ATTR_TZ_ID, int32]
	THERMAL_GENL_ATTR_TZ_TEMP			nlattr[THERMAL_GENL_ATTR_TZ_TEMP, int32]
	THERMAL_GENL_ATTR_TZ_TRIP			nlnest[THERMAL_GENL_ATTR_TZ_TRIP, array[nl_generic_attr]]
	THERMAL_GENL_ATTR_TZ_TRIP_ID			nlattr[THERMAL_GENL_ATTR_TZ_TRIP_ID, int32]
	THERMAL_GENL_ATTR_TZ_TRIP_TYPE			nlattr[THERMAL_GENL_ATTR_TZ_TRIP_TYPE, int32]
	THERMAL_GENL_ATTR_TZ_TRIP_TEMP			nlattr[THERMAL_GENL_ATTR_TZ_TRIP_TEMP, int32]
	THERMAL_GENL_ATTR_TZ_TRIP_HYST			nlattr[THERMAL_GENL_ATTR_TZ_TRIP_HYST, int32]
	THERMAL_GENL_ATTR_TZ_MODE			nlattr[THERMAL_GENL_ATTR_TZ_MODE, int32]
	THERMAL_GENL_ATTR_TZ_NAME			nlattr[THERMAL_GENL_ATTR_TZ_NAME, stringnoz]
	THERMAL_GENL_ATTR_TZ_CDEV_WEIGHT		nlattr[THERMAL_GENL_ATTR_TZ_CDEV_WEIGHT, int32]
	THERMAL_GENL_ATTR_TZ_GOV			nlnest[THERMAL_GENL_ATTR_TZ_GOV, array[nl_generic_attr]]
	THERMAL_GENL_ATTR_TZ_GOV_NAME			nlattr[THERMAL_GENL_ATTR_TZ_GOV_NAME, stringnoz]
	THERMAL_GENL_ATTR_CDEV				nlnest[THERMAL_GENL_ATTR_CDEV, array[nl_generic_attr]]
	THERMAL_GENL_ATTR_CDEV_ID			nlattr[THERMAL_GENL_ATTR_CDEV_ID, int32]
	THERMAL_GENL_ATTR_CDEV_CUR_STATE		nlattr[THERMAL_GENL_ATTR_CDEV_CUR_STATE, int32]
	THERMAL_GENL_ATTR_CDEV_MAX_STATE		nlattr[THERMAL_GENL_ATTR_CDEV_MAX_STATE, int32]
	THERMAL_GENL_ATTR_CDEV_NAME			nlattr[THERMAL_GENL_ATTR_CDEV_NAME, devname]
	THERMAL_GENL_ATTR_CPU_CAPABILITY		nlnest[THERMAL_GENL_ATTR_CPU_CAPABILITY, array[nl_generic_attr]]
	THERMAL_GENL_ATTR_CPU_CAPABILITY_ID		nlattr[THERMAL_GENL_ATTR_CPU_CAPABILITY_ID, int32]
	THERMAL_GENL_ATTR_CPU_CAPABILITY_PERFORMANCE	nlattr[THERMAL_GENL_ATTR_CPU_CAPABILITY_PERFORMANCE, int32]
	THERMAL_GENL_ATTR_CPU_CAPABILITY_EFFICIENCY	nlattr[THERMAL_GENL_ATTR_CPU_CAPABILITY_EFFICIENCY, int32]
	THERMAL_GENL_ATTR_THRESHOLD			nlnest[THERMAL_GENL_ATTR_THRESHOLD, array[nl_generic_attr]]
	THERMAL_GENL_ATTR_THRESHOLD_TEMP		nlattr[THERMAL_GENL_ATTR_THRESHOLD_TEMP, int32]
	THERMAL_GENL_ATTR_THRESHOLD_DIRECTION		nlattr[THERMAL_GENL_ATTR_THRESHOLD_DIRECTION, int32]
] [varlen]

timezone$auto_record {
	tz_minuteswest	int32
	tz_dsttime	int32
}

tipc_nl_policy$auto_netlink [
	TIPC_NLA_UNSPEC		nlattr[TIPC_NLA_UNSPEC, array[int8]]
	TIPC_NLA_BEARER		nlnest[TIPC_NLA_BEARER, array[nl_generic_attr]]
	TIPC_NLA_SOCK		nlnest[TIPC_NLA_SOCK, array[nl_generic_attr]]
	TIPC_NLA_PUBL		nlnest[TIPC_NLA_PUBL, array[nl_generic_attr]]
	TIPC_NLA_LINK		nlnest[TIPC_NLA_LINK, array[nl_generic_attr]]
	TIPC_NLA_MEDIA		nlnest[TIPC_NLA_MEDIA, array[nl_generic_attr]]
	TIPC_NLA_NODE		nlnest[TIPC_NLA_NODE, array[nl_generic_attr]]
	TIPC_NLA_NET		nlnest[TIPC_NLA_NET, array[nl_generic_attr]]
	TIPC_NLA_NAME_TABLE	nlnest[TIPC_NLA_NAME_TABLE, array[nl_generic_attr]]
	TIPC_NLA_MON		nlnest[TIPC_NLA_MON, array[nl_generic_attr]]
] [varlen]

tms$auto_record {
	tms_utime	intptr
	tms_stime	intptr
	tms_cutime	intptr
	tms_cstime	intptr
}

ubi_attach_req$auto_record {
	ubi_num		int32
	mtd_num		int32
	vid_hdr_offset	int32
	max_beb_per1024	int16
	disable_fm	int8
	need_resv_pool	int8
	padding		array[const[0, int8], 8]
}

udmabuf_create$auto_record {
	memfd	fd
	flags	int32
	offset	int64
	size	int64
}

udmabuf_create_item$auto_record {
	memfd	fd
	__pad	const[0, int32]
	offset	int64
	size	int64
}

udmabuf_create_list$auto_record {
	flags	int32
	count	int32
	list	array[udmabuf_create_item$auto_record]
}

usb_endpoint_descriptor$auto_record {
	bLength			int8
	bDescriptorType		int8
	bEndpointAddress	int8
	bmAttributes		int8
	wMaxPacketSize		int16
	bInterval		int8
	bRefresh		int8
	bSynchAddress		int8
} [packed]

usb_raw_ep_caps$auto_record {
	type_control	int32:1
	type_iso	int32:1
	type_bulk	int32:1
	type_int	int32:1
	dir_in		int32:1
	dir_out		int32:1
}

usb_raw_ep_info$auto_record {
	name	array[int8, 16]
	addr	int32
	caps	usb_raw_ep_caps$auto_record
	limits	usb_raw_ep_limits$auto_record
}

usb_raw_ep_io$auto_record {
	ep	int16
	flags	int16
	length	int32
	data	array[int8]
}

usb_raw_ep_limits$auto_record {
	maxpacket_limit	int16
	max_streams	int16
	reserved	int32
}

usb_raw_eps_info$auto_record {
	eps	array[usb_raw_ep_info$auto_record, 30]
}

usb_raw_event$auto_record {
	type	int32
	length	int32
	data	array[int8]
}

usb_raw_init$auto_record {
	driver_name	array[int8, 128]
	device_name	array[int8, 128]
	speed		int8
}

user_desc$auto_record {
	entry_number	int32
	base_addr	int32
	limit		int32
	seg_32bit	int32:1
	contents	int32:2
	read_exec_only	int32:1
	limit_in_pages	int32:1
	seg_not_present	int32:1
	useable		int32:1
	lm		int32:1
}

user_msghdr$auto_record {
	msg_name	ptr[inout, array[auto_todo]]
	msg_namelen	int32
	msg_iov		ptr[inout, iovec$auto_record]
	msg_iovlen	intptr
	msg_control	ptr[inout, array[auto_todo]]
	msg_controllen	intptr
	msg_flags	int32
}

ustat$auto_record {
	f_tfree		int32
	f_tinode	intptr
	f_fname		array[int8, 6]
	f_fpack		array[int8, 6]
}

utimbuf$auto_record {
	actime	intptr
	modtime	intptr
}

vdpa_nl_policy$auto_vdpa [
	VDPA_ATTR_MGMTDEV_BUS_NAME	nlattr[VDPA_ATTR_MGMTDEV_BUS_NAME, string]
	VDPA_ATTR_MGMTDEV_DEV_NAME	nlattr[VDPA_ATTR_MGMTDEV_DEV_NAME, devname]
	VDPA_ATTR_DEV_NAME		nlattr[VDPA_ATTR_DEV_NAME, devname]
	VDPA_ATTR_DEV_NET_CFG_MACADDR	nlattr[VDPA_ATTR_DEV_NET_CFG_MACADDR, array[int8]]
	VDPA_ATTR_DEV_NET_CFG_MAX_VQP	nlattr[VDPA_ATTR_DEV_NET_CFG_MAX_VQP, int16]
	VDPA_ATTR_DEV_NET_CFG_MTU	nlattr[VDPA_ATTR_DEV_NET_CFG_MTU, int16]
	VDPA_ATTR_DEV_QUEUE_INDEX	nlattr[VDPA_ATTR_DEV_QUEUE_INDEX, int32]
	VDPA_ATTR_DEV_FEATURES		nlattr[VDPA_ATTR_DEV_FEATURES, int64]
] [varlen]

vhost_vring_file$auto_record {
	index	int32
	fd	fd
}

vport_policy$auto_datapath [
	OVS_VPORT_ATTR_PORT_NO		nlattr[OVS_VPORT_ATTR_PORT_NO, int32]
	OVS_VPORT_ATTR_TYPE		nlattr[OVS_VPORT_ATTR_TYPE, int32]
	OVS_VPORT_ATTR_NAME		nlattr[OVS_VPORT_ATTR_NAME, string]
	OVS_VPORT_ATTR_OPTIONS		nlnest[OVS_VPORT_ATTR_OPTIONS, array[nl_generic_attr]]
	OVS_VPORT_ATTR_UPCALL_PID	nlattr[OVS_VPORT_ATTR_UPCALL_PID, array[int8]]
	OVS_VPORT_ATTR_STATS		nlattr[OVS_VPORT_ATTR_STATS, ovs_vport_stats$auto_record]
	OVS_VPORT_ATTR_IFINDEX		nlattr[OVS_VPORT_ATTR_IFINDEX, ifindex]
	OVS_VPORT_ATTR_NETNSID		nlattr[OVS_VPORT_ATTR_NETNSID, int32]
	OVS_VPORT_ATTR_UPCALL_STATS	nlnest[OVS_VPORT_ATTR_UPCALL_STATS, array[nl_generic_attr]]
] [varlen]

xattr_args$auto_record {
	value	int64
	size	int32
	flags	int32
}

# fops: ioctl:adf_ctl_ioctl
resource fd_auto_adf_ctl[fd]
openat$auto_adf_ctl(fd const[AT_FDCWD], file ptr[in, string["/dev/qat_adf_ctl"]], flags flags[open_flags], mode const[0]) fd_auto_adf_ctl (automatic)
ioctl$auto_IOCTL_STATUS_ACCEL_DEV(fd fd_auto_adf_ctl, cmd const[IOCTL_STATUS_ACCEL_DEV], arg ptr[inout, int32]) (automatic)
ioctl$auto_IOCTL_GET_NUM_DEVICES(fd fd_auto_adf_ctl, cmd const[IOCTL_GET_NUM_DEVICES], arg ptr[inout, int32]) (automatic)
ioctl$auto_IOCTL_START_ACCEL_DEV(fd fd_auto_adf_ctl, cmd const[IOCTL_START_ACCEL_DEV], arg ptr[inout, adf_user_cfg_ctl_data$auto_record]) (automatic)
ioctl$auto_IOCTL_STOP_ACCEL_DEV(fd fd_auto_adf_ctl, cmd const[IOCTL_STOP_ACCEL_DEV], arg ptr[inout, adf_user_cfg_ctl_data$auto_record]) (automatic)
ioctl$auto_IOCTL_CONFIG_SYS_RESOURCE_PARAMETERS(fd fd_auto_adf_ctl, cmd const[IOCTL_CONFIG_SYS_RESOURCE_PARAMETERS], arg ptr[inout, adf_user_cfg_ctl_data$auto_record]) (automatic)

# fops: ioctl:autofs_dev_ioctl
resource fd_auto_autofs_dev[fd]
openat$auto_autofs_dev(fd const[AT_FDCWD], file ptr[in, string["/dev/autofs"]], flags flags[open_flags], mode const[0]) fd_auto_autofs_dev (automatic)
ioctl$auto_autofs_dev(fd fd_auto_autofs_dev, cmd intptr, arg ptr[in, array[int8]]) (automatic)

# fops: ioctl:ctrl_cdev_ioctl
resource fd_auto_ctrl_cdev[fd]
openat$auto_ctrl_cdev(fd const[AT_FDCWD], file ptr[in, string["/dev/ubi_ctrl"]], flags flags[open_flags], mode const[0]) fd_auto_ctrl_cdev (automatic)
ioctl$auto_UBI_IOCDET(fd fd_auto_ctrl_cdev, cmd const[UBI_IOCDET], arg ptr[inout, int32]) (automatic)
ioctl$auto_UBI_IOCATT(fd fd_auto_ctrl_cdev, cmd const[UBI_IOCATT], arg ptr[inout, ubi_attach_req$auto_record]) (automatic)

# fops: ioctl:kvm_dev_ioctl
resource fd_auto_kvm_dev[fd]
openat$auto_kvm_dev(fd const[AT_FDCWD], file ptr[in, string["/dev/kvm"]], flags flags[open_flags], mode const[0]) fd_auto_kvm_dev (automatic)
ioctl$auto_KVM_GET_VCPU_MMAP_SIZE(fd fd_auto_kvm_dev, cmd const[KVM_GET_VCPU_MMAP_SIZE], arg const[0]) (automatic)
ioctl$auto_KVM_CHECK_EXTENSION(fd fd_auto_kvm_dev, cmd const[KVM_CHECK_EXTENSION], arg const[0]) (automatic)
ioctl$auto_KVM_CREATE_VM(fd fd_auto_kvm_dev, cmd const[KVM_CREATE_VM], arg const[0]) (automatic)
ioctl$auto_KVM_GET_API_VERSION(fd fd_auto_kvm_dev, cmd const[KVM_GET_API_VERSION], arg const[0]) (automatic)

# fops: ioctl:udmabuf_ioctl
resource fd_auto_udmabuf[fd]
openat$auto_udmabuf(fd const[AT_FDCWD], file ptr[in, string["/dev/udmabuf"]], flags flags[open_flags], mode const[0]) fd_auto_udmabuf (automatic)
ioctl$auto_UDMABUF_CREATE_LIST(fd fd_auto_udmabuf, cmd const[UDMABUF_CREATE_LIST], arg ptr[inout, udmabuf_create_list$auto_record]) (automatic)
ioctl$auto_UDMABUF_CREATE(fd fd_auto_udmabuf, cmd const[UDMABUF_CREATE], arg ptr[inout, udmabuf_create$auto_record]) (automatic)

# fops: ioctl:userfaultfd_dev_ioctl
resource fd_auto_userfaultfd_dev[fd]
openat$auto_userfaultfd_dev(fd const[AT_FDCWD], file ptr[in, string["/dev/userfaultfd"]], flags flags[open_flags], mode const[0]) fd_auto_userfaultfd_dev (automatic)
ioctl$auto_userfaultfd_dev(fd fd_auto_userfaultfd_dev, cmd intptr, arg ptr[in, array[int8]]) (automatic)

# fops: open:auxv_open read:auxv_read
resource fd_auto_auxv[fd]
auto_auxv_files = "/proc/self/auxv", "/proc/thread-self/auxv"
openat$auto_auxv(fd const[AT_FDCWD], file ptr[in, string[auto_auxv_files]], flags flags[open_flags], mode const[0]) fd_auto_auxv (automatic)
read$auto_auxv(fd fd_auto_auxv, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)

# fops: open:bdi_debug_stats_open read:seq_read
resource fd_auto_bdi_debug_stats[fd]
auto_bdi_debug_stats_files = "/sys/kernel/debug/bdi/11:0/stats", "/sys/kernel/debug/bdi/1:0/stats", "/sys/kernel/debug/bdi/1:1/stats", "/sys/kernel/debug/bdi/1:10/stats", "/sys/kernel/debug/bdi/1:11/stats", "/sys/kernel/debug/bdi/1:12/stats", "/sys/kernel/debug/bdi/1:13/stats", "/sys/kernel/debug/bdi/1:14/stats", "/sys/kernel/debug/bdi/1:15/stats", "/sys/kernel/debug/bdi/1:2/stats", "/sys/kernel/debug/bdi/1:3/stats", "/sys/kernel/debug/bdi/1:4/stats", "/sys/kernel/debug/bdi/1:5/stats", "/sys/kernel/debug/bdi/1:6/stats", "/sys/kernel/debug/bdi/1:7/stats", "/sys/kernel/debug/bdi/1:8/stats", "/sys/kernel/debug/bdi/1:9/stats", "/sys/kernel/debug/bdi/250:0/stats", "/sys/kernel/debug/bdi/252:0/stats", "/sys/kernel/debug/bdi/31:0/stats", "/sys/kernel/debug/bdi/43:0/stats", "/sys/kernel/debug/bdi/43:128/stats", "/sys/kernel/debug/bdi/43:160/stats", "/sys/kernel/debug/bdi/43:192/stats", "/sys/kernel/debug/bdi/43:224/stats", "/sys/kernel/debug/bdi/43:256/stats", "/sys/kernel/debug/bdi/43:288/stats", "/sys/kernel/debug/bdi/43:32/stats", "/sys/kernel/debug/bdi/43:320/stats", "/sys/kernel/debug/bdi/43:352/stats", "/sys/kernel/debug/bdi/43:384/stats", "/sys/kernel/debug/bdi/43:416/stats", "/sys/kernel/debug/bdi/43:448/stats", "/sys/kernel/debug/bdi/43:480/stats", "/sys/kernel/debug/bdi/43:64/stats", "/sys/kernel/debug/bdi/43:96/stats", "/sys/kernel/debug/bdi/7:0/stats", "/sys/kernel/debug/bdi/7:1/stats", "/sys/kernel/debug/bdi/7:10/stats", "/sys/kernel/debug/bdi/7:11/stats", "/sys/kernel/debug/bdi/7:12/stats", "/sys/kernel/debug/bdi/7:13/stats", "/sys/kernel/debug/bdi/7:14/stats", "/sys/kernel/debug/bdi/7:15/stats", "/sys/kernel/debug/bdi/7:2/stats", "/sys/kernel/debug/bdi/7:3/stats", "/sys/kernel/debug/bdi/7:4/stats", "/sys/kernel/debug/bdi/7:5/stats", "/sys/kernel/debug/bdi/7:6/stats", "/sys/kernel/debug/bdi/7:7/stats", "/sys/kernel/debug/bdi/7:8/stats", "/sys/kernel/debug/bdi/7:9/stats", "/sys/kernel/debug/bdi/8:0/stats", "/sys/kernel/debug/bdi/mtd-0/stats"
openat$auto_bdi_debug_stats(fd const[AT_FDCWD], file ptr[in, string[auto_bdi_debug_stats_files]], flags flags[open_flags], mode const[0]) fd_auto_bdi_debug_stats (automatic)
read$auto_bdi_debug_stats(fd fd_auto_bdi_debug_stats, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)

# fops: open:blk_mq_debugfs_open read:seq_read write:blk_mq_debugfs_write
resource fd_auto_blk_mq_debugfs[fd]
auto_blk_mq_debugfs_files = "/sys/kernel/debug/block/loop0/hctx0/active", "/sys/kernel/debug/block/loop0/hctx0/busy", "/sys/kernel/debug/block/loop0/hctx0/cpu0/default_rq_list", "/sys/kernel/debug/block/loop0/hctx0/cpu0/poll_rq_list", "/sys/kernel/debug/block/loop0/hctx0/cpu0/read_rq_list", "/sys/kernel/debug/block/loop0/hctx0/cpu1/default_rq_list", "/sys/kernel/debug/block/loop0/hctx0/cpu1/poll_rq_list", "/sys/kernel/debug/block/loop0/hctx0/cpu1/read_rq_list", "/sys/kernel/debug/block/loop0/hctx0/ctx_map", "/sys/kernel/debug/block/loop0/hctx0/dispatch", "/sys/kernel/debug/block/loop0/hctx0/dispatch_busy", "/sys/kernel/debug/block/loop0/hctx0/flags", "/sys/kernel/debug/block/loop0/hctx0/sched_tags", "/sys/kernel/debug/block/loop0/hctx0/sched_tags_bitmap", "/sys/kernel/debug/block/loop0/hctx0/state", "/sys/kernel/debug/block/loop0/hctx0/tags", "/sys/kernel/debug/block/loop0/hctx0/tags_bitmap", "/sys/kernel/debug/block/loop0/hctx0/type", "/sys/kernel/debug/block/loop0/pm_only", "/sys/kernel/debug/block/loop0/poll_stat", "/sys/kernel/debug/block/loop0/requeue_list", "/sys/kernel/debug/block/loop0/rqos/wbt/curr_win_nsec", "/sys/kernel/debug/block/loop0/rqos/wbt/enabled", "/sys/kernel/debug/block/loop0/rqos/wbt/id", "/sys/kernel/debug/block/loop0/rqos/wbt/inflight", "/sys/kernel/debug/block/loop0/rqos/wbt/min_lat_nsec", "/sys/kernel/debug/block/loop0/rqos/wbt/unknown_cnt", "/sys/kernel/debug/block/loop0/rqos/wbt/wb_background", "/sys/kernel/debug/block/loop0/rqos/wbt/wb_normal", "/sys/kernel/debug/block/loop0/state", "/sys/kernel/debug/block/loop0/zone_wplugs", "/sys/kernel/debug/block/loop1/hctx0/active", "/sys/kernel/debug/block/loop1/hctx0/busy", "/sys/kernel/debug/block/loop1/hctx0/cpu0/default_rq_list", "/sys/kernel/debug/block/loop1/hctx0/cpu0/poll_rq_list", "/sys/kernel/debug/block/loop1/hctx0/cpu0/read_rq_list", "/sys/kernel/debug/block/loop1/hctx0/cpu1/default_rq_list", "/sys/kernel/debug/block/loop1/hctx0/cpu1/poll_rq_list", "/sys/kernel/debug/block/loop1/hctx0/cpu1/read_rq_list", "/sys/kernel/debug/block/loop1/hctx0/ctx_map", "/sys/kernel/debug/block/loop1/hctx0/dispatch", "/sys/kernel/debug/block/loop1/hctx0/dispatch_busy", "/sys/kernel/debug/block/loop1/hctx0/flags", "/sys/kernel/debug/block/loop1/hctx0/sched_tags", "/sys/kernel/debug/block/loop1/hctx0/sched_tags_bitmap", "/sys/kernel/debug/block/loop1/hctx0/state", "/sys/kernel/debug/block/loop1/hctx0/tags", "/sys/kernel/debug/block/loop1/hctx0/tags_bitmap", "/sys/kernel/debug/block/loop1/hctx0/type", "/sys/kernel/debug/block/loop1/pm_only", "/sys/kernel/debug/block/loop1/poll_stat", "/sys/kernel/debug/block/loop1/requeue_list", "/sys/kernel/debug/block/loop1/rqos/wbt/curr_win_nsec", "/sys/kernel/debug/block/loop1/rqos/wbt/enabled", "/sys/kernel/debug/block/loop1/rqos/wbt/id", "/sys/kernel/debug/block/loop1/rqos/wbt/inflight", "/sys/kernel/debug/block/loop1/rqos/wbt/min_lat_nsec", "/sys/kernel/debug/block/loop1/rqos/wbt/unknown_cnt", "/sys/kernel/debug/block/loop1/rqos/wbt/wb_background", "/sys/kernel/debug/block/loop1/rqos/wbt/wb_normal", "/sys/kernel/debug/block/loop1/state", "/sys/kernel/debug/block/loop1/zone_wplugs", "/sys/kernel/debug/block/loop10/hctx0/active", "/sys/kernel/debug/block/loop10/hctx0/busy", "/sys/kernel/debug/block/loop10/hctx0/cpu0/default_rq_list", "/sys/kernel/debug/block/loop10/hctx0/cpu0/poll_rq_list", "/sys/kernel/debug/block/loop10/hctx0/cpu0/read_rq_list", "/sys/kernel/debug/block/loop10/hctx0/cpu1/default_rq_list", "/sys/kernel/debug/block/loop10/hctx0/cpu1/poll_rq_list", "/sys/kernel/debug/block/loop10/hctx0/cpu1/read_rq_list", "/sys/kernel/debug/block/loop10/hctx0/ctx_map", "/sys/kernel/debug/block/loop10/hctx0/dispatch", "/sys/kernel/debug/block/loop10/hctx0/dispatch_busy", "/sys/kernel/debug/block/loop10/hctx0/flags", "/sys/kernel/debug/block/loop10/hctx0/sched_tags", "/sys/kernel/debug/block/loop10/hctx0/sched_tags_bitmap", "/sys/kernel/debug/block/loop10/hctx0/state", "/sys/kernel/debug/block/loop10/hctx0/tags", "/sys/kernel/debug/block/loop10/hctx0/tags_bitmap", "/sys/kernel/debug/block/loop10/hctx0/type", "/sys/kernel/debug/block/loop10/pm_only", "/sys/kernel/debug/block/loop10/poll_stat", "/sys/kernel/debug/block/loop10/requeue_list", "/sys/kernel/debug/block/loop10/rqos/wbt/curr_win_nsec", "/sys/kernel/debug/block/loop10/rqos/wbt/enabled", "/sys/kernel/debug/block/loop10/rqos/wbt/id", "/sys/kernel/debug/block/loop10/rqos/wbt/inflight", "/sys/kernel/debug/block/loop10/rqos/wbt/min_lat_nsec", "/sys/kernel/debug/block/loop10/rqos/wbt/unknown_cnt", "/sys/kernel/debug/block/loop10/rqos/wbt/wb_background", "/sys/kernel/debug/block/loop10/rqos/wbt/wb_normal", "/sys/kernel/debug/block/loop10/state", "/sys/kernel/debug/block/loop10/zone_wplugs", "/sys/kernel/debug/block/loop11/hctx0/active", "/sys/kernel/debug/block/loop11/hctx0/busy", "/sys/kernel/debug/block/loop11/hctx0/cpu0/default_rq_list", "/sys/kernel/debug/block/loop11/hctx0/cpu0/poll_rq_list", "/sys/kernel/debug/block/loop11/hctx0/cpu0/read_rq_list", "/sys/kernel/debug/block/loop11/hctx0/cpu1/default_rq_list", "/sys/kernel/debug/block/loop11/hctx0/cpu1/poll_rq_list", "/sys/kernel/debug/block/loop11/hctx0/cpu1/read_rq_list", "/sys/kernel/debug/block/loop11/hctx0/ctx_map", "/sys/kernel/debug/block/loop11/hctx0/dispatch", "/sys/kernel/debug/block/loop11/hctx0/dispatch_busy", "/sys/kernel/debug/block/loop11/hctx0/flags", "/sys/kernel/debug/block/loop11/hctx0/sched_tags", "/sys/kernel/debug/block/loop11/hctx0/sched_tags_bitmap", "/sys/kernel/debug/block/loop11/hctx0/state", "/sys/kernel/debug/block/loop11/hctx0/tags", "/sys/kernel/debug/block/loop11/hctx0/tags_bitmap", "/sys/kernel/debug/block/loop11/hctx0/type", "/sys/kernel/debug/block/loop11/pm_only", "/sys/kernel/debug/block/loop11/poll_stat", "/sys/kernel/debug/block/loop11/requeue_list", "/sys/kernel/debug/block/loop11/rqos/wbt/curr_win_nsec", "/sys/kernel/debug/block/loop11/rqos/wbt/enabled", "/sys/kernel/debug/block/loop11/rqos/wbt/id", "/sys/kernel/debug/block/loop11/rqos/wbt/inflight", "/sys/kernel/debug/block/loop11/rqos/wbt/min_lat_nsec", "/sys/kernel/debug/block/loop11/rqos/wbt/unknown_cnt", "/sys/kernel/debug/block/loop11/rqos/wbt/wb_background", "/sys/kernel/debug/block/loop11/rqos/wbt/wb_normal", "/sys/kernel/debug/block/loop11/state", "/sys/kernel/debug/block/loop11/zone_wplugs", "/sys/kernel/debug/block/loop12/hctx0/active", "/sys/kernel/debug/block/loop12/hctx0/busy", "/sys/kernel/debug/block/loop12/hctx0/cpu0/default_rq_list", "/sys/kernel/debug/block/loop12/hctx0/cpu0/poll_rq_list", "/sys/kernel/debug/block/loop12/hctx0/cpu0/read_rq_list", "/sys/kernel/debug/block/loop12/hctx0/cpu1/default_rq_list", "/sys/kernel/debug/block/loop12/hctx0/cpu1/poll_rq_list", "/sys/kernel/debug/block/loop12/hctx0/cpu1/read_rq_list", "/sys/kernel/debug/block/loop12/hctx0/ctx_map", "/sys/kernel/debug/block/loop12/hctx0/dispatch", "/sys/kernel/debug/block/loop12/hctx0/dispatch_busy", "/sys/kernel/debug/block/loop12/hctx0/flags", "/sys/kernel/debug/block/loop12/hctx0/sched_tags", "/sys/kernel/debug/block/loop12/hctx0/sched_tags_bitmap", "/sys/kernel/debug/block/loop12/hctx0/state", "/sys/kernel/debug/block/loop12/hctx0/tags", "/sys/kernel/debug/block/loop12/hctx0/tags_bitmap", "/sys/kernel/debug/block/loop12/hctx0/type", "/sys/kernel/debug/block/loop12/pm_only", "/sys/kernel/debug/block/loop12/poll_stat", "/sys/kernel/debug/block/loop12/requeue_list", "/sys/kernel/debug/block/loop12/rqos/wbt/curr_win_nsec", "/sys/kernel/debug/block/loop12/rqos/wbt/enabled", "/sys/kernel/debug/block/loop12/rqos/wbt/id", "/sys/kernel/debug/block/loop12/rqos/wbt/inflight", "/sys/kernel/debug/block/loop12/rqos/wbt/min_lat_nsec", "/sys/kernel/debug/block/loop12/rqos/wbt/unknown_cnt", "/sys/kernel/debug/block/loop12/rqos/wbt/wb_background", "/sys/kernel/debug/block/loop12/rqos/wbt/wb_normal", "/sys/kernel/debug/block/loop12/state", "/sys/kernel/debug/block/loop12/zone_wplugs", "/sys/kernel/debug/block/loop13/hctx0/active", "/sys/kernel/debug/block/loop13/hctx0/busy", "/sys/kernel/debug/block/loop13/hctx0/cpu0/default_rq_list", "/sys/kernel/debug/block/loop13/hctx0/cpu0/poll_rq_list", "/sys/kernel/debug/block/loop13/hctx0/cpu0/read_rq_list", "/sys/kernel/debug/block/loop13/hctx0/cpu1/default_rq_list", "/sys/kernel/debug/block/loop13/hctx0/cpu1/poll_rq_list", "/sys/kernel/debug/block/loop13/hctx0/cpu1/read_rq_list", "/sys/kernel/debug/block/loop13/hctx0/ctx_map", "/sys/kernel/debug/block/loop13/hctx0/dispatch", "/sys/kernel/debug/block/loop13/hctx0/dispatch_busy", "/sys/kernel/debug/block/loop13/hctx0/flags", "/sys/kernel/debug/block/loop13/hctx0/sched_tags", "/sys/kernel/debug/block/loop13/hctx0/sched_tags_bitmap", "/sys/kernel/debug/block/loop13/hctx0/state", "/sys/kernel/debug/block/loop13/hctx0/tags", "/sys/kernel/debug/block/loop13/hctx0/tags_bitmap", "/sys/kernel/debug/block/loop13/hctx0/type", "/sys/kernel/debug/block/loop13/pm_only", "/sys/kernel/debug/block/loop13/poll_stat", "/sys/kernel/debug/block/loop13/requeue_list", "/sys/kernel/debug/block/loop13/rqos/wbt/curr_win_nsec", "/sys/kernel/debug/block/loop13/rqos/wbt/enabled", "/sys/kernel/debug/block/loop13/rqos/wbt/id", "/sys/kernel/debug/block/loop13/rqos/wbt/inflight", "/sys/kernel/debug/block/loop13/rqos/wbt/min_lat_nsec", "/sys/kernel/debug/block/loop13/rqos/wbt/unknown_cnt", "/sys/kernel/debug/block/loop13/rqos/wbt/wb_background", "/sys/kernel/debug/block/loop13/rqos/wbt/wb_normal", "/sys/kernel/debug/block/loop13/state", "/sys/kernel/debug/block/loop13/zone_wplugs", "/sys/kernel/debug/block/loop14/hctx0/active", "/sys/kernel/debug/block/loop14/hctx0/busy", "/sys/kernel/debug/block/loop14/hctx0/cpu0/default_rq_list", "/sys/kernel/debug/block/loop14/hctx0/cpu0/poll_rq_list", "/sys/kernel/debug/block/loop14/hctx0/cpu0/read_rq_list", "/sys/kernel/debug/block/loop14/hctx0/cpu1/default_rq_list", "/sys/kernel/debug/block/loop14/hctx0/cpu1/poll_rq_list", "/sys/kernel/debug/block/loop14/hctx0/cpu1/read_rq_list", "/sys/kernel/debug/block/loop14/hctx0/ctx_map", "/sys/kernel/debug/block/loop14/hctx0/dispatch", "/sys/kernel/debug/block/loop14/hctx0/dispatch_busy", "/sys/kernel/debug/block/loop14/hctx0/flags", "/sys/kernel/debug/block/loop14/hctx0/sched_tags", "/sys/kernel/debug/block/loop14/hctx0/sched_tags_bitmap", "/sys/kernel/debug/block/loop14/hctx0/state", "/sys/kernel/debug/block/loop14/hctx0/tags", "/sys/kernel/debug/block/loop14/hctx0/tags_bitmap", "/sys/kernel/debug/block/loop14/hctx0/type", "/sys/kernel/debug/block/loop14/pm_only", "/sys/kernel/debug/block/loop14/poll_stat", "/sys/kernel/debug/block/loop14/requeue_list", "/sys/kernel/debug/block/loop14/rqos/wbt/curr_win_nsec", "/sys/kernel/debug/block/loop14/rqos/wbt/enabled", "/sys/kernel/debug/block/loop14/rqos/wbt/id", "/sys/kernel/debug/block/loop14/rqos/wbt/inflight", "/sys/kernel/debug/block/loop14/rqos/wbt/min_lat_nsec", "/sys/kernel/debug/block/loop14/rqos/wbt/unknown_cnt", "/sys/kernel/debug/block/loop14/rqos/wbt/wb_background", "/sys/kernel/debug/block/loop14/rqos/wbt/wb_normal", "/sys/kernel/debug/block/loop14/state", "/sys/kernel/debug/block/loop14/zone_wplugs", "/sys/kernel/debug/block/loop15/hctx0/active", "/sys/kernel/debug/block/loop15/hctx0/busy", "/sys/kernel/debug/block/loop15/hctx0/cpu0/default_rq_list", "/sys/kernel/debug/block/loop15/hctx0/cpu0/poll_rq_list", "/sys/kernel/debug/block/loop15/hctx0/cpu0/read_rq_list", "/sys/kernel/debug/block/loop15/hctx0/cpu1/default_rq_list", "/sys/kernel/debug/block/loop15/hctx0/cpu1/poll_rq_list", "/sys/kernel/debug/block/loop15/hctx0/cpu1/read_rq_list", "/sys/kernel/debug/block/loop15/hctx0/ctx_map", "/sys/kernel/debug/block/loop15/hctx0/dispatch", "/sys/kernel/debug/block/loop15/hctx0/dispatch_busy", "/sys/kernel/debug/block/loop15/hctx0/flags", "/sys/kernel/debug/block/loop15/hctx0/sched_tags", "/sys/kernel/debug/block/loop15/hctx0/sched_tags_bitmap", "/sys/kernel/debug/block/loop15/hctx0/state", "/sys/kernel/debug/block/loop15/hctx0/tags", "/sys/kernel/debug/block/loop15/hctx0/tags_bitmap", "/sys/kernel/debug/block/loop15/hctx0/type", "/sys/kernel/debug/block/loop15/pm_only", "/sys/kernel/debug/block/loop15/poll_stat", "/sys/kernel/debug/block/loop15/requeue_list", "/sys/kernel/debug/block/loop15/rqos/wbt/curr_win_nsec", "/sys/kernel/debug/block/loop15/rqos/wbt/enabled", "/sys/kernel/debug/block/loop15/rqos/wbt/id", "/sys/kernel/debug/block/loop15/rqos/wbt/inflight", "/sys/kernel/debug/block/loop15/rqos/wbt/min_lat_nsec", "/sys/kernel/debug/block/loop15/rqos/wbt/unknown_cnt", "/sys/kernel/debug/block/loop15/rqos/wbt/wb_background", "/sys/kernel/debug/block/loop15/rqos/wbt/wb_normal", "/sys/kernel/debug/block/loop15/state", "/sys/kernel/debug/block/loop15/zone_wplugs", "/sys/kernel/debug/block/loop2/hctx0/active", "/sys/kernel/debug/block/loop2/hctx0/busy", "/sys/kernel/debug/block/loop2/hctx0/cpu0/default_rq_list", "/sys/kernel/debug/block/loop2/hctx0/cpu0/poll_rq_list", "/sys/kernel/debug/block/loop2/hctx0/cpu0/read_rq_list", "/sys/kernel/debug/block/loop2/hctx0/cpu1/default_rq_list", "/sys/kernel/debug/block/loop2/hctx0/cpu1/poll_rq_list", "/sys/kernel/debug/block/loop2/hctx0/cpu1/read_rq_list", "/sys/kernel/debug/block/loop2/hctx0/ctx_map", "/sys/kernel/debug/block/loop2/hctx0/dispatch", "/sys/kernel/debug/block/loop2/hctx0/dispatch_busy", "/sys/kernel/debug/block/loop2/hctx0/flags", "/sys/kernel/debug/block/loop2/hctx0/sched_tags", "/sys/kernel/debug/block/loop2/hctx0/sched_tags_bitmap", "/sys/kernel/debug/block/loop2/hctx0/state", "/sys/kernel/debug/block/loop2/hctx0/tags", "/sys/kernel/debug/block/loop2/hctx0/tags_bitmap", "/sys/kernel/debug/block/loop2/hctx0/type", "/sys/kernel/debug/block/loop2/pm_only", "/sys/kernel/debug/block/loop2/poll_stat", "/sys/kernel/debug/block/loop2/requeue_list", "/sys/kernel/debug/block/loop2/rqos/wbt/curr_win_nsec", "/sys/kernel/debug/block/loop2/rqos/wbt/enabled", "/sys/kernel/debug/block/loop2/rqos/wbt/id", "/sys/kernel/debug/block/loop2/rqos/wbt/inflight", "/sys/kernel/debug/block/loop2/rqos/wbt/min_lat_nsec", "/sys/kernel/debug/block/loop2/rqos/wbt/unknown_cnt", "/sys/kernel/debug/block/loop2/rqos/wbt/wb_background", "/sys/kernel/debug/block/loop2/rqos/wbt/wb_normal", "/sys/kernel/debug/block/loop2/state", "/sys/kernel/debug/block/loop2/zone_wplugs", "/sys/kernel/debug/block/loop3/hctx0/active", "/sys/kernel/debug/block/loop3/hctx0/busy", "/sys/kernel/debug/block/loop3/hctx0/cpu0/default_rq_list", "/sys/kernel/debug/block/loop3/hctx0/cpu0/poll_rq_list", "/sys/kernel/debug/block/loop3/hctx0/cpu0/read_rq_list", "/sys/kernel/debug/block/loop3/hctx0/cpu1/default_rq_list", "/sys/kernel/debug/block/loop3/hctx0/cpu1/poll_rq_list", "/sys/kernel/debug/block/loop3/hctx0/cpu1/read_rq_list", "/sys/kernel/debug/block/loop3/hctx0/ctx_map", "/sys/kernel/debug/block/loop3/hctx0/dispatch", "/sys/kernel/debug/block/loop3/hctx0/dispatch_busy", "/sys/kernel/debug/block/loop3/hctx0/flags", "/sys/kernel/debug/block/loop3/hctx0/sched_tags", "/sys/kernel/debug/block/loop3/hctx0/sched_tags_bitmap", "/sys/kernel/debug/block/loop3/hctx0/state", "/sys/kernel/debug/block/loop3/hctx0/tags", "/sys/kernel/debug/block/loop3/hctx0/tags_bitmap", "/sys/kernel/debug/block/loop3/hctx0/type", "/sys/kernel/debug/block/loop3/pm_only", "/sys/kernel/debug/block/loop3/poll_stat", "/sys/kernel/debug/block/loop3/requeue_list", "/sys/kernel/debug/block/loop3/rqos/wbt/curr_win_nsec", "/sys/kernel/debug/block/loop3/rqos/wbt/enabled", "/sys/kernel/debug/block/loop3/rqos/wbt/id", "/sys/kernel/debug/block/loop3/rqos/wbt/inflight", "/sys/kernel/debug/block/loop3/rqos/wbt/min_lat_nsec", "/sys/kernel/debug/block/loop3/rqos/wbt/unknown_cnt", "/sys/kernel/debug/block/loop3/rqos/wbt/wb_background", "/sys/kernel/debug/block/loop3/rqos/wbt/wb_normal", "/sys/kernel/debug/block/loop3/state", "/sys/kernel/debug/block/loop3/zone_wplugs", "/sys/kernel/debug/block/loop4/hctx0/active", "/sys/kernel/debug/block/loop4/hctx0/busy", "/sys/kernel/debug/block/loop4/hctx0/cpu0/default_rq_list", "/sys/kernel/debug/block/loop4/hctx0/cpu0/poll_rq_list", "/sys/kernel/debug/block/loop4/hctx0/cpu0/read_rq_list", "/sys/kernel/debug/block/loop4/hctx0/cpu1/default_rq_list", "/sys/kernel/debug/block/loop4/hctx0/cpu1/poll_rq_list", "/sys/kernel/debug/block/loop4/hctx0/cpu1/read_rq_list", "/sys/kernel/debug/block/loop4/hctx0/ctx_map", "/sys/kernel/debug/block/loop4/hctx0/dispatch", "/sys/kernel/debug/block/loop4/hctx0/dispatch_busy", "/sys/kernel/debug/block/loop4/hctx0/flags", "/sys/kernel/debug/block/loop4/hctx0/sched_tags", "/sys/kernel/debug/block/loop4/hctx0/sched_tags_bitmap", "/sys/kernel/debug/block/loop4/hctx0/state", "/sys/kernel/debug/block/loop4/hctx0/tags", "/sys/kernel/debug/block/loop4/hctx0/tags_bitmap", "/sys/kernel/debug/block/loop4/hctx0/type", "/sys/kernel/debug/block/loop4/pm_only", "/sys/kernel/debug/block/loop4/poll_stat", "/sys/kernel/debug/block/loop4/requeue_list", "/sys/kernel/debug/block/loop4/rqos/wbt/curr_win_nsec", "/sys/kernel/debug/block/loop4/rqos/wbt/enabled", "/sys/kernel/debug/block/loop4/rqos/wbt/id", "/sys/kernel/debug/block/loop4/rqos/wbt/inflight", "/sys/kernel/debug/block/loop4/rqos/wbt/min_lat_nsec", "/sys/kernel/debug/block/loop4/rqos/wbt/unknown_cnt", "/sys/kernel/debug/block/loop4/rqos/wbt/wb_background", "/sys/kernel/debug/block/loop4/rqos/wbt/wb_normal", "/sys/kernel/debug/block/loop4/state", "/sys/kernel/debug/block/loop4/zone_wplugs", "/sys/kernel/debug/block/loop5/hctx0/active", "/sys/kernel/debug/block/loop5/hctx0/busy", "/sys/kernel/debug/block/loop5/hctx0/cpu0/default_rq_list", "/sys/kernel/debug/block/loop5/hctx0/cpu0/poll_rq_list", "/sys/kernel/debug/block/loop5/hctx0/cpu0/read_rq_list", "/sys/kernel/debug/block/loop5/hctx0/cpu1/default_rq_list", "/sys/kernel/debug/block/loop5/hctx0/cpu1/poll_rq_list", "/sys/kernel/debug/block/loop5/hctx0/cpu1/read_rq_list", "/sys/kernel/debug/block/loop5/hctx0/ctx_map", "/sys/kernel/debug/block/loop5/hctx0/dispatch", "/sys/kernel/debug/block/loop5/hctx0/dispatch_busy", "/sys/kernel/debug/block/loop5/hctx0/flags", "/sys/kernel/debug/block/loop5/hctx0/sched_tags", "/sys/kernel/debug/block/loop5/hctx0/sched_tags_bitmap", "/sys/kernel/debug/block/loop5/hctx0/state", "/sys/kernel/debug/block/loop5/hctx0/tags", "/sys/kernel/debug/block/loop5/hctx0/tags_bitmap", "/sys/kernel/debug/block/loop5/hctx0/type", "/sys/kernel/debug/block/loop5/pm_only", "/sys/kernel/debug/block/loop5/poll_stat", "/sys/kernel/debug/block/loop5/requeue_list", "/sys/kernel/debug/block/loop5/rqos/wbt/curr_win_nsec", "/sys/kernel/debug/block/loop5/rqos/wbt/enabled", "/sys/kernel/debug/block/loop5/rqos/wbt/id", "/sys/kernel/debug/block/loop5/rqos/wbt/inflight", "/sys/kernel/debug/block/loop5/rqos/wbt/min_lat_nsec", "/sys/kernel/debug/block/loop5/rqos/wbt/unknown_cnt", "/sys/kernel/debug/block/loop5/rqos/wbt/wb_background", "/sys/kernel/debug/block/loop5/rqos/wbt/wb_normal", "/sys/kernel/debug/block/loop5/state", "/sys/kernel/debug/block/loop5/zone_wplugs", "/sys/kernel/debug/block/loop6/hctx0/active", "/sys/kernel/debug/block/loop6/hctx0/busy", "/sys/kernel/debug/block/loop6/hctx0/cpu0/default_rq_list", "/sys/kernel/debug/block/loop6/hctx0/cpu0/poll_rq_list", "/sys/kernel/debug/block/loop6/hctx0/cpu0/read_rq_list", "/sys/kernel/debug/block/loop6/hctx0/cpu1/default_rq_list", "/sys/kernel/debug/block/loop6/hctx0/cpu1/poll_rq_list", "/sys/kernel/debug/block/loop6/hctx0/cpu1/read_rq_list", "/sys/kernel/debug/block/loop6/hctx0/ctx_map", "/sys/kernel/debug/block/loop6/hctx0/dispatch", "/sys/kernel/debug/block/loop6/hctx0/dispatch_busy", "/sys/kernel/debug/block/loop6/hctx0/flags", "/sys/kernel/debug/block/loop6/hctx0/sched_tags", "/sys/kernel/debug/block/loop6/hctx0/sched_tags_bitmap", "/sys/kernel/debug/block/loop6/hctx0/state", "/sys/kernel/debug/block/loop6/hctx0/tags", "/sys/kernel/debug/block/loop6/hctx0/tags_bitmap", "/sys/kernel/debug/block/loop6/hctx0/type", "/sys/kernel/debug/block/loop6/pm_only", "/sys/kernel/debug/block/loop6/poll_stat", "/sys/kernel/debug/block/loop6/requeue_list", "/sys/kernel/debug/block/loop6/rqos/wbt/curr_win_nsec", "/sys/kernel/debug/block/loop6/rqos/wbt/enabled", "/sys/kernel/debug/block/loop6/rqos/wbt/id", "/sys/kernel/debug/block/loop6/rqos/wbt/inflight", "/sys/kernel/debug/block/loop6/rqos/wbt/min_lat_nsec", "/sys/kernel/debug/block/loop6/rqos/wbt/unknown_cnt", "/sys/kernel/debug/block/loop6/rqos/wbt/wb_background", "/sys/kernel/debug/block/loop6/rqos/wbt/wb_normal", "/sys/kernel/debug/block/loop6/state", "/sys/kernel/debug/block/loop6/zone_wplugs", "/sys/kernel/debug/block/loop7/hctx0/active", "/sys/kernel/debug/block/loop7/hctx0/busy", "/sys/kernel/debug/block/loop7/hctx0/cpu0/default_rq_list", "/sys/kernel/debug/block/loop7/hctx0/cpu0/poll_rq_list", "/sys/kernel/debug/block/loop7/hctx0/cpu0/read_rq_list", "/sys/kernel/debug/block/loop7/hctx0/cpu1/default_rq_list", "/sys/kernel/debug/block/loop7/hctx0/cpu1/poll_rq_list", "/sys/kernel/debug/block/loop7/hctx0/cpu1/read_rq_list", "/sys/kernel/debug/block/loop7/hctx0/ctx_map", "/sys/kernel/debug/block/loop7/hctx0/dispatch", "/sys/kernel/debug/block/loop7/hctx0/dispatch_busy", "/sys/kernel/debug/block/loop7/hctx0/flags", "/sys/kernel/debug/block/loop7/hctx0/sched_tags", "/sys/kernel/debug/block/loop7/hctx0/sched_tags_bitmap", "/sys/kernel/debug/block/loop7/hctx0/state", "/sys/kernel/debug/block/loop7/hctx0/tags", "/sys/kernel/debug/block/loop7/hctx0/tags_bitmap", "/sys/kernel/debug/block/loop7/hctx0/type", "/sys/kernel/debug/block/loop7/pm_only", "/sys/kernel/debug/block/loop7/poll_stat", "/sys/kernel/debug/block/loop7/requeue_list", "/sys/kernel/debug/block/loop7/rqos/wbt/curr_win_nsec", "/sys/kernel/debug/block/loop7/rqos/wbt/enabled", "/sys/kernel/debug/block/loop7/rqos/wbt/id", "/sys/kernel/debug/block/loop7/rqos/wbt/inflight", "/sys/kernel/debug/block/loop7/rqos/wbt/min_lat_nsec", "/sys/kernel/debug/block/loop7/rqos/wbt/unknown_cnt", "/sys/kernel/debug/block/loop7/rqos/wbt/wb_background", "/sys/kernel/debug/block/loop7/rqos/wbt/wb_normal", "/sys/kernel/debug/block/loop7/state", "/sys/kernel/debug/block/loop7/zone_wplugs", "/sys/kernel/debug/block/loop8/hctx0/active", "/sys/kernel/debug/block/loop8/hctx0/busy", "/sys/kernel/debug/block/loop8/hctx0/cpu0/default_rq_list", "/sys/kernel/debug/block/loop8/hctx0/cpu0/poll_rq_list", "/sys/kernel/debug/block/loop8/hctx0/cpu0/read_rq_list", "/sys/kernel/debug/block/loop8/hctx0/cpu1/default_rq_list", "/sys/kernel/debug/block/loop8/hctx0/cpu1/poll_rq_list", "/sys/kernel/debug/block/loop8/hctx0/cpu1/read_rq_list", "/sys/kernel/debug/block/loop8/hctx0/ctx_map", "/sys/kernel/debug/block/loop8/hctx0/dispatch", "/sys/kernel/debug/block/loop8/hctx0/dispatch_busy", "/sys/kernel/debug/block/loop8/hctx0/flags", "/sys/kernel/debug/block/loop8/hctx0/sched_tags", "/sys/kernel/debug/block/loop8/hctx0/sched_tags_bitmap", "/sys/kernel/debug/block/loop8/hctx0/state", "/sys/kernel/debug/block/loop8/hctx0/tags", "/sys/kernel/debug/block/loop8/hctx0/tags_bitmap", "/sys/kernel/debug/block/loop8/hctx0/type", "/sys/kernel/debug/block/loop8/pm_only", "/sys/kernel/debug/block/loop8/poll_stat", "/sys/kernel/debug/block/loop8/requeue_list", "/sys/kernel/debug/block/loop8/rqos/wbt/curr_win_nsec", "/sys/kernel/debug/block/loop8/rqos/wbt/enabled", "/sys/kernel/debug/block/loop8/rqos/wbt/id", "/sys/kernel/debug/block/loop8/rqos/wbt/inflight", "/sys/kernel/debug/block/loop8/rqos/wbt/min_lat_nsec", "/sys/kernel/debug/block/loop8/rqos/wbt/unknown_cnt", "/sys/kernel/debug/block/loop8/rqos/wbt/wb_background", "/sys/kernel/debug/block/loop8/rqos/wbt/wb_normal", "/sys/kernel/debug/block/loop8/state", "/sys/kernel/debug/block/loop8/zone_wplugs", "/sys/kernel/debug/block/loop9/hctx0/active", "/sys/kernel/debug/block/loop9/hctx0/busy", "/sys/kernel/debug/block/loop9/hctx0/cpu0/default_rq_list", "/sys/kernel/debug/block/loop9/hctx0/cpu0/poll_rq_list", "/sys/kernel/debug/block/loop9/hctx0/cpu0/read_rq_list", "/sys/kernel/debug/block/loop9/hctx0/cpu1/default_rq_list", "/sys/kernel/debug/block/loop9/hctx0/cpu1/poll_rq_list", "/sys/kernel/debug/block/loop9/hctx0/cpu1/read_rq_list", "/sys/kernel/debug/block/loop9/hctx0/ctx_map", "/sys/kernel/debug/block/loop9/hctx0/dispatch", "/sys/kernel/debug/block/loop9/hctx0/dispatch_busy", "/sys/kernel/debug/block/loop9/hctx0/flags", "/sys/kernel/debug/block/loop9/hctx0/sched_tags", "/sys/kernel/debug/block/loop9/hctx0/sched_tags_bitmap", "/sys/kernel/debug/block/loop9/hctx0/state", "/sys/kernel/debug/block/loop9/hctx0/tags", "/sys/kernel/debug/block/loop9/hctx0/tags_bitmap", "/sys/kernel/debug/block/loop9/hctx0/type", "/sys/kernel/debug/block/loop9/pm_only", "/sys/kernel/debug/block/loop9/poll_stat", "/sys/kernel/debug/block/loop9/requeue_list", "/sys/kernel/debug/block/loop9/rqos/wbt/curr_win_nsec", "/sys/kernel/debug/block/loop9/rqos/wbt/enabled", "/sys/kernel/debug/block/loop9/rqos/wbt/id", "/sys/kernel/debug/block/loop9/rqos/wbt/inflight", "/sys/kernel/debug/block/loop9/rqos/wbt/min_lat_nsec", "/sys/kernel/debug/block/loop9/rqos/wbt/unknown_cnt", "/sys/kernel/debug/block/loop9/rqos/wbt/wb_background", "/sys/kernel/debug/block/loop9/rqos/wbt/wb_normal", "/sys/kernel/debug/block/loop9/state", "/sys/kernel/debug/block/loop9/zone_wplugs", "/sys/kernel/debug/block/mtdblock0/hctx0/active", "/sys/kernel/debug/block/mtdblock0/hctx0/busy", "/sys/kernel/debug/block/mtdblock0/hctx0/cpu0/default_rq_list", "/sys/kernel/debug/block/mtdblock0/hctx0/cpu0/poll_rq_list", "/sys/kernel/debug/block/mtdblock0/hctx0/cpu0/read_rq_list", "/sys/kernel/debug/block/mtdblock0/hctx0/cpu1/default_rq_list", "/sys/kernel/debug/block/mtdblock0/hctx0/cpu1/poll_rq_list", "/sys/kernel/debug/block/mtdblock0/hctx0/cpu1/read_rq_list", "/sys/kernel/debug/block/mtdblock0/hctx0/ctx_map", "/sys/kernel/debug/block/mtdblock0/hctx0/dispatch", "/sys/kernel/debug/block/mtdblock0/hctx0/dispatch_busy", "/sys/kernel/debug/block/mtdblock0/hctx0/flags", "/sys/kernel/debug/block/mtdblock0/hctx0/sched_tags", "/sys/kernel/debug/block/mtdblock0/hctx0/sched_tags_bitmap", "/sys/kernel/debug/block/mtdblock0/hctx0/state", "/sys/kernel/debug/block/mtdblock0/hctx0/tags", "/sys/kernel/debug/block/mtdblock0/hctx0/tags_bitmap", "/sys/kernel/debug/block/mtdblock0/hctx0/type", "/sys/kernel/debug/block/mtdblock0/pm_only", "/sys/kernel/debug/block/mtdblock0/poll_stat", "/sys/kernel/debug/block/mtdblock0/requeue_list", "/sys/kernel/debug/block/mtdblock0/rqos/wbt/curr_win_nsec", "/sys/kernel/debug/block/mtdblock0/rqos/wbt/enabled", "/sys/kernel/debug/block/mtdblock0/rqos/wbt/id", "/sys/kernel/debug/block/mtdblock0/rqos/wbt/inflight", "/sys/kernel/debug/block/mtdblock0/rqos/wbt/min_lat_nsec", "/sys/kernel/debug/block/mtdblock0/rqos/wbt/unknown_cnt", "/sys/kernel/debug/block/mtdblock0/rqos/wbt/wb_background", "/sys/kernel/debug/block/mtdblock0/rqos/wbt/wb_normal", "/sys/kernel/debug/block/mtdblock0/sched/async_depth", "/sys/kernel/debug/block/mtdblock0/sched/batching", "/sys/kernel/debug/block/mtdblock0/sched/dispatch0", "/sys/kernel/debug/block/mtdblock0/sched/dispatch1", "/sys/kernel/debug/block/mtdblock0/sched/dispatch2", "/sys/kernel/debug/block/mtdblock0/sched/owned_by_driver", "/sys/kernel/debug/block/mtdblock0/sched/queued", "/sys/kernel/debug/block/mtdblock0/sched/read0_fifo_list", "/sys/kernel/debug/block/mtdblock0/sched/read0_next_rq", "/sys/kernel/debug/block/mtdblock0/sched/read1_fifo_list", "/sys/kernel/debug/block/mtdblock0/sched/read1_next_rq", "/sys/kernel/debug/block/mtdblock0/sched/read2_fifo_list", "/sys/kernel/debug/block/mtdblock0/sched/read2_next_rq", "/sys/kernel/debug/block/mtdblock0/sched/starved", "/sys/kernel/debug/block/mtdblock0/sched/write0_fifo_list", "/sys/kernel/debug/block/mtdblock0/sched/write0_next_rq", "/sys/kernel/debug/block/mtdblock0/sched/write1_fifo_list", "/sys/kernel/debug/block/mtdblock0/sched/write1_next_rq", "/sys/kernel/debug/block/mtdblock0/sched/write2_fifo_list", "/sys/kernel/debug/block/mtdblock0/sched/write2_next_rq", "/sys/kernel/debug/block/mtdblock0/state", "/sys/kernel/debug/block/mtdblock0/zone_wplugs", "/sys/kernel/debug/block/nbd0/hctx0/active", "/sys/kernel/debug/block/nbd0/hctx0/busy", "/sys/kernel/debug/block/nbd0/hctx0/cpu0/default_rq_list", "/sys/kernel/debug/block/nbd0/hctx0/cpu0/poll_rq_list", "/sys/kernel/debug/block/nbd0/hctx0/cpu0/read_rq_list", "/sys/kernel/debug/block/nbd0/hctx0/cpu1/default_rq_list", "/sys/kernel/debug/block/nbd0/hctx0/cpu1/poll_rq_list", "/sys/kernel/debug/block/nbd0/hctx0/cpu1/read_rq_list", "/sys/kernel/debug/block/nbd0/hctx0/ctx_map", "/sys/kernel/debug/block/nbd0/hctx0/dispatch", "/sys/kernel/debug/block/nbd0/hctx0/dispatch_busy", "/sys/kernel/debug/block/nbd0/hctx0/flags", "/sys/kernel/debug/block/nbd0/hctx0/sched_tags", "/sys/kernel/debug/block/nbd0/hctx0/sched_tags_bitmap", "/sys/kernel/debug/block/nbd0/hctx0/state", "/sys/kernel/debug/block/nbd0/hctx0/tags", "/sys/kernel/debug/block/nbd0/hctx0/tags_bitmap", "/sys/kernel/debug/block/nbd0/hctx0/type", "/sys/kernel/debug/block/nbd0/pm_only", "/sys/kernel/debug/block/nbd0/poll_stat", "/sys/kernel/debug/block/nbd0/requeue_list", "/sys/kernel/debug/block/nbd0/rqos/wbt/curr_win_nsec", "/sys/kernel/debug/block/nbd0/rqos/wbt/enabled", "/sys/kernel/debug/block/nbd0/rqos/wbt/id", "/sys/kernel/debug/block/nbd0/rqos/wbt/inflight", "/sys/kernel/debug/block/nbd0/rqos/wbt/min_lat_nsec", "/sys/kernel/debug/block/nbd0/rqos/wbt/unknown_cnt", "/sys/kernel/debug/block/nbd0/rqos/wbt/wb_background", "/sys/kernel/debug/block/nbd0/rqos/wbt/wb_normal", "/sys/kernel/debug/block/nbd0/sched/async_depth", "/sys/kernel/debug/block/nbd0/sched/batching", "/sys/kernel/debug/block/nbd0/sched/dispatch0", "/sys/kernel/debug/block/nbd0/sched/dispatch1", "/sys/kernel/debug/block/nbd0/sched/dispatch2", "/sys/kernel/debug/block/nbd0/sched/owned_by_driver", "/sys/kernel/debug/block/nbd0/sched/queued", "/sys/kernel/debug/block/nbd0/sched/read0_fifo_list", "/sys/kernel/debug/block/nbd0/sched/read0_next_rq", "/sys/kernel/debug/block/nbd0/sched/read1_fifo_list", "/sys/kernel/debug/block/nbd0/sched/read1_next_rq", "/sys/kernel/debug/block/nbd0/sched/read2_fifo_list", "/sys/kernel/debug/block/nbd0/sched/read2_next_rq", "/sys/kernel/debug/block/nbd0/sched/starved", "/sys/kernel/debug/block/nbd0/sched/write0_fifo_list", "/sys/kernel/debug/block/nbd0/sched/write0_next_rq", "/sys/kernel/debug/block/nbd0/sched/write1_fifo_list", "/sys/kernel/debug/block/nbd0/sched/write1_next_rq", "/sys/kernel/debug/block/nbd0/sched/write2_fifo_list", "/sys/kernel/debug/block/nbd0/sched/write2_next_rq", "/sys/kernel/debug/block/nbd0/state", "/sys/kernel/debug/block/nbd0/zone_wplugs", "/sys/kernel/debug/block/nbd1/hctx0/active", "/sys/kernel/debug/block/nbd1/hctx0/busy", "/sys/kernel/debug/block/nbd1/hctx0/cpu0/default_rq_list", "/sys/kernel/debug/block/nbd1/hctx0/cpu0/poll_rq_list", "/sys/kernel/debug/block/nbd1/hctx0/cpu0/read_rq_list", "/sys/kernel/debug/block/nbd1/hctx0/cpu1/default_rq_list", "/sys/kernel/debug/block/nbd1/hctx0/cpu1/poll_rq_list", "/sys/kernel/debug/block/nbd1/hctx0/cpu1/read_rq_list", "/sys/kernel/debug/block/nbd1/hctx0/ctx_map", "/sys/kernel/debug/block/nbd1/hctx0/dispatch", "/sys/kernel/debug/block/nbd1/hctx0/dispatch_busy", "/sys/kernel/debug/block/nbd1/hctx0/flags", "/sys/kernel/debug/block/nbd1/hctx0/sched_tags", "/sys/kernel/debug/block/nbd1/hctx0/sched_tags_bitmap", "/sys/kernel/debug/block/nbd1/hctx0/state", "/sys/kernel/debug/block/nbd1/hctx0/tags", "/sys/kernel/debug/block/nbd1/hctx0/tags_bitmap", "/sys/kernel/debug/block/nbd1/hctx0/type", "/sys/kernel/debug/block/nbd1/pm_only", "/sys/kernel/debug/block/nbd1/poll_stat", "/sys/kernel/debug/block/nbd1/requeue_list", "/sys/kernel/debug/block/nbd1/rqos/wbt/curr_win_nsec", "/sys/kernel/debug/block/nbd1/rqos/wbt/enabled", "/sys/kernel/debug/block/nbd1/rqos/wbt/id", "/sys/kernel/debug/block/nbd1/rqos/wbt/inflight", "/sys/kernel/debug/block/nbd1/rqos/wbt/min_lat_nsec", "/sys/kernel/debug/block/nbd1/rqos/wbt/unknown_cnt", "/sys/kernel/debug/block/nbd1/rqos/wbt/wb_background", "/sys/kernel/debug/block/nbd1/rqos/wbt/wb_normal", "/sys/kernel/debug/block/nbd1/sched/async_depth", "/sys/kernel/debug/block/nbd1/sched/batching", "/sys/kernel/debug/block/nbd1/sched/dispatch0", "/sys/kernel/debug/block/nbd1/sched/dispatch1", "/sys/kernel/debug/block/nbd1/sched/dispatch2", "/sys/kernel/debug/block/nbd1/sched/owned_by_driver", "/sys/kernel/debug/block/nbd1/sched/queued", "/sys/kernel/debug/block/nbd1/sched/read0_fifo_list", "/sys/kernel/debug/block/nbd1/sched/read0_next_rq", "/sys/kernel/debug/block/nbd1/sched/read1_fifo_list", "/sys/kernel/debug/block/nbd1/sched/read1_next_rq", "/sys/kernel/debug/block/nbd1/sched/read2_fifo_list", "/sys/kernel/debug/block/nbd1/sched/read2_next_rq", "/sys/kernel/debug/block/nbd1/sched/starved", "/sys/kernel/debug/block/nbd1/sched/write0_fifo_list", "/sys/kernel/debug/block/nbd1/sched/write0_next_rq", "/sys/kernel/debug/block/nbd1/sched/write1_fifo_list", "/sys/kernel/debug/block/nbd1/sched/write1_next_rq", "/sys/kernel/debug/block/nbd1/sched/write2_fifo_list", "/sys/kernel/debug/block/nbd1/sched/write2_next_rq", "/sys/kernel/debug/block/nbd1/state", "/sys/kernel/debug/block/nbd1/zone_wplugs", "/sys/kernel/debug/block/nbd10/hctx0/active", "/sys/kernel/debug/block/nbd10/hctx0/busy", "/sys/kernel/debug/block/nbd10/hctx0/cpu0/default_rq_list", "/sys/kernel/debug/block/nbd10/hctx0/cpu0/poll_rq_list", "/sys/kernel/debug/block/nbd10/hctx0/cpu0/read_rq_list", "/sys/kernel/debug/block/nbd10/hctx0/cpu1/default_rq_list", "/sys/kernel/debug/block/nbd10/hctx0/cpu1/poll_rq_list", "/sys/kernel/debug/block/nbd10/hctx0/cpu1/read_rq_list", "/sys/kernel/debug/block/nbd10/hctx0/ctx_map", "/sys/kernel/debug/block/nbd10/hctx0/dispatch", "/sys/kernel/debug/block/nbd10/hctx0/dispatch_busy", "/sys/kernel/debug/block/nbd10/hctx0/flags", "/sys/kernel/debug/block/nbd10/hctx0/sched_tags", "/sys/kernel/debug/block/nbd10/hctx0/sched_tags_bitmap", "/sys/kernel/debug/block/nbd10/hctx0/state", "/sys/kernel/debug/block/nbd10/hctx0/tags", "/sys/kernel/debug/block/nbd10/hctx0/tags_bitmap", "/sys/kernel/debug/block/nbd10/hctx0/type", "/sys/kernel/debug/block/nbd10/pm_only", "/sys/kernel/debug/block/nbd10/poll_stat", "/sys/kernel/debug/block/nbd10/requeue_list", "/sys/kernel/debug/block/nbd10/rqos/wbt/curr_win_nsec", "/sys/kernel/debug/block/nbd10/rqos/wbt/enabled", "/sys/kernel/debug/block/nbd10/rqos/wbt/id", "/sys/kernel/debug/block/nbd10/rqos/wbt/inflight", "/sys/kernel/debug/block/nbd10/rqos/wbt/min_lat_nsec", "/sys/kernel/debug/block/nbd10/rqos/wbt/unknown_cnt", "/sys/kernel/debug/block/nbd10/rqos/wbt/wb_background", "/sys/kernel/debug/block/nbd10/rqos/wbt/wb_normal", "/sys/kernel/debug/block/nbd10/sched/async_depth", "/sys/kernel/debug/block/nbd10/sched/batching", "/sys/kernel/debug/block/nbd10/sched/dispatch0", "/sys/kernel/debug/block/nbd10/sched/dispatch1", "/sys/kernel/debug/block/nbd10/sched/dispatch2", "/sys/kernel/debug/block/nbd10/sched/owned_by_driver", "/sys/kernel/debug/block/nbd10/sched/queued", "/sys/kernel/debug/block/nbd10/sched/read0_fifo_list", "/sys/kernel/debug/block/nbd10/sched/read0_next_rq", "/sys/kernel/debug/block/nbd10/sched/read1_fifo_list", "/sys/kernel/debug/block/nbd10/sched/read1_next_rq", "/sys/kernel/debug/block/nbd10/sched/read2_fifo_list", "/sys/kernel/debug/block/nbd10/sched/read2_next_rq", "/sys/kernel/debug/block/nbd10/sched/starved", "/sys/kernel/debug/block/nbd10/sched/write0_fifo_list", "/sys/kernel/debug/block/nbd10/sched/write0_next_rq", "/sys/kernel/debug/block/nbd10/sched/write1_fifo_list", "/sys/kernel/debug/block/nbd10/sched/write1_next_rq", "/sys/kernel/debug/block/nbd10/sched/write2_fifo_list", "/sys/kernel/debug/block/nbd10/sched/write2_next_rq", "/sys/kernel/debug/block/nbd10/state", "/sys/kernel/debug/block/nbd10/zone_wplugs", "/sys/kernel/debug/block/nbd11/hctx0/active", "/sys/kernel/debug/block/nbd11/hctx0/busy", "/sys/kernel/debug/block/nbd11/hctx0/cpu0/default_rq_list", "/sys/kernel/debug/block/nbd11/hctx0/cpu0/poll_rq_list", "/sys/kernel/debug/block/nbd11/hctx0/cpu0/read_rq_list", "/sys/kernel/debug/block/nbd11/hctx0/cpu1/default_rq_list", "/sys/kernel/debug/block/nbd11/hctx0/cpu1/poll_rq_list", "/sys/kernel/debug/block/nbd11/hctx0/cpu1/read_rq_list", "/sys/kernel/debug/block/nbd11/hctx0/ctx_map", "/sys/kernel/debug/block/nbd11/hctx0/dispatch", "/sys/kernel/debug/block/nbd11/hctx0/dispatch_busy", "/sys/kernel/debug/block/nbd11/hctx0/flags", "/sys/kernel/debug/block/nbd11/hctx0/sched_tags", "/sys/kernel/debug/block/nbd11/hctx0/sched_tags_bitmap", "/sys/kernel/debug/block/nbd11/hctx0/state", "/sys/kernel/debug/block/nbd11/hctx0/tags", "/sys/kernel/debug/block/nbd11/hctx0/tags_bitmap", "/sys/kernel/debug/block/nbd11/hctx0/type", "/sys/kernel/debug/block/nbd11/pm_only", "/sys/kernel/debug/block/nbd11/poll_stat", "/sys/kernel/debug/block/nbd11/requeue_list", "/sys/kernel/debug/block/nbd11/rqos/wbt/curr_win_nsec", "/sys/kernel/debug/block/nbd11/rqos/wbt/enabled", "/sys/kernel/debug/block/nbd11/rqos/wbt/id", "/sys/kernel/debug/block/nbd11/rqos/wbt/inflight", "/sys/kernel/debug/block/nbd11/rqos/wbt/min_lat_nsec", "/sys/kernel/debug/block/nbd11/rqos/wbt/unknown_cnt", "/sys/kernel/debug/block/nbd11/rqos/wbt/wb_background", "/sys/kernel/debug/block/nbd11/rqos/wbt/wb_normal", "/sys/kernel/debug/block/nbd11/sched/async_depth", "/sys/kernel/debug/block/nbd11/sched/batching", "/sys/kernel/debug/block/nbd11/sched/dispatch0", "/sys/kernel/debug/block/nbd11/sched/dispatch1", "/sys/kernel/debug/block/nbd11/sched/dispatch2", "/sys/kernel/debug/block/nbd11/sched/owned_by_driver", "/sys/kernel/debug/block/nbd11/sched/queued", "/sys/kernel/debug/block/nbd11/sched/read0_fifo_list", "/sys/kernel/debug/block/nbd11/sched/read0_next_rq", "/sys/kernel/debug/block/nbd11/sched/read1_fifo_list", "/sys/kernel/debug/block/nbd11/sched/read1_next_rq", "/sys/kernel/debug/block/nbd11/sched/read2_fifo_list", "/sys/kernel/debug/block/nbd11/sched/read2_next_rq", "/sys/kernel/debug/block/nbd11/sched/starved", "/sys/kernel/debug/block/nbd11/sched/write0_fifo_list", "/sys/kernel/debug/block/nbd11/sched/write0_next_rq", "/sys/kernel/debug/block/nbd11/sched/write1_fifo_list", "/sys/kernel/debug/block/nbd11/sched/write1_next_rq", "/sys/kernel/debug/block/nbd11/sched/write2_fifo_list", "/sys/kernel/debug/block/nbd11/sched/write2_next_rq", "/sys/kernel/debug/block/nbd11/state", "/sys/kernel/debug/block/nbd11/zone_wplugs", "/sys/kernel/debug/block/nbd12/hctx0/active", "/sys/kernel/debug/block/nbd12/hctx0/busy", "/sys/kernel/debug/block/nbd12/hctx0/cpu0/default_rq_list", "/sys/kernel/debug/block/nbd12/hctx0/cpu0/poll_rq_list", "/sys/kernel/debug/block/nbd12/hctx0/cpu0/read_rq_list", "/sys/kernel/debug/block/nbd12/hctx0/cpu1/default_rq_list", "/sys/kernel/debug/block/nbd12/hctx0/cpu1/poll_rq_list", "/sys/kernel/debug/block/nbd12/hctx0/cpu1/read_rq_list", "/sys/kernel/debug/block/nbd12/hctx0/ctx_map", "/sys/kernel/debug/block/nbd12/hctx0/dispatch", "/sys/kernel/debug/block/nbd12/hctx0/dispatch_busy", "/sys/kernel/debug/block/nbd12/hctx0/flags", "/sys/kernel/debug/block/nbd12/hctx0/sched_tags", "/sys/kernel/debug/block/nbd12/hctx0/sched_tags_bitmap", "/sys/kernel/debug/block/nbd12/hctx0/state", "/sys/kernel/debug/block/nbd12/hctx0/tags", "/sys/kernel/debug/block/nbd12/hctx0/tags_bitmap", "/sys/kernel/debug/block/nbd12/hctx0/type", "/sys/kernel/debug/block/nbd12/pm_only", "/sys/kernel/debug/block/nbd12/poll_stat", "/sys/kernel/debug/block/nbd12/requeue_list", "/sys/kernel/debug/block/nbd12/rqos/wbt/curr_win_nsec", "/sys/kernel/debug/block/nbd12/rqos/wbt/enabled", "/sys/kernel/debug/block/nbd12/rqos/wbt/id", "/sys/kernel/debug/block/nbd12/rqos/wbt/inflight", "/sys/kernel/debug/block/nbd12/rqos/wbt/min_lat_nsec", "/sys/kernel/debug/block/nbd12/rqos/wbt/unknown_cnt", "/sys/kernel/debug/block/nbd12/rqos/wbt/wb_background", "/sys/kernel/debug/block/nbd12/rqos/wbt/wb_normal", "/sys/kernel/debug/block/nbd12/sched/async_depth", "/sys/kernel/debug/block/nbd12/sched/batching", "/sys/kernel/debug/block/nbd12/sched/dispatch0", "/sys/kernel/debug/block/nbd12/sched/dispatch1", "/sys/kernel/debug/block/nbd12/sched/dispatch2", "/sys/kernel/debug/block/nbd12/sched/owned_by_driver", "/sys/kernel/debug/block/nbd12/sched/queued", "/sys/kernel/debug/block/nbd12/sched/read0_fifo_list", "/sys/kernel/debug/block/nbd12/sched/read0_next_rq", "/sys/kernel/debug/block/nbd12/sched/read1_fifo_list", "/sys/kernel/debug/block/nbd12/sched/read1_next_rq", "/sys/kernel/debug/block/nbd12/sched/read2_fifo_list", "/sys/kernel/debug/block/nbd12/sched/read2_next_rq", "/sys/kernel/debug/block/nbd12/sched/starved", "/sys/kernel/debug/block/nbd12/sched/write0_fifo_list", "/sys/kernel/debug/block/nbd12/sched/write0_next_rq", "/sys/kernel/debug/block/nbd12/sched/write1_fifo_list", "/sys/kernel/debug/block/nbd12/sched/write1_next_rq", "/sys/kernel/debug/block/nbd12/sched/write2_fifo_list", "/sys/kernel/debug/block/nbd12/sched/write2_next_rq", "/sys/kernel/debug/block/nbd12/state", "/sys/kernel/debug/block/nbd12/zone_wplugs", "/sys/kernel/debug/block/nbd13/hctx0/active", "/sys/kernel/debug/block/nbd13/hctx0/busy", "/sys/kernel/debug/block/nbd13/hctx0/cpu0/default_rq_list", "/sys/kernel/debug/block/nbd13/hctx0/cpu0/poll_rq_list", "/sys/kernel/debug/block/nbd13/hctx0/cpu0/read_rq_list", "/sys/kernel/debug/block/nbd13/hctx0/cpu1/default_rq_list", "/sys/kernel/debug/block/nbd13/hctx0/cpu1/poll_rq_list", "/sys/kernel/debug/block/nbd13/hctx0/cpu1/read_rq_list", "/sys/kernel/debug/block/nbd13/hctx0/ctx_map", "/sys/kernel/debug/block/nbd13/hctx0/dispatch", "/sys/kernel/debug/block/nbd13/hctx0/dispatch_busy", "/sys/kernel/debug/block/nbd13/hctx0/flags", "/sys/kernel/debug/block/nbd13/hctx0/sched_tags", "/sys/kernel/debug/block/nbd13/hctx0/sched_tags_bitmap", "/sys/kernel/debug/block/nbd13/hctx0/state", "/sys/kernel/debug/block/nbd13/hctx0/tags", "/sys/kernel/debug/block/nbd13/hctx0/tags_bitmap", "/sys/kernel/debug/block/nbd13/hctx0/type", "/sys/kernel/debug/block/nbd13/pm_only", "/sys/kernel/debug/block/nbd13/poll_stat", "/sys/kernel/debug/block/nbd13/requeue_list", "/sys/kernel/debug/block/nbd13/rqos/wbt/curr_win_nsec", "/sys/kernel/debug/block/nbd13/rqos/wbt/enabled", "/sys/kernel/debug/block/nbd13/rqos/wbt/id", "/sys/kernel/debug/block/nbd13/rqos/wbt/inflight", "/sys/kernel/debug/block/nbd13/rqos/wbt/min_lat_nsec", "/sys/kernel/debug/block/nbd13/rqos/wbt/unknown_cnt", "/sys/kernel/debug/block/nbd13/rqos/wbt/wb_background", "/sys/kernel/debug/block/nbd13/rqos/wbt/wb_normal", "/sys/kernel/debug/block/nbd13/sched/async_depth", "/sys/kernel/debug/block/nbd13/sched/batching", "/sys/kernel/debug/block/nbd13/sched/dispatch0", "/sys/kernel/debug/block/nbd13/sched/dispatch1", "/sys/kernel/debug/block/nbd13/sched/dispatch2", "/sys/kernel/debug/block/nbd13/sched/owned_by_driver", "/sys/kernel/debug/block/nbd13/sched/queued", "/sys/kernel/debug/block/nbd13/sched/read0_fifo_list", "/sys/kernel/debug/block/nbd13/sched/read0_next_rq", "/sys/kernel/debug/block/nbd13/sched/read1_fifo_list", "/sys/kernel/debug/block/nbd13/sched/read1_next_rq", "/sys/kernel/debug/block/nbd13/sched/read2_fifo_list", "/sys/kernel/debug/block/nbd13/sched/read2_next_rq", "/sys/kernel/debug/block/nbd13/sched/starved", "/sys/kernel/debug/block/nbd13/sched/write0_fifo_list", "/sys/kernel/debug/block/nbd13/sched/write0_next_rq", "/sys/kernel/debug/block/nbd13/sched/write1_fifo_list", "/sys/kernel/debug/block/nbd13/sched/write1_next_rq", "/sys/kernel/debug/block/nbd13/sched/write2_fifo_list", "/sys/kernel/debug/block/nbd13/sched/write2_next_rq", "/sys/kernel/debug/block/nbd13/state", "/sys/kernel/debug/block/nbd13/zone_wplugs", "/sys/kernel/debug/block/nbd14/hctx0/active", "/sys/kernel/debug/block/nbd14/hctx0/busy", "/sys/kernel/debug/block/nbd14/hctx0/cpu0/default_rq_list", "/sys/kernel/debug/block/nbd14/hctx0/cpu0/poll_rq_list", "/sys/kernel/debug/block/nbd14/hctx0/cpu0/read_rq_list", "/sys/kernel/debug/block/nbd14/hctx0/cpu1/default_rq_list", "/sys/kernel/debug/block/nbd14/hctx0/cpu1/poll_rq_list", "/sys/kernel/debug/block/nbd14/hctx0/cpu1/read_rq_list", "/sys/kernel/debug/block/nbd14/hctx0/ctx_map", "/sys/kernel/debug/block/nbd14/hctx0/dispatch", "/sys/kernel/debug/block/nbd14/hctx0/dispatch_busy", "/sys/kernel/debug/block/nbd14/hctx0/flags", "/sys/kernel/debug/block/nbd14/hctx0/sched_tags", "/sys/kernel/debug/block/nbd14/hctx0/sched_tags_bitmap", "/sys/kernel/debug/block/nbd14/hctx0/state", "/sys/kernel/debug/block/nbd14/hctx0/tags", "/sys/kernel/debug/block/nbd14/hctx0/tags_bitmap", "/sys/kernel/debug/block/nbd14/hctx0/type", "/sys/kernel/debug/block/nbd14/pm_only", "/sys/kernel/debug/block/nbd14/poll_stat", "/sys/kernel/debug/block/nbd14/requeue_list", "/sys/kernel/debug/block/nbd14/rqos/wbt/curr_win_nsec", "/sys/kernel/debug/block/nbd14/rqos/wbt/enabled", "/sys/kernel/debug/block/nbd14/rqos/wbt/id", "/sys/kernel/debug/block/nbd14/rqos/wbt/inflight", "/sys/kernel/debug/block/nbd14/rqos/wbt/min_lat_nsec", "/sys/kernel/debug/block/nbd14/rqos/wbt/unknown_cnt", "/sys/kernel/debug/block/nbd14/rqos/wbt/wb_background", "/sys/kernel/debug/block/nbd14/rqos/wbt/wb_normal", "/sys/kernel/debug/block/nbd14/sched/async_depth", "/sys/kernel/debug/block/nbd14/sched/batching", "/sys/kernel/debug/block/nbd14/sched/dispatch0", "/sys/kernel/debug/block/nbd14/sched/dispatch1", "/sys/kernel/debug/block/nbd14/sched/dispatch2", "/sys/kernel/debug/block/nbd14/sched/owned_by_driver", "/sys/kernel/debug/block/nbd14/sched/queued", "/sys/kernel/debug/block/nbd14/sched/read0_fifo_list", "/sys/kernel/debug/block/nbd14/sched/read0_next_rq", "/sys/kernel/debug/block/nbd14/sched/read1_fifo_list", "/sys/kernel/debug/block/nbd14/sched/read1_next_rq", "/sys/kernel/debug/block/nbd14/sched/read2_fifo_list", "/sys/kernel/debug/block/nbd14/sched/read2_next_rq", "/sys/kernel/debug/block/nbd14/sched/starved", "/sys/kernel/debug/block/nbd14/sched/write0_fifo_list", "/sys/kernel/debug/block/nbd14/sched/write0_next_rq", "/sys/kernel/debug/block/nbd14/sched/write1_fifo_list", "/sys/kernel/debug/block/nbd14/sched/write1_next_rq", "/sys/kernel/debug/block/nbd14/sched/write2_fifo_list", "/sys/kernel/debug/block/nbd14/sched/write2_next_rq", "/sys/kernel/debug/block/nbd14/state", "/sys/kernel/debug/block/nbd14/zone_wplugs", "/sys/kernel/debug/block/nbd15/hctx0/active", "/sys/kernel/debug/block/nbd15/hctx0/busy", "/sys/kernel/debug/block/nbd15/hctx0/cpu0/default_rq_list", "/sys/kernel/debug/block/nbd15/hctx0/cpu0/poll_rq_list", "/sys/kernel/debug/block/nbd15/hctx0/cpu0/read_rq_list", "/sys/kernel/debug/block/nbd15/hctx0/cpu1/default_rq_list", "/sys/kernel/debug/block/nbd15/hctx0/cpu1/poll_rq_list", "/sys/kernel/debug/block/nbd15/hctx0/cpu1/read_rq_list", "/sys/kernel/debug/block/nbd15/hctx0/ctx_map", "/sys/kernel/debug/block/nbd15/hctx0/dispatch", "/sys/kernel/debug/block/nbd15/hctx0/dispatch_busy", "/sys/kernel/debug/block/nbd15/hctx0/flags", "/sys/kernel/debug/block/nbd15/hctx0/sched_tags", "/sys/kernel/debug/block/nbd15/hctx0/sched_tags_bitmap", "/sys/kernel/debug/block/nbd15/hctx0/state", "/sys/kernel/debug/block/nbd15/hctx0/tags", "/sys/kernel/debug/block/nbd15/hctx0/tags_bitmap", "/sys/kernel/debug/block/nbd15/hctx0/type", "/sys/kernel/debug/block/nbd15/pm_only", "/sys/kernel/debug/block/nbd15/poll_stat", "/sys/kernel/debug/block/nbd15/requeue_list", "/sys/kernel/debug/block/nbd15/rqos/wbt/curr_win_nsec", "/sys/kernel/debug/block/nbd15/rqos/wbt/enabled", "/sys/kernel/debug/block/nbd15/rqos/wbt/id", "/sys/kernel/debug/block/nbd15/rqos/wbt/inflight", "/sys/kernel/debug/block/nbd15/rqos/wbt/min_lat_nsec", "/sys/kernel/debug/block/nbd15/rqos/wbt/unknown_cnt", "/sys/kernel/debug/block/nbd15/rqos/wbt/wb_background", "/sys/kernel/debug/block/nbd15/rqos/wbt/wb_normal", "/sys/kernel/debug/block/nbd15/sched/async_depth", "/sys/kernel/debug/block/nbd15/sched/batching", "/sys/kernel/debug/block/nbd15/sched/dispatch0", "/sys/kernel/debug/block/nbd15/sched/dispatch1", "/sys/kernel/debug/block/nbd15/sched/dispatch2", "/sys/kernel/debug/block/nbd15/sched/owned_by_driver", "/sys/kernel/debug/block/nbd15/sched/queued", "/sys/kernel/debug/block/nbd15/sched/read0_fifo_list", "/sys/kernel/debug/block/nbd15/sched/read0_next_rq", "/sys/kernel/debug/block/nbd15/sched/read1_fifo_list", "/sys/kernel/debug/block/nbd15/sched/read1_next_rq", "/sys/kernel/debug/block/nbd15/sched/read2_fifo_list", "/sys/kernel/debug/block/nbd15/sched/read2_next_rq", "/sys/kernel/debug/block/nbd15/sched/starved", "/sys/kernel/debug/block/nbd15/sched/write0_fifo_list", "/sys/kernel/debug/block/nbd15/sched/write0_next_rq", "/sys/kernel/debug/block/nbd15/sched/write1_fifo_list", "/sys/kernel/debug/block/nbd15/sched/write1_next_rq", "/sys/kernel/debug/block/nbd15/sched/write2_fifo_list", "/sys/kernel/debug/block/nbd15/sched/write2_next_rq", "/sys/kernel/debug/block/nbd15/state", "/sys/kernel/debug/block/nbd15/zone_wplugs", "/sys/kernel/debug/block/nbd2/hctx0/active", "/sys/kernel/debug/block/nbd2/hctx0/busy", "/sys/kernel/debug/block/nbd2/hctx0/cpu0/default_rq_list", "/sys/kernel/debug/block/nbd2/hctx0/cpu0/poll_rq_list", "/sys/kernel/debug/block/nbd2/hctx0/cpu0/read_rq_list", "/sys/kernel/debug/block/nbd2/hctx0/cpu1/default_rq_list", "/sys/kernel/debug/block/nbd2/hctx0/cpu1/poll_rq_list", "/sys/kernel/debug/block/nbd2/hctx0/cpu1/read_rq_list", "/sys/kernel/debug/block/nbd2/hctx0/ctx_map", "/sys/kernel/debug/block/nbd2/hctx0/dispatch", "/sys/kernel/debug/block/nbd2/hctx0/dispatch_busy", "/sys/kernel/debug/block/nbd2/hctx0/flags", "/sys/kernel/debug/block/nbd2/hctx0/sched_tags", "/sys/kernel/debug/block/nbd2/hctx0/sched_tags_bitmap", "/sys/kernel/debug/block/nbd2/hctx0/state", "/sys/kernel/debug/block/nbd2/hctx0/tags", "/sys/kernel/debug/block/nbd2/hctx0/tags_bitmap", "/sys/kernel/debug/block/nbd2/hctx0/type", "/sys/kernel/debug/block/nbd2/pm_only", "/sys/kernel/debug/block/nbd2/poll_stat", "/sys/kernel/debug/block/nbd2/requeue_list", "/sys/kernel/debug/block/nbd2/rqos/wbt/curr_win_nsec", "/sys/kernel/debug/block/nbd2/rqos/wbt/enabled", "/sys/kernel/debug/block/nbd2/rqos/wbt/id", "/sys/kernel/debug/block/nbd2/rqos/wbt/inflight", "/sys/kernel/debug/block/nbd2/rqos/wbt/min_lat_nsec", "/sys/kernel/debug/block/nbd2/rqos/wbt/unknown_cnt", "/sys/kernel/debug/block/nbd2/rqos/wbt/wb_background", "/sys/kernel/debug/block/nbd2/rqos/wbt/wb_normal", "/sys/kernel/debug/block/nbd2/sched/async_depth", "/sys/kernel/debug/block/nbd2/sched/batching", "/sys/kernel/debug/block/nbd2/sched/dispatch0", "/sys/kernel/debug/block/nbd2/sched/dispatch1", "/sys/kernel/debug/block/nbd2/sched/dispatch2", "/sys/kernel/debug/block/nbd2/sched/owned_by_driver", "/sys/kernel/debug/block/nbd2/sched/queued", "/sys/kernel/debug/block/nbd2/sched/read0_fifo_list", "/sys/kernel/debug/block/nbd2/sched/read0_next_rq", "/sys/kernel/debug/block/nbd2/sched/read1_fifo_list", "/sys/kernel/debug/block/nbd2/sched/read1_next_rq", "/sys/kernel/debug/block/nbd2/sched/read2_fifo_list", "/sys/kernel/debug/block/nbd2/sched/read2_next_rq", "/sys/kernel/debug/block/nbd2/sched/starved", "/sys/kernel/debug/block/nbd2/sched/write0_fifo_list", "/sys/kernel/debug/block/nbd2/sched/write0_next_rq"
openat$auto_blk_mq_debugfs(fd const[AT_FDCWD], file ptr[in, string[auto_blk_mq_debugfs_files]], flags flags[open_flags], mode const[0]) fd_auto_blk_mq_debugfs (automatic)
read$auto_blk_mq_debugfs(fd fd_auto_blk_mq_debugfs, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)
write$auto_blk_mq_debugfs(fd fd_auto_blk_mq_debugfs, buf ptr[in, array[int8]], len bytesize[buf]) (automatic)

# fops: open:blkdev_open read:blkdev_read_iter write:blkdev_write_iter mmap:blkdev_mmap ioctl:blkdev_ioctl
resource fd_auto_blkdev[fd]
auto_blkdev_files = "/dev/loop0", "/dev/loop1", "/dev/loop10", "/dev/loop11", "/dev/loop12", "/dev/loop13", "/dev/loop14", "/dev/loop15", "/dev/loop2", "/dev/loop3", "/dev/loop4", "/dev/loop5", "/dev/loop6", "/dev/loop7", "/dev/loop8", "/dev/loop9", "/dev/mtdblock0", "/dev/nbd0", "/dev/nbd1", "/dev/nbd10", "/dev/nbd11", "/dev/nbd12", "/dev/nbd13", "/dev/nbd14", "/dev/nbd15", "/dev/nbd2", "/dev/nbd3", "/dev/nbd4", "/dev/nbd5", "/dev/nbd6", "/dev/nbd7", "/dev/nbd8", "/dev/nbd9", "/dev/nullb0", "/dev/ram0", "/dev/ram1", "/dev/ram10", "/dev/ram11", "/dev/ram12", "/dev/ram13", "/dev/ram14", "/dev/ram15", "/dev/ram2", "/dev/ram3", "/dev/ram4", "/dev/ram5", "/dev/ram6", "/dev/ram7", "/dev/ram8", "/dev/ram9", "/dev/sda", "/dev/zram0"
openat$auto_blkdev(fd const[AT_FDCWD], file ptr[in, string[auto_blkdev_files]], flags flags[open_flags], mode const[0]) fd_auto_blkdev (automatic)
read$auto_blkdev(fd fd_auto_blkdev, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)
write$auto_blkdev(fd fd_auto_blkdev, buf ptr[in, array[int8]], len bytesize[buf]) (automatic)
mmap$auto_blkdev(addr vma, len len[addr], prot flags[mmap_prot], flags flags[mmap_flags], fd fd_auto_blkdev, offset fileoff) (automatic)
ioctl$auto_blkdev(fd fd_auto_blkdev, cmd intptr, arg ptr[in, array[int8]]) (automatic)

# fops: open:bridges_open read:seq_read
resource fd_auto_bridges[fd]
auto_bridges_files = "/sys/kernel/debug/dri/0000:00:02.0/encoder-0/bridges", "/sys/kernel/debug/dri/vkms/encoder-0/bridges", "/sys/kernel/debug/dri/vkms/encoder-1/bridges"
openat$auto_bridges(fd const[AT_FDCWD], file ptr[in, string[auto_bridges_files]], flags flags[open_flags], mode const[0]) fd_auto_bridges (automatic)
read$auto_bridges(fd fd_auto_bridges, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)

# fops: open:bsg_open ioctl:bsg_ioctl
resource fd_auto_bsg[fd]
auto_bsg_files = "/dev/bsg/0:0:0:0", "/dev/bsg/1:0:0:0"
openat$auto_bsg(fd const[AT_FDCWD], file ptr[in, string[auto_bsg_files]], flags flags[open_flags], mode const[0]) fd_auto_bsg (automatic)
ioctl$auto_SCSI_IOCTL_SEND_COMMAND(fd fd_auto_bsg, cmd const[SCSI_IOCTL_SEND_COMMAND], arg const[0]) (automatic)
ioctl$auto_SG_IO(fd fd_auto_bsg, cmd const[SG_IO], arg const[0]) (automatic)
ioctl$auto_SG_EMULATED_HOST(fd fd_auto_bsg, cmd const[SG_EMULATED_HOST], arg const[0]) (automatic)
ioctl$auto_SG_SET_RESERVED_SIZE(fd fd_auto_bsg, cmd const[SG_SET_RESERVED_SIZE], arg const[0]) (automatic)
ioctl$auto_SG_GET_RESERVED_SIZE(fd fd_auto_bsg, cmd const[SG_GET_RESERVED_SIZE], arg const[0]) (automatic)
ioctl$auto_SG_GET_TIMEOUT(fd fd_auto_bsg, cmd const[SG_GET_TIMEOUT], arg const[0]) (automatic)
ioctl$auto_SG_SET_TIMEOUT(fd fd_auto_bsg, cmd const[SG_SET_TIMEOUT], arg const[0]) (automatic)
ioctl$auto_SCSI_IOCTL_GET_BUS_NUMBER(fd fd_auto_bsg, cmd const[SCSI_IOCTL_GET_BUS_NUMBER], arg const[0]) (automatic)
ioctl$auto_SCSI_IOCTL_GET_IDLUN(fd fd_auto_bsg, cmd const[SCSI_IOCTL_GET_IDLUN], arg const[0]) (automatic)
ioctl$auto_SG_GET_VERSION_NUM(fd fd_auto_bsg, cmd const[SG_GET_VERSION_NUM], arg const[0]) (automatic)
ioctl$auto_SG_SET_COMMAND_Q(fd fd_auto_bsg, cmd const[SG_SET_COMMAND_Q], arg const[0]) (automatic)
ioctl$auto_SG_GET_COMMAND_Q(fd fd_auto_bsg, cmd const[SG_GET_COMMAND_Q], arg const[0]) (automatic)

# fops: open:btrfs_control_open ioctl:btrfs_control_ioctl
resource fd_auto_btrfs_control[fd]
openat$auto_btrfs_control(fd const[AT_FDCWD], file ptr[in, string["/dev/btrfs-control"]], flags flags[open_flags], mode const[0]) fd_auto_btrfs_control (automatic)
ioctl$auto_BTRFS_IOC_GET_SUPPORTED_FEATURES(fd fd_auto_btrfs_control, cmd const[BTRFS_IOC_GET_SUPPORTED_FEATURES], arg ptr[in, array[btrfs_ioctl_feature_flags$auto_record, 3]]) (automatic)
ioctl$auto_BTRFS_IOC_DEVICES_READY(fd fd_auto_btrfs_control, cmd const[BTRFS_IOC_DEVICES_READY], arg ptr[in, btrfs_ioctl_vol_args$auto_record]) (automatic)
ioctl$auto_BTRFS_IOC_FORGET_DEV(fd fd_auto_btrfs_control, cmd const[BTRFS_IOC_FORGET_DEV], arg ptr[inout, btrfs_ioctl_vol_args$auto_record]) (automatic)
ioctl$auto_BTRFS_IOC_SCAN_DEV(fd fd_auto_btrfs_control, cmd const[BTRFS_IOC_SCAN_DEV], arg ptr[inout, btrfs_ioctl_vol_args$auto_record]) (automatic)

# fops: open:cachefiles_daemon_open read:cachefiles_daemon_read write:cachefiles_daemon_write
resource fd_auto_cachefiles_daemon[fd]
openat$auto_cachefiles_daemon(fd const[AT_FDCWD], file ptr[in, string["/dev/cachefiles"]], flags flags[open_flags], mode const[0]) fd_auto_cachefiles_daemon (automatic)
read$auto_cachefiles_daemon(fd fd_auto_cachefiles_daemon, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)
write$auto_cachefiles_daemon(fd fd_auto_cachefiles_daemon, buf ptr[in, array[int8]], len bytesize[buf]) (automatic)

# fops: open:cec_open ioctl:cec_ioctl
resource fd_auto_cec[fd]
auto_cec_files = "/dev/cec0", "/dev/cec1", "/dev/cec10", "/dev/cec11", "/dev/cec12", "/dev/cec13", "/dev/cec14", "/dev/cec15", "/dev/cec16", "/dev/cec17", "/dev/cec18", "/dev/cec19", "/dev/cec2", "/dev/cec20", "/dev/cec21", "/dev/cec22", "/dev/cec23", "/dev/cec24", "/dev/cec25", "/dev/cec26", "/dev/cec27", "/dev/cec28", "/dev/cec29", "/dev/cec3", "/dev/cec30", "/dev/cec31", "/dev/cec4", "/dev/cec5", "/dev/cec6", "/dev/cec7", "/dev/cec8", "/dev/cec9"
openat$auto_cec(fd const[AT_FDCWD], file ptr[in, string[auto_cec_files]], flags flags[open_flags], mode const[0]) fd_auto_cec (automatic)
ioctl$auto_CEC_S_MODE(fd fd_auto_cec, cmd const[CEC_S_MODE], arg ptr[inout, int32]) (automatic)
ioctl$auto_CEC_G_MODE(fd fd_auto_cec, cmd const[CEC_G_MODE], arg ptr[in, int32]) (automatic)
ioctl$auto_CEC_DQEVENT(fd fd_auto_cec, cmd const[CEC_DQEVENT], arg ptr[in, array[int8]]) (automatic)
ioctl$auto_CEC_RECEIVE(fd fd_auto_cec, cmd const[CEC_RECEIVE], arg ptr[in, array[int8]]) (automatic)
ioctl$auto_CEC_TRANSMIT(fd fd_auto_cec, cmd const[CEC_TRANSMIT], arg ptr[in, array[int8]]) (automatic)
ioctl$auto_CEC_ADAP_G_CONNECTOR_INFO(fd fd_auto_cec, cmd const[CEC_ADAP_G_CONNECTOR_INFO], arg ptr[in, cec_connector_info$auto_record]) (automatic)
ioctl$auto_CEC_ADAP_S_LOG_ADDRS(fd fd_auto_cec, cmd const[CEC_ADAP_S_LOG_ADDRS], arg ptr[in, array[int8]]) (automatic)
ioctl$auto_CEC_ADAP_G_LOG_ADDRS(fd fd_auto_cec, cmd const[CEC_ADAP_G_LOG_ADDRS], arg ptr[in, cec_log_addrs$auto_record]) (automatic)
ioctl$auto_CEC_ADAP_S_PHYS_ADDR(fd fd_auto_cec, cmd const[CEC_ADAP_S_PHYS_ADDR], arg ptr[inout, int16]) (automatic)
ioctl$auto_CEC_ADAP_G_PHYS_ADDR(fd fd_auto_cec, cmd const[CEC_ADAP_G_PHYS_ADDR], arg ptr[in, int16]) (automatic)
ioctl$auto_CEC_ADAP_G_CAPS(fd fd_auto_cec, cmd const[CEC_ADAP_G_CAPS], arg ptr[in, array[int8]]) (automatic)

# fops: open:cgwb_debug_stats_open read:seq_read
resource fd_auto_cgwb_debug_stats[fd]
auto_cgwb_debug_stats_files = "/sys/kernel/debug/bdi/11:0/wb_stats", "/sys/kernel/debug/bdi/1:0/wb_stats", "/sys/kernel/debug/bdi/1:1/wb_stats", "/sys/kernel/debug/bdi/1:10/wb_stats", "/sys/kernel/debug/bdi/1:11/wb_stats", "/sys/kernel/debug/bdi/1:12/wb_stats", "/sys/kernel/debug/bdi/1:13/wb_stats", "/sys/kernel/debug/bdi/1:14/wb_stats", "/sys/kernel/debug/bdi/1:15/wb_stats", "/sys/kernel/debug/bdi/1:2/wb_stats", "/sys/kernel/debug/bdi/1:3/wb_stats", "/sys/kernel/debug/bdi/1:4/wb_stats", "/sys/kernel/debug/bdi/1:5/wb_stats", "/sys/kernel/debug/bdi/1:6/wb_stats", "/sys/kernel/debug/bdi/1:7/wb_stats", "/sys/kernel/debug/bdi/1:8/wb_stats", "/sys/kernel/debug/bdi/1:9/wb_stats", "/sys/kernel/debug/bdi/250:0/wb_stats", "/sys/kernel/debug/bdi/252:0/wb_stats", "/sys/kernel/debug/bdi/31:0/wb_stats", "/sys/kernel/debug/bdi/43:0/wb_stats", "/sys/kernel/debug/bdi/43:128/wb_stats", "/sys/kernel/debug/bdi/43:160/wb_stats", "/sys/kernel/debug/bdi/43:192/wb_stats", "/sys/kernel/debug/bdi/43:224/wb_stats", "/sys/kernel/debug/bdi/43:256/wb_stats", "/sys/kernel/debug/bdi/43:288/wb_stats", "/sys/kernel/debug/bdi/43:32/wb_stats", "/sys/kernel/debug/bdi/43:320/wb_stats", "/sys/kernel/debug/bdi/43:352/wb_stats", "/sys/kernel/debug/bdi/43:384/wb_stats", "/sys/kernel/debug/bdi/43:416/wb_stats", "/sys/kernel/debug/bdi/43:448/wb_stats", "/sys/kernel/debug/bdi/43:480/wb_stats", "/sys/kernel/debug/bdi/43:64/wb_stats", "/sys/kernel/debug/bdi/43:96/wb_stats", "/sys/kernel/debug/bdi/7:0/wb_stats", "/sys/kernel/debug/bdi/7:1/wb_stats", "/sys/kernel/debug/bdi/7:10/wb_stats", "/sys/kernel/debug/bdi/7:11/wb_stats", "/sys/kernel/debug/bdi/7:12/wb_stats", "/sys/kernel/debug/bdi/7:13/wb_stats", "/sys/kernel/debug/bdi/7:14/wb_stats", "/sys/kernel/debug/bdi/7:15/wb_stats", "/sys/kernel/debug/bdi/7:2/wb_stats", "/sys/kernel/debug/bdi/7:3/wb_stats", "/sys/kernel/debug/bdi/7:4/wb_stats", "/sys/kernel/debug/bdi/7:5/wb_stats", "/sys/kernel/debug/bdi/7:6/wb_stats", "/sys/kernel/debug/bdi/7:7/wb_stats", "/sys/kernel/debug/bdi/7:8/wb_stats", "/sys/kernel/debug/bdi/7:9/wb_stats", "/sys/kernel/debug/bdi/8:0/wb_stats", "/sys/kernel/debug/bdi/mtd-0/wb_stats"
openat$auto_cgwb_debug_stats(fd const[AT_FDCWD], file ptr[in, string[auto_cgwb_debug_stats_files]], flags flags[open_flags], mode const[0]) fd_auto_cgwb_debug_stats (automatic)
read$auto_cgwb_debug_stats(fd fd_auto_cgwb_debug_stats, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)

# fops: open:check_wx_open read:seq_read
resource fd_auto_check_wx[fd]
openat$auto_check_wx(fd const[AT_FDCWD], file ptr[in, string["/sys/kernel/debug/check_wx_pages"]], flags flags[open_flags], mode const[0]) fd_auto_check_wx (automatic)
read$auto_check_wx(fd fd_auto_check_wx, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)

# fops: open:children_seq_open read:seq_read
resource fd_auto_children_seq[fd]
openat$auto_children_seq(fd const[AT_FDCWD], file ptr[in, string["/proc/thread-self/children"]], flags flags[open_flags], mode const[0]) fd_auto_children_seq (automatic)
read$auto_children_seq(fd fd_auto_children_seq, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)

# fops: open:clear_warn_once_fops_open read:debugfs_attr_read write:debugfs_attr_write
resource fd_auto1[fd]
openat$auto1(fd const[AT_FDCWD], file ptr[in, string["/sys/kernel/debug/clear_warn_once"]], flags flags[open_flags], mode const[0]) fd_auto1 (automatic)
read$auto1(fd fd_auto1, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)
write$auto1(fd fd_auto1, buf ptr[in, array[int8]], len bytesize[buf]) (automatic)

# fops: open:clk_dump_open read:seq_read
resource fd_auto_clk_dump[fd]
auto_clk_dump_files = "/sys/kernel/debug/clk/clk_dump", "/sys/kernel/debug/clk/clk_orphan_dump"
openat$auto_clk_dump(fd const[AT_FDCWD], file ptr[in, string[auto_clk_dump_files]], flags flags[open_flags], mode const[0]) fd_auto_clk_dump (automatic)
read$auto_clk_dump(fd fd_auto_clk_dump, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)

# fops: open:clk_summary_open read:seq_read
resource fd_auto_clk_summary[fd]
auto_clk_summary_files = "/sys/kernel/debug/clk/clk_orphan_summary", "/sys/kernel/debug/clk/clk_summary"
openat$auto_clk_summary(fd const[AT_FDCWD], file ptr[in, string[auto_clk_summary_files]], flags flags[open_flags], mode const[0]) fd_auto_clk_summary (automatic)
read$auto_clk_summary(fd fd_auto_clk_summary, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)

# fops: open:comm_open read:seq_read write:comm_write
resource fd_auto_comm[fd]
auto_comm_files = "/proc/self/comm", "/proc/thread-self/comm"
openat$auto_comm(fd const[AT_FDCWD], file ptr[in, string[auto_comm_files]], flags flags[open_flags], mode const[0]) fd_auto_comm (automatic)
read$auto_comm(fd fd_auto_comm, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)
write$auto_comm(fd fd_auto_comm, buf ptr[in, array[int8]], len bytesize[buf]) (automatic)

# fops: open:component_list_open read:seq_read
resource fd_auto_component_list[fd]
openat$auto_component_list(fd const[AT_FDCWD], file ptr[in, string["/sys/kernel/debug/asoc/components"]], flags flags[open_flags], mode const[0]) fd_auto_component_list (automatic)
read$auto_component_list(fd fd_auto_component_list, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)

# fops: open:configfs_open_file read:configfs_read_iter write:configfs_write_iter
resource fd_auto_configfs[fd]
auto_configfs_files = "/sys/kernel/config/nvmet/discovery_nqn", "/sys/kernel/config/target/core/alua/lu_gps/default_lu_gp/lu_gp_id", "/sys/kernel/config/target/dbroot"
openat$auto_configfs(fd const[AT_FDCWD], file ptr[in, string[auto_configfs_files]], flags flags[open_flags], mode const[0]) fd_auto_configfs (automatic)
read$auto_configfs(fd fd_auto_configfs, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)
write$auto_configfs(fd fd_auto_configfs, buf ptr[in, array[int8]], len bytesize[buf]) (automatic)

# fops: open:connector_open read:seq_read write:connector_write
resource fd_auto_connector[fd]
auto_connector_files = "/sys/kernel/debug/dri/0000:00:02.0/Virtual-2/force", "/sys/kernel/debug/dri/vkms/Virtual-1/force", "/sys/kernel/debug/dri/vkms/Writeback-1/force"
openat$auto_connector(fd const[AT_FDCWD], file ptr[in, string[auto_connector_files]], flags flags[open_flags], mode const[0]) fd_auto_connector (automatic)
read$auto_connector(fd fd_auto_connector, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)
write$auto_connector(fd fd_auto_connector, buf ptr[in, array[int8]], len bytesize[buf]) (automatic)

# fops: open:cpu_debug_open read:seq_read
resource fd_auto_cpu_debug[fd]
auto_cpu_debug_files = "/sys/kernel/debug/x86/topo/cpus/0", "/sys/kernel/debug/x86/topo/cpus/1"
openat$auto_cpu_debug(fd const[AT_FDCWD], file ptr[in, string[auto_cpu_debug_files]], flags flags[open_flags], mode const[0]) fd_auto_cpu_debug (automatic)
read$auto_cpu_debug(fd fd_auto_cpu_debug, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)

# fops: open:cpu_latency_qos_open read:cpu_latency_qos_read write:cpu_latency_qos_write
resource fd_auto_cpu_latency_qos[fd]
openat$auto_cpu_latency_qos(fd const[AT_FDCWD], file ptr[in, string["/dev/cpu_dma_latency"]], flags flags[open_flags], mode const[0]) fd_auto_cpu_latency_qos (automatic)
read$auto_cpu_latency_qos(fd fd_auto_cpu_latency_qos, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)
write$auto_cpu_latency_qos(fd fd_auto_cpu_latency_qos, buf ptr[in, array[int8]], len bytesize[buf]) (automatic)

# fops: open:cpuid_open read:cpuid_read
resource fd_auto_cpuid[fd]
auto_cpuid_files = "/dev/cpu/0/cpuid", "/dev/cpu/1/cpuid"
openat$auto_cpuid(fd const[AT_FDCWD], file ptr[in, string[auto_cpuid_files]], flags flags[open_flags], mode const[0]) fd_auto_cpuid (automatic)
read$auto_cpuid(fd fd_auto_cpuid, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)

# fops: open:crc_control_open read:seq_read write:crc_control_write
resource fd_auto_crc_control[fd]
openat$auto_crc_control(fd const[AT_FDCWD], file ptr[in, string["/sys/kernel/debug/dri/vkms/crtc-0/crc/control"]], flags flags[open_flags], mode const[0]) fd_auto_crc_control (automatic)
read$auto_crc_control(fd fd_auto_crc_control, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)
write$auto_crc_control(fd fd_auto_crc_control, buf ptr[in, array[int8]], len bytesize[buf]) (automatic)

# fops: open:crtc_crc_open read:crtc_crc_read
resource fd_auto_crtc_crc[fd]
openat$auto_crtc_crc(fd const[AT_FDCWD], file ptr[in, string["/sys/kernel/debug/dri/vkms/crtc-0/crc/data"]], flags flags[open_flags], mode const[0]) fd_auto_crtc_crc (automatic)
read$auto_crtc_crc(fd fd_auto_crtc_crc, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)

# fops: open:ctl_device_open read:device_read write:device_write
resource fd_auto_device[fd]
openat$auto_device(fd const[AT_FDCWD], file ptr[in, string["/dev/dlm-control"]], flags flags[open_flags], mode const[0]) fd_auto_device (automatic)
read$auto_device(fd fd_auto_device, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)
write$auto_device(fd fd_auto_device, buf ptr[in, array[int8]], len bytesize[buf]) (automatic)

# fops: open:dai_list_open read:seq_read
resource fd_auto_dai_list[fd]
openat$auto_dai_list(fd const[AT_FDCWD], file ptr[in, string["/sys/kernel/debug/asoc/dais"]], flags flags[open_flags], mode const[0]) fd_auto_dai_list (automatic)
read$auto_dai_list(fd fd_auto_dai_list, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)

# fops: open:debugfs_devm_entry_open read:seq_read
resource fd_auto_debugfs_devm_entry[fd]
auto_debugfs_devm_entry_files = "/sys/kernel/debug/cec/cec0/status", "/sys/kernel/debug/cec/cec1/status", "/sys/kernel/debug/cec/cec10/status", "/sys/kernel/debug/cec/cec11/status", "/sys/kernel/debug/cec/cec12/status", "/sys/kernel/debug/cec/cec13/status", "/sys/kernel/debug/cec/cec14/status", "/sys/kernel/debug/cec/cec15/status", "/sys/kernel/debug/cec/cec16/status", "/sys/kernel/debug/cec/cec17/status", "/sys/kernel/debug/cec/cec18/status", "/sys/kernel/debug/cec/cec19/status", "/sys/kernel/debug/cec/cec2/status", "/sys/kernel/debug/cec/cec20/status", "/sys/kernel/debug/cec/cec21/status", "/sys/kernel/debug/cec/cec22/status", "/sys/kernel/debug/cec/cec23/status", "/sys/kernel/debug/cec/cec24/status", "/sys/kernel/debug/cec/cec25/status", "/sys/kernel/debug/cec/cec26/status", "/sys/kernel/debug/cec/cec27/status", "/sys/kernel/debug/cec/cec28/status", "/sys/kernel/debug/cec/cec29/status", "/sys/kernel/debug/cec/cec3/status", "/sys/kernel/debug/cec/cec30/status", "/sys/kernel/debug/cec/cec31/status", "/sys/kernel/debug/cec/cec4/status", "/sys/kernel/debug/cec/cec5/status", "/sys/kernel/debug/cec/cec6/status", "/sys/kernel/debug/cec/cec7/status", "/sys/kernel/debug/cec/cec8/status", "/sys/kernel/debug/cec/cec9/status"
openat$auto_debugfs_devm_entry(fd const[AT_FDCWD], file ptr[in, string[auto_debugfs_devm_entry_files]], flags flags[open_flags], mode const[0]) fd_auto_debugfs_devm_entry (automatic)
read$auto_debugfs_devm_entry(fd fd_auto_debugfs_devm_entry, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)

# fops: open:deferred_devs_open read:seq_read
resource fd_auto_deferred_devs[fd]
openat$auto_deferred_devs(fd const[AT_FDCWD], file ptr[in, string["/sys/kernel/debug/devices_deferred"]], flags flags[open_flags], mode const[0]) fd_auto_deferred_devs (automatic)
read$auto_deferred_devs(fd fd_auto_deferred_devs, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)

# fops: open:devkmsg_open read:devkmsg_read write:devkmsg_write
resource fd_auto_devkmsg[fd]
openat$auto_devkmsg(fd const[AT_FDCWD], file ptr[in, string["/dev/kmsg"]], flags flags[open_flags], mode const[0]) fd_auto_devkmsg (automatic)
read$auto_devkmsg(fd fd_auto_devkmsg, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)
write$auto_devkmsg(fd fd_auto_devkmsg, buf ptr[in, array[int8]], len bytesize[buf]) (automatic)

# fops: open:dm_open ioctl:dm_ctl_ioctl
resource fd_auto_dm[fd]
openat$auto_dm(fd const[AT_FDCWD], file ptr[in, string["/dev/mapper/control"]], flags flags[open_flags], mode const[0]) fd_auto_dm (automatic)
ioctl$auto_dm(fd fd_auto_dm, cmd intptr, arg ptr[in, array[int8]]) (automatic)

# fops: open:dma_buf_debug_open read:seq_read
resource fd_auto_dma_buf_debug[fd]
openat$auto_dma_buf_debug(fd const[AT_FDCWD], file ptr[in, string["/sys/kernel/debug/dma_buf/bufinfo"]], flags flags[open_flags], mode const[0]) fd_auto_dma_buf_debug (automatic)
read$auto_dma_buf_debug(fd fd_auto_dma_buf_debug, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)

# fops: open:dma_heap_open ioctl:dma_heap_ioctl
resource fd_auto_dma_heap[fd]
openat$auto_dma_heap(fd const[AT_FDCWD], file ptr[in, string["/dev/dma_heap/system"]], flags flags[open_flags], mode const[0]) fd_auto_dma_heap (automatic)
ioctl$auto_DMA_HEAP_IOCTL_ALLOC(fd fd_auto_dma_heap, cmd const[DMA_HEAP_IOCTL_ALLOC], arg ptr[in, array[int8]]) (automatic)

# fops: open:dmaengine_summary_open read:seq_read
resource fd_auto_dmaengine_summary[fd]
openat$auto_dmaengine_summary(fd const[AT_FDCWD], file ptr[in, string["/sys/kernel/debug/dmaengine/summary"]], flags flags[open_flags], mode const[0]) fd_auto_dmaengine_summary (automatic)
read$auto_dmaengine_summary(fd fd_auto_dmaengine_summary, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)

# fops: open:dom_debug_open read:seq_read
resource fd_auto_dom_debug[fd]
openat$auto_dom_debug(fd const[AT_FDCWD], file ptr[in, string["/sys/kernel/debug/x86/topo/domains"]], flags flags[open_flags], mode const[0]) fd_auto_dom_debug (automatic)
read$auto_dom_debug(fd fd_auto_dom_debug, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)

# fops: open:drm_debugfs_entry_open read:seq_read
resource fd_auto_drm_debugfs_entry[fd]
auto_drm_debugfs_entry_files = "/sys/kernel/debug/dri/0000:00:02.0/clients", "/sys/kernel/debug/dri/0000:00:02.0/framebuffer", "/sys/kernel/debug/dri/0000:00:02.0/gem_names", "/sys/kernel/debug/dri/0000:00:02.0/internal_clients", "/sys/kernel/debug/dri/0000:00:02.0/name", "/sys/kernel/debug/dri/0000:00:02.0/state", "/sys/kernel/debug/dri/vgem/clients", "/sys/kernel/debug/dri/vgem/gem_names", "/sys/kernel/debug/dri/vgem/name", "/sys/kernel/debug/dri/vkms/clients", "/sys/kernel/debug/dri/vkms/framebuffer", "/sys/kernel/debug/dri/vkms/gem_names", "/sys/kernel/debug/dri/vkms/internal_clients", "/sys/kernel/debug/dri/vkms/name", "/sys/kernel/debug/dri/vkms/state", "/sys/kernel/debug/dri/vkms/vkms_config"
openat$auto_drm_debugfs_entry(fd const[AT_FDCWD], file ptr[in, string[auto_drm_debugfs_entry_files]], flags flags[open_flags], mode const[0]) fd_auto_drm_debugfs_entry (automatic)
read$auto_drm_debugfs_entry(fd fd_auto_drm_debugfs_entry, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)

# fops: open:dvb_demux_open read:dvb_demux_read ioctl:dvb_demux_ioctl
resource fd_auto_dvb_demux[fd]
openat$auto_dvb_demux(fd const[AT_FDCWD], file ptr[in, string["/dev/dvb/adapter0/demux0"]], flags flags[open_flags], mode const[0]) fd_auto_dvb_demux (automatic)
read$auto_dvb_demux(fd fd_auto_dvb_demux, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)
ioctl$auto_dvb_demux(fd fd_auto_dvb_demux, cmd intptr, arg ptr[in, array[int8]]) (automatic)

# fops: open:dvb_frontend_open ioctl:dvb_frontend_ioctl
resource fd_auto_dvb_frontend[fd]
openat$auto_dvb_frontend(fd const[AT_FDCWD], file ptr[in, string["/dev/dvb/adapter0/frontend0"]], flags flags[open_flags], mode const[0]) fd_auto_dvb_frontend (automatic)
ioctl$auto_dvb_frontend(fd fd_auto_dvb_frontend, cmd intptr, arg ptr[in, array[int8]]) (automatic)

# fops: open:dyn_event_open read:seq_read write:dyn_event_write
resource fd_auto_dyn_event[fd]
auto_dyn_event_files = "/sys/kernel/debug/tracing/dynamic_events", "/sys/kernel/tracing/dynamic_events"
openat$auto_dyn_event(fd const[AT_FDCWD], file ptr[in, string[auto_dyn_event_files]], flags flags[open_flags], mode const[0]) fd_auto_dyn_event (automatic)
read$auto_dyn_event(fd fd_auto_dyn_event, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)
write$auto_dyn_event(fd fd_auto_dyn_event, buf ptr[in, array[int8]], len bytesize[buf]) (automatic)

# fops: open:edid_open read:seq_read write:edid_write
resource fd_auto_edid[fd]
auto_edid_files = "/sys/kernel/debug/dri/0000:00:02.0/Virtual-2/edid_override", "/sys/kernel/debug/dri/vkms/Virtual-1/edid_override", "/sys/kernel/debug/dri/vkms/Writeback-1/edid_override"
openat$auto_edid(fd const[AT_FDCWD], file ptr[in, string[auto_edid_files]], flags flags[open_flags], mode const[0]) fd_auto_edid (automatic)
read$auto_edid(fd fd_auto_edid, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)
write$auto_edid(fd fd_auto_edid, buf ptr[in, array[int8]], len bytesize[buf]) (automatic)

# fops: open:environ_open read:environ_read
resource fd_auto_environ[fd]
auto_environ_files = "/proc/self/environ", "/proc/thread-self/environ"
openat$auto_environ(fd const[AT_FDCWD], file ptr[in, string[auto_environ_files]], flags flags[open_flags], mode const[0]) fd_auto_environ (automatic)
read$auto_environ(fd fd_auto_environ, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)

# fops: open:evdev_open read:evdev_read write:evdev_write ioctl:evdev_ioctl
resource fd_auto_evdev[fd]
auto_evdev_files = "/dev/input/event0", "/dev/input/event1", "/dev/input/event2"
openat$auto_evdev(fd const[AT_FDCWD], file ptr[in, string[auto_evdev_files]], flags flags[open_flags], mode const[0]) fd_auto_evdev (automatic)
read$auto_evdev(fd fd_auto_evdev, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)
write$auto_evdev(fd fd_auto_evdev, buf ptr[in, array[int8]], len bytesize[buf]) (automatic)
ioctl$auto_evdev(fd fd_auto_evdev, cmd intptr, arg ptr[in, array[int8]]) (automatic)

# fops: open:event_trigger_open read:seq_read write:event_trigger_write
resource fd_auto_event_trigger[fd]
auto_event_trigger_files = "/sys/kernel/debug/tracing/events/vmalloc/alloc_vmap_area/trigger", "/sys/kernel/debug/tracing/events/vmalloc/free_vmap_area_noflush/trigger", "/sys/kernel/debug/tracing/events/vmalloc/purge_vmap_area_lazy/trigger", "/sys/kernel/tracing/events/vmalloc/alloc_vmap_area/trigger", "/sys/kernel/tracing/events/vmalloc/free_vmap_area_noflush/trigger", "/sys/kernel/tracing/events/vmalloc/purge_vmap_area_lazy/trigger"
openat$auto_event_trigger(fd const[AT_FDCWD], file ptr[in, string[auto_event_trigger_files]], flags flags[open_flags], mode const[0]) fd_auto_event_trigger (automatic)
read$auto_event_trigger(fd fd_auto_event_trigger, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)
write$auto_event_trigger(fd fd_auto_event_trigger, buf ptr[in, array[int8]], len bytesize[buf]) (automatic)

# fops: open:fake_panic_fops_open read:debugfs_attr_read write:debugfs_attr_write
resource fd_auto2[fd]
openat$auto2(fd const[AT_FDCWD], file ptr[in, string["/sys/kernel/debug/mce/fake_panic"]], flags flags[open_flags], mode const[0]) fd_auto2 (automatic)
read$auto2(fd fd_auto2, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)
write$auto2(fd fd_auto2, buf ptr[in, array[int8]], len bytesize[buf]) (automatic)

# fops: open:fault_around_bytes_fops_open read:debugfs_attr_read write:debugfs_attr_write
resource fd_auto3[fd]
openat$auto3(fd const[AT_FDCWD], file ptr[in, string["/sys/kernel/debug/fault_around_bytes"]], flags flags[open_flags], mode const[0]) fd_auto3 (automatic)
read$auto3(fd fd_auto3, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)
write$auto3(fd fd_auto3, buf ptr[in, array[int8]], len bytesize[buf]) (automatic)

# fops: open:fb_open read:fb_read write:fb_write mmap:fb_mmap ioctl:fb_ioctl
resource fd_auto_fb[fd]
auto_fb_files = "/dev/fb0", "/dev/fb1"
openat$auto_fb(fd const[AT_FDCWD], file ptr[in, string[auto_fb_files]], flags flags[open_flags], mode const[0]) fd_auto_fb (automatic)
read$auto_fb(fd fd_auto_fb, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)
write$auto_fb(fd fd_auto_fb, buf ptr[in, array[int8]], len bytesize[buf]) (automatic)
mmap$auto_fb(addr vma, len len[addr], prot flags[mmap_prot], flags flags[mmap_flags], fd fd_auto_fb, offset fileoff) (automatic)
ioctl$auto_fb(fd fd_auto_fb, cmd intptr, arg ptr[in, array[int8]]) (automatic)

# fops: open:fops_u32_open read:debugfs_attr_read write:debugfs_attr_write
resource fd_auto4[fd]
auto4_files = "/sys/kernel/debug/fail_futex/verbose_ratelimit_burst", "/sys/kernel/debug/fail_futex/verbose_ratelimit_interval_ms", "/sys/kernel/debug/fail_io_timeout/verbose_ratelimit_burst", "/sys/kernel/debug/fail_io_timeout/verbose_ratelimit_interval_ms", "/sys/kernel/debug/fail_iommufd/verbose_ratelimit_burst", "/sys/kernel/debug/fail_iommufd/verbose_ratelimit_interval_ms", "/sys/kernel/debug/fail_make_request/verbose_ratelimit_burst", "/sys/kernel/debug/fail_make_request/verbose_ratelimit_interval_ms", "/sys/kernel/debug/fail_page_alloc/min-order", "/sys/kernel/debug/fail_page_alloc/verbose_ratelimit_burst", "/sys/kernel/debug/fail_page_alloc/verbose_ratelimit_interval_ms", "/sys/kernel/debug/fail_usercopy/verbose_ratelimit_burst", "/sys/kernel/debug/fail_usercopy/verbose_ratelimit_interval_ms", "/sys/kernel/debug/failslab/verbose_ratelimit_burst", "/sys/kernel/debug/failslab/verbose_ratelimit_interval_ms", "/sys/kernel/debug/ieee80211/phy0/aql_threshold", "/sys/kernel/debug/ieee80211/phy0/netdev:wlan0/skip_beacons", "/sys/kernel/debug/ieee80211/phy0/rc/fixed_rate_idx", "/sys/kernel/debug/ieee80211/phy1/aql_threshold", "/sys/kernel/debug/ieee80211/phy1/netdev:wlan1/skip_beacons", "/sys/kernel/debug/ieee80211/phy1/rc/fixed_rate_idx"
openat$auto4(fd const[AT_FDCWD], file ptr[in, string[auto4_files]], flags flags[open_flags], mode const[0]) fd_auto4 (automatic)
read$auto4(fd fd_auto4, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)
write$auto4(fd fd_auto4, buf ptr[in, array[int8]], len bytesize[buf]) (automatic)

# fops: open:fops_u32_ro_open read:debugfs_attr_read write:debugfs_attr_write
resource fd_auto5[fd]
auto5_files = "/sys/kernel/debug/regulator/reg-dummy-regulator-dummy/bypass_count", "/sys/kernel/debug/regulator/reg-dummy-regulator-dummy/open_count", "/sys/kernel/debug/regulator/reg-dummy-regulator-dummy/use_count"
openat$auto5(fd const[AT_FDCWD], file ptr[in, string[auto5_files]], flags flags[open_flags], mode const[0]) fd_auto5 (automatic)
read$auto5(fd fd_auto5, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)
write$auto5(fd fd_auto5, buf ptr[in, array[int8]], len bytesize[buf]) (automatic)

# fops: open:fops_u64_open read:debugfs_attr_read write:debugfs_attr_write
resource fd_auto6[fd]
openat$auto6(fd const[AT_FDCWD], file ptr[in, string["/sys/kernel/debug/x86/nmi_longest_ns"]], flags flags[open_flags], mode const[0]) fd_auto6 (automatic)
read$auto6(fd fd_auto6, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)
write$auto6(fd fd_auto6, buf ptr[in, array[int8]], len bytesize[buf]) (automatic)

# fops: open:fops_u64_ro_open read:debugfs_attr_read write:debugfs_attr_write
resource fd_auto7[fd]
auto7_files = "/sys/kernel/debug/ramdisk_pages/ram0", "/sys/kernel/debug/ramdisk_pages/ram1", "/sys/kernel/debug/ramdisk_pages/ram10", "/sys/kernel/debug/ramdisk_pages/ram11", "/sys/kernel/debug/ramdisk_pages/ram12", "/sys/kernel/debug/ramdisk_pages/ram13", "/sys/kernel/debug/ramdisk_pages/ram14", "/sys/kernel/debug/ramdisk_pages/ram15", "/sys/kernel/debug/ramdisk_pages/ram2", "/sys/kernel/debug/ramdisk_pages/ram3", "/sys/kernel/debug/ramdisk_pages/ram4", "/sys/kernel/debug/ramdisk_pages/ram5", "/sys/kernel/debug/ramdisk_pages/ram6", "/sys/kernel/debug/ramdisk_pages/ram7", "/sys/kernel/debug/ramdisk_pages/ram8", "/sys/kernel/debug/ramdisk_pages/ram9", "/sys/kernel/debug/zswap/pool_limit_hit", "/sys/kernel/debug/zswap/reject_alloc_fail", "/sys/kernel/debug/zswap/reject_compress_fail", "/sys/kernel/debug/zswap/reject_compress_poor", "/sys/kernel/debug/zswap/reject_kmemcache_fail", "/sys/kernel/debug/zswap/reject_reclaim_fail", "/sys/kernel/debug/zswap/written_back_pages"
openat$auto7(fd const[AT_FDCWD], file ptr[in, string[auto7_files]], flags flags[open_flags], mode const[0]) fd_auto7 (automatic)
read$auto7(fd fd_auto7, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)
write$auto7(fd fd_auto7, buf ptr[in, array[int8]], len bytesize[buf]) (automatic)

# fops: open:fops_u8_open read:debugfs_attr_read write:debugfs_attr_write
resource fd_auto8[fd]
auto8_files = "/sys/kernel/debug/nfcsim/nfc0/dropframe", "/sys/kernel/debug/nfcsim/nfc1/dropframe"
openat$auto8(fd const[AT_FDCWD], file ptr[in, string[auto8_files]], flags flags[open_flags], mode const[0]) fd_auto8 (automatic)
read$auto8(fd fd_auto8, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)
write$auto8(fd fd_auto8, buf ptr[in, array[int8]], len bytesize[buf]) (automatic)

# fops: open:fops_x16_ro_open read:debugfs_attr_read write:debugfs_attr_write
resource fd_auto9[fd]
auto9_files = "/sys/kernel/debug/ieee80211/phy0/netdev:wlan0/dormant_links", "/sys/kernel/debug/ieee80211/phy1/netdev:wlan1/dormant_links", "/sys/kernel/debug/x86/boot_params/version"
openat$auto9(fd const[AT_FDCWD], file ptr[in, string[auto9_files]], flags flags[open_flags], mode const[0]) fd_auto9 (automatic)
read$auto9(fd fd_auto9, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)
write$auto9(fd fd_auto9, buf ptr[in, array[int8]], len bytesize[buf]) (automatic)

# fops: open:ftrace_event_avail_open read:seq_read
resource fd_auto_ftrace_event_avail[fd]
auto_ftrace_event_avail_files = "/sys/kernel/debug/tracing/available_events", "/sys/kernel/tracing/available_events"
openat$auto_ftrace_event_avail(fd const[AT_FDCWD], file ptr[in, string[auto_ftrace_event_avail_files]], flags flags[open_flags], mode const[0]) fd_auto_ftrace_event_avail (automatic)
read$auto_ftrace_event_avail(fd fd_auto_ftrace_event_avail, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)

# fops: open:ftrace_event_set_npid_open read:seq_read write:ftrace_event_npid_write
resource fd_auto_ftrace_event_npid[fd]
auto_ftrace_event_npid_files = "/sys/kernel/debug/tracing/set_event_notrace_pid", "/sys/kernel/tracing/set_event_notrace_pid"
openat$auto_ftrace_event_npid(fd const[AT_FDCWD], file ptr[in, string[auto_ftrace_event_npid_files]], flags flags[open_flags], mode const[0]) fd_auto_ftrace_event_npid (automatic)
read$auto_ftrace_event_npid(fd fd_auto_ftrace_event_npid, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)
write$auto_ftrace_event_npid(fd fd_auto_ftrace_event_npid, buf ptr[in, array[int8]], len bytesize[buf]) (automatic)

# fops: open:ftrace_event_set_open read:seq_read write:ftrace_event_write
resource fd_auto_ftrace_event[fd]
auto_ftrace_event_files = "/sys/kernel/debug/tracing/set_event", "/sys/kernel/tracing/set_event"
openat$auto_ftrace_event(fd const[AT_FDCWD], file ptr[in, string[auto_ftrace_event_files]], flags flags[open_flags], mode const[0]) fd_auto_ftrace_event (automatic)
read$auto_ftrace_event(fd fd_auto_ftrace_event, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)
write$auto_ftrace_event(fd fd_auto_ftrace_event, buf ptr[in, array[int8]], len bytesize[buf]) (automatic)

# fops: open:ftrace_event_set_pid_open read:seq_read write:ftrace_event_pid_write
resource fd_auto_ftrace_event_pid[fd]
auto_ftrace_event_pid_files = "/sys/kernel/debug/tracing/set_event_pid", "/sys/kernel/tracing/set_event_pid"
openat$auto_ftrace_event_pid(fd const[AT_FDCWD], file ptr[in, string[auto_ftrace_event_pid_files]], flags flags[open_flags], mode const[0]) fd_auto_ftrace_event_pid (automatic)
read$auto_ftrace_event_pid(fd fd_auto_ftrace_event_pid, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)
write$auto_ftrace_event_pid(fd fd_auto_ftrace_event_pid, buf ptr[in, array[int8]], len bytesize[buf]) (automatic)

# fops: open:ftrace_formats_open read:seq_read
resource fd_auto_ftrace_formats[fd]
auto_ftrace_formats_files = "/sys/kernel/debug/tracing/printk_formats", "/sys/kernel/tracing/printk_formats"
openat$auto_ftrace_formats(fd const[AT_FDCWD], file ptr[in, string[auto_ftrace_formats_files]], flags flags[open_flags], mode const[0]) fd_auto_ftrace_formats (automatic)
read$auto_ftrace_formats(fd fd_auto_ftrace_formats, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)

# fops: open:fuse_dev_open read:fuse_dev_read write:fuse_dev_write ioctl:fuse_dev_ioctl
resource fd_auto_fuse_dev[fd]
openat$auto_fuse_dev(fd const[AT_FDCWD], file ptr[in, string["/dev/fuse"]], flags flags[open_flags], mode const[0]) fd_auto_fuse_dev (automatic)
read$auto_fuse_dev(fd fd_auto_fuse_dev, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)
write$auto_fuse_dev(fd fd_auto_fuse_dev, buf ptr[in, array[int8]], len bytesize[buf]) (automatic)
ioctl$auto_FUSE_DEV_IOC_BACKING_CLOSE(fd fd_auto_fuse_dev, cmd const[FUSE_DEV_IOC_BACKING_CLOSE], arg ptr[inout, int32]) (automatic)
ioctl$auto_FUSE_DEV_IOC_BACKING_OPEN(fd fd_auto_fuse_dev, cmd const[FUSE_DEV_IOC_BACKING_OPEN], arg ptr[inout, fuse_backing_map$auto_record]) (automatic)
ioctl$auto_FUSE_DEV_IOC_CLONE(fd fd_auto_fuse_dev, cmd const[FUSE_DEV_IOC_CLONE], arg ptr[in, int32]) (automatic)

# fops: open:gpiolib_open read:seq_read
resource fd_auto_gpiolib[fd]
openat$auto_gpiolib(fd const[AT_FDCWD], file ptr[in, string["/sys/kernel/debug/gpio"]], flags flags[open_flags], mode const[0]) fd_auto_gpiolib (automatic)
read$auto_gpiolib(fd fd_auto_gpiolib, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)

# fops: open:hwsim_fops_group_open read:debugfs_attr_read write:debugfs_attr_write
resource fd_auto10[fd]
auto10_files = "/sys/kernel/debug/ieee80211/phy0/hwsim/group", "/sys/kernel/debug/ieee80211/phy1/hwsim/group"
openat$auto10(fd const[AT_FDCWD], file ptr[in, string[auto10_files]], flags flags[open_flags], mode const[0]) fd_auto10 (automatic)
read$auto10(fd fd_auto10, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)
write$auto10(fd fd_auto10, buf ptr[in, array[int8]], len bytesize[buf]) (automatic)

# fops: open:hwsim_fops_ps_open read:debugfs_attr_read write:debugfs_attr_write
resource fd_auto11[fd]
auto11_files = "/sys/kernel/debug/ieee80211/phy0/hwsim/ps", "/sys/kernel/debug/ieee80211/phy1/hwsim/ps"
openat$auto11(fd const[AT_FDCWD], file ptr[in, string[auto11_files]], flags flags[open_flags], mode const[0]) fd_auto11 (automatic)
read$auto11(fd fd_auto11, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)
write$auto11(fd fd_auto11, buf ptr[in, array[int8]], len bytesize[buf]) (automatic)

# fops: open:hwsim_fops_rx_rssi_open read:debugfs_attr_read write:debugfs_attr_write
resource fd_auto12[fd]
auto12_files = "/sys/kernel/debug/ieee80211/phy0/hwsim/rx_rssi", "/sys/kernel/debug/ieee80211/phy1/hwsim/rx_rssi"
openat$auto12(fd const[AT_FDCWD], file ptr[in, string[auto12_files]], flags flags[open_flags], mode const[0]) fd_auto12 (automatic)
read$auto12(fd fd_auto12, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)
write$auto12(fd fd_auto12, buf ptr[in, array[int8]], len bytesize[buf]) (automatic)

# fops: open:hwsim_simulate_radar_open read:debugfs_attr_read write:debugfs_attr_write
resource fd_auto13[fd]
auto13_files = "/sys/kernel/debug/ieee80211/phy0/hwsim/dfs_simulate_radar", "/sys/kernel/debug/ieee80211/phy1/hwsim/dfs_simulate_radar"
openat$auto13(fd const[AT_FDCWD], file ptr[in, string[auto13_files]], flags flags[open_flags], mode const[0]) fd_auto13 (automatic)
read$auto13(fd fd_auto13, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)
write$auto13(fd fd_auto13, buf ptr[in, array[int8]], len bytesize[buf]) (automatic)

# fops: open:ima_ascii_measurements_open read:seq_read
resource fd_auto_ima_ascii_measurements[fd]
openat$auto_ima_ascii_measurements(fd const[AT_FDCWD], file ptr[in, string["/sys/kernel/security/integrity/ima/ascii_runtime_measurements_sha1"]], flags flags[open_flags], mode const[0]) fd_auto_ima_ascii_measurements (automatic)
read$auto_ima_ascii_measurements(fd fd_auto_ima_ascii_measurements, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)

# fops: open:ima_measurements_open read:seq_read
resource fd_auto_ima_measurements[fd]
openat$auto_ima_measurements(fd const[AT_FDCWD], file ptr[in, string["/sys/kernel/security/integrity/ima/binary_runtime_measurements_sha1"]], flags flags[open_flags], mode const[0]) fd_auto_ima_measurements (automatic)
read$auto_ima_measurements(fd fd_auto_ima_measurements, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)

# fops: open:ima_open_policy read:seq_read write:ima_write_policy
resource fd_auto_ima_policy[fd]
openat$auto_ima_policy(fd const[AT_FDCWD], file ptr[in, string["/sys/kernel/security/integrity/ima/policy"]], flags flags[open_flags], mode const[0]) fd_auto_ima_policy (automatic)
read$auto_ima_policy(fd fd_auto_ima_policy, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)
write$auto_ima_policy(fd fd_auto_ima_policy, buf ptr[in, array[int8]], len bytesize[buf]) (automatic)

# fops: open:iommufd_fops_open ioctl:iommufd_fops_ioctl
resource fd_auto_iommufd[fd]
openat$auto_iommufd(fd const[AT_FDCWD], file ptr[in, string["/dev/iommu"]], flags flags[open_flags], mode const[0]) fd_auto_iommufd (automatic)
ioctl$auto_iommufd(fd fd_auto_iommufd, cmd intptr, arg ptr[in, array[int8]]) (automatic)

# fops: open:kernfs_fop_open read:kernfs_fop_read_iter write:kernfs_fop_write_iter mmap:kernfs_fop_mmap
resource fd_auto_kernfs_fop[fd]
auto_kernfs_fop_files = "/sys/bus/acpi/drivers_autoprobe", "/sys/bus/auxiliary/drivers_autoprobe", "/sys/bus/bcma/drivers_autoprobe", "/sys/bus/cec/drivers_autoprobe", "/sys/bus/clockevents/drivers_autoprobe", "/sys/bus/clocksource/drivers_autoprobe", "/sys/bus/container/drivers_autoprobe", "/sys/bus/coreboot/drivers_autoprobe", "/sys/bus/counter/drivers_autoprobe", "/sys/bus/cpu/drivers_autoprobe", "/sys/bus/dax/drivers_autoprobe", "/sys/bus/dp-aux/drivers_autoprobe", "/sys/bus/edac/drivers_autoprobe", "/sys/bus/event_source/drivers_autoprobe", "/sys/bus/firewire/drivers_autoprobe", "/sys/bus/gadget/drivers_autoprobe", "/sys/bus/gbphy/drivers_autoprobe", "/sys/bus/gpio/drivers_autoprobe", "/sys/bus/greybus/drivers_autoprobe", "/sys/bus/hdaudio/drivers_autoprobe", "/sys/bus/hid/drivers_autoprobe", "/sys/bus/i2c/drivers_autoprobe", "/sys/bus/iio/drivers_autoprobe", "/sys/bus/iommufd_mock/drivers_autoprobe", "/sys/bus/iscsi_flashnode/drivers_autoprobe", "/sys/bus/ishtp/drivers_autoprobe", "/sys/bus/machinecheck/drivers_autoprobe", "/sys/bus/mdio_bus/drivers_autoprobe", "/sys/bus/media/drivers_autoprobe", "/sys/bus/mei/drivers_autoprobe", "/sys/bus/memory/drivers_autoprobe", "/sys/bus/memory_tiering/drivers_autoprobe", "/sys/bus/memstick/drivers_autoprobe", "/sys/bus/mhi/drivers_autoprobe", "/sys/bus/mipi-dsi/drivers_autoprobe", "/sys/bus/mmc/drivers_autoprobe", "/sys/bus/most/drivers_autoprobe", "/sys/bus/nd/drivers_autoprobe", "/sys/bus/netdevsim/drivers_autoprobe", "/sys/bus/node/drivers_autoprobe", "/sys/bus/nvmem-layout/drivers_autoprobe", "/sys/bus/nvmem/drivers_autoprobe", "/sys/bus/parport/drivers_autoprobe", "/sys/bus/pci-epf/drivers_autoprobe", "/sys/bus/pci/drivers_autoprobe", "/sys/bus/pci/resource_alignment", "/sys/bus/pci_express/drivers_autoprobe", "/sys/bus/pcmcia/drivers_autoprobe", "/sys/bus/platform/drivers_autoprobe", "/sys/bus/pnp/drivers_autoprobe", "/sys/bus/rmi4/drivers_autoprobe", "/sys/bus/scsi/drivers/st/debug_flag", "/sys/bus/scsi/drivers_autoprobe", "/sys/bus/sdio/drivers_autoprobe", "/sys/bus/serial-base/drivers_autoprobe", "/sys/bus/serial/drivers_autoprobe", "/sys/bus/serio/drivers/atkbd/bind_mode", "/sys/bus/serio/drivers/psmouse/bind_mode", "/sys/bus/serio/drivers/pulse8-cec/bind_mode", "/sys/bus/serio/drivers/rainshadow-cec/bind_mode", "/sys/bus/serio/drivers_autoprobe", "/sys/bus/snd_seq/drivers_autoprobe", "/sys/bus/soundwire/drivers_autoprobe", "/sys/bus/spi/drivers_autoprobe", "/sys/bus/ssb/drivers_autoprobe", "/sys/bus/tee/drivers_autoprobe", "/sys/bus/thunderbolt/drivers_autoprobe", "/sys/bus/typec/drivers_autoprobe", "/sys/bus/ulpi/drivers_autoprobe", "/sys/bus/usb-serial/drivers/SPCP8x5/new_id", "/sys/bus/usb-serial/drivers/aircable/new_id", "/sys/bus/usb-serial/drivers/ark3116/new_id", "/sys/bus/usb-serial/drivers/belkin/new_id", "/sys/bus/usb-serial/drivers/carelink/new_id", "/sys/bus/usb-serial/drivers/ch341-uart/new_id", "/sys/bus/usb-serial/drivers/clie_3.5/new_id", "/sys/bus/usb-serial/drivers/clie_5/new_id", "/sys/bus/usb-serial/drivers/cp210x/new_id", "/sys/bus/usb-serial/drivers/cyberjack/new_id", "/sys/bus/usb-serial/drivers/cyphidcom/new_id", "/sys/bus/usb-serial/drivers/debug/new_id", "/sys/bus/usb-serial/drivers/digi_2/new_id", "/sys/bus/usb-serial/drivers/digi_4/new_id", "/sys/bus/usb-serial/drivers/earthmate/new_id", "/sys/bus/usb-serial/drivers/edgeport_2/new_id", "/sys/bus/usb-serial/drivers/edgeport_4/new_id", "/sys/bus/usb-serial/drivers/edgeport_8/new_id", "/sys/bus/usb-serial/drivers/edgeport_ti_1/new_id", "/sys/bus/usb-serial/drivers/edgeport_ti_2/new_id", "/sys/bus/usb-serial/drivers/empeg/new_id", "/sys/bus/usb-serial/drivers/epic/new_id", "/sys/bus/usb-serial/drivers/f81232/new_id", "/sys/bus/usb-serial/drivers/f81534/new_id", "/sys/bus/usb-serial/drivers/f81534a/new_id", "/sys/bus/usb-serial/drivers/flashloader/new_id", "/sys/bus/usb-serial/drivers/ftdi_sio/new_id", "/sys/bus/usb-serial/drivers/funsoft/new_id", "/sys/bus/usb-serial/drivers/garmin_gps/new_id", "/sys/bus/usb-serial/drivers/generic/new_id", "/sys/bus/usb-serial/drivers/google/new_id", "/sys/bus/usb-serial/drivers/hp4x/new_id", "/sys/bus/usb-serial/drivers/ipaq/new_id", "/sys/bus/usb-serial/drivers/ipw/new_id", "/sys/bus/usb-serial/drivers/ir-usb/new_id", "/sys/bus/usb-serial/drivers/iuu_phoenix/new_id", "/sys/bus/usb-serial/drivers/kaufmann/new_id", "/sys/bus/usb-serial/drivers/keyspan_1/new_id", "/sys/bus/usb-serial/drivers/keyspan_2/new_id", "/sys/bus/usb-serial/drivers/keyspan_4/new_id", "/sys/bus/usb-serial/drivers/keyspan_no_firm/new_id", "/sys/bus/usb-serial/drivers/keyspan_pda/new_id", "/sys/bus/usb-serial/drivers/keyspan_pda_pre/new_id", "/sys/bus/usb-serial/drivers/kl5kusb105d/new_id", "/sys/bus/usb-serial/drivers/kobil/new_id", "/sys/bus/usb-serial/drivers/libtransistor/new_id", "/sys/bus/usb-serial/drivers/mct_u232/new_id", "/sys/bus/usb-serial/drivers/metro-usb/new_id", "/sys/bus/usb-serial/drivers/mos7840/new_id", "/sys/bus/usb-serial/drivers/moschip7720/new_id", "/sys/bus/usb-serial/drivers/moto_modem/new_id", "/sys/bus/usb-serial/drivers/motorola_tetra/new_id", "/sys/bus/usb-serial/drivers/mxuport/new_id", "/sys/bus/usb-serial/drivers/navman/new_id", "/sys/bus/usb-serial/drivers/nokia/new_id", "/sys/bus/usb-serial/drivers/nokiaca42v2/new_id", "/sys/bus/usb-serial/drivers/novatel_gps/new_id", "/sys/bus/usb-serial/drivers/omninet/new_id", "/sys/bus/usb-serial/drivers/opticon/new_id", "/sys/bus/usb-serial/drivers/option1/new_id", "/sys/bus/usb-serial/drivers/oti6858/new_id", "/sys/bus/usb-serial/drivers/pl2303/new_id", "/sys/bus/usb-serial/drivers/qcaux/new_id", "/sys/bus/usb-serial/drivers/qcserial/new_id", "/sys/bus/usb-serial/drivers/quatech-serial/new_id", "/sys/bus/usb-serial/drivers/safe_serial/new_id", "/sys/bus/usb-serial/drivers/siemens_mpi/new_id", "/sys/bus/usb-serial/drivers/sierra/new_id", "/sys/bus/usb-serial/drivers/ssu100/new_id", "/sys/bus/usb-serial/drivers/suunto/new_id", "/sys/bus/usb-serial/drivers/symbol/new_id", "/sys/bus/usb-serial/drivers/ti_usb_3410_5052_1/new_id", "/sys/bus/usb-serial/drivers/ti_usb_3410_5052_2/new_id", "/sys/bus/usb-serial/drivers/upd78f0730/new_id", "/sys/bus/usb-serial/drivers/visor/new_id", "/sys/bus/usb-serial/drivers/vivopay/new_id", "/sys/bus/usb-serial/drivers/whiteheat/new_id", "/sys/bus/usb-serial/drivers/whiteheatnofirm/new_id", "/sys/bus/usb-serial/drivers/wishbone_serial/new_id", "/sys/bus/usb-serial/drivers/xhci_dbc/new_id", "/sys/bus/usb-serial/drivers/xr_serial/new_id", "/sys/bus/usb-serial/drivers/xsens_mt/new_id", "/sys/bus/usb-serial/drivers/zio/new_id", "/sys/bus/usb-serial/drivers_autoprobe", "/sys/bus/usb/drivers/ALi m5602/new_id", "/sys/bus/usb/drivers/ALi m5602/remove_id", "/sys/bus/usb/drivers/Abilis Systems as10x usb driver/new_id", "/sys/bus/usb/drivers/Abilis Systems as10x usb driver/remove_id", "/sys/bus/usb/drivers/CoreChips/new_id", "/sys/bus/usb/drivers/CoreChips/remove_id", "/sys/bus/usb/drivers/HFC-S_USB/new_id", "/sys/bus/usb/drivers/HFC-S_USB/remove_id", "/sys/bus/usb/drivers/MOSCHIP usb-ethernet driver/new_id", "/sys/bus/usb/drivers/MOSCHIP usb-ethernet driver/remove_id", "/sys/bus/usb/drivers/Philips webcam/new_id", "/sys/bus/usb/drivers/Philips webcam/remove_id", "/sys/bus/usb/drivers/RobotFuzz Open Source InterFace, OSIF/new_id", "/sys/bus/usb/drivers/RobotFuzz Open Source InterFace, OSIF/remove_id", "/sys/bus/usb/drivers/STV06xx/new_id", "/sys/bus/usb/drivers/STV06xx/remove_id", "/sys/bus/usb/drivers/adutux/new_id", "/sys/bus/usb/drivers/adutux/remove_id", "/sys/bus/usb/drivers/aiptek/new_id", "/sys/bus/usb/drivers/aiptek/remove_id", "/sys/bus/usb/drivers/airspy/new_id", "/sys/bus/usb/drivers/airspy/remove_id", "/sys/bus/usb/drivers/appledisplay/new_id", "/sys/bus/usb/drivers/appledisplay/remove_id", "/sys/bus/usb/drivers/appletouch/new_id", "/sys/bus/usb/drivers/appletouch/remove_id", "/sys/bus/usb/drivers/aqc111/new_id", "/sys/bus/usb/drivers/aqc111/remove_id", "/sys/bus/usb/drivers/ar5523/new_id", "/sys/bus/usb/drivers/ar5523/remove_id", "/sys/bus/usb/drivers/asix/new_id", "/sys/bus/usb/drivers/asix/remove_id", "/sys/bus/usb/drivers/ath10k_usb/new_id", "/sys/bus/usb/drivers/ath10k_usb/remove_id", "/sys/bus/usb/drivers/ath3k/new_id", "/sys/bus/usb/drivers/ath3k/remove_id", "/sys/bus/usb/drivers/ath6kl_usb/new_id", "/sys/bus/usb/drivers/ath6kl_usb/remove_id", "/sys/bus/usb/drivers/ath9k_htc/new_id", "/sys/bus/usb/drivers/ath9k_htc/remove_id", "/sys/bus/usb/drivers/ati_remote/new_id", "/sys/bus/usb/drivers/ati_remote/remove_id", "/sys/bus/usb/drivers/ati_remote2/new_id", "/sys/bus/usb/drivers/ati_remote2/remove_id", "/sys/bus/usb/drivers/atusb/new_id", "/sys/bus/usb/drivers/atusb/remove_id", "/sys/bus/usb/drivers/au0828/new_id", "/sys/bus/usb/drivers/au0828/remove_id", "/sys/bus/usb/drivers/ax88179_178a/new_id", "/sys/bus/usb/drivers/ax88179_178a/remove_id", "/sys/bus/usb/drivers/b2c2_flexcop_usb/new_id", "/sys/bus/usb/drivers/b2c2_flexcop_usb/remove_id", "/sys/bus/usb/drivers/bcm203x/new_id", "/sys/bus/usb/drivers/bcm203x/remove_id", "/sys/bus/usb/drivers/bcm5974/new_id", "/sys/bus/usb/drivers/bcm5974/remove_id", "/sys/bus/usb/drivers/benq/new_id", "/sys/bus/usb/drivers/benq/remove_id", "/sys/bus/usb/drivers/bfusb/new_id", "/sys/bus/usb/drivers/bfusb/remove_id", "/sys/bus/usb/drivers/bpa10x/new_id", "/sys/bus/usb/drivers/bpa10x/remove_id", "/sys/bus/usb/drivers/btusb/new_id", "/sys/bus/usb/drivers/btusb/remove_id", "/sys/bus/usb/drivers/carl9170/new_id", "/sys/bus/usb/drivers/carl9170/remove_id", "/sys/bus/usb/drivers/catc/new_id", "/sys/bus/usb/drivers/catc/remove_id", "/sys/bus/usb/drivers/cdc_acm/new_id", "/sys/bus/usb/drivers/cdc_acm/remove_id", "/sys/bus/usb/drivers/cdc_eem/new_id", "/sys/bus/usb/drivers/cdc_eem/remove_id", "/sys/bus/usb/drivers/cdc_ether/new_id", "/sys/bus/usb/drivers/cdc_ether/remove_id", "/sys/bus/usb/drivers/cdc_mbim/new_id", "/sys/bus/usb/drivers/cdc_mbim/remove_id", "/sys/bus/usb/drivers/cdc_ncm/new_id", "/sys/bus/usb/drivers/cdc_ncm/remove_id", "/sys/bus/usb/drivers/cdc_phonet/new_id", "/sys/bus/usb/drivers/cdc_phonet/remove_id", "/sys/bus/usb/drivers/cdc_subset/new_id", "/sys/bus/usb/drivers/cdc_subset/remove_id", "/sys/bus/usb/drivers/cdc_wdm/new_id", "/sys/bus/usb/drivers/cdc_wdm/remove_id", "/sys/bus/usb/drivers/ch9200/new_id", "/sys/bus/usb/drivers/ch9200/remove_id", "/sys/bus/usb/drivers/chaoskey/new_id", "/sys/bus/usb/drivers/chaoskey/remove_id", "/sys/bus/usb/drivers/cinergyT2/new_id", "/sys/bus/usb/drivers/cinergyT2/remove_id", "/sys/bus/usb/drivers/cm109/new_id", "/sys/bus/usb/drivers/cm109/remove_id", "/sys/bus/usb/drivers/conex/new_id", "/sys/bus/usb/drivers/conex/remove_id", "/sys/bus/usb/drivers/cpia1/new_id", "/sys/bus/usb/drivers/cpia1/remove_id", "/sys/bus/usb/drivers/cx231xx/new_id", "/sys/bus/usb/drivers/cx231xx/remove_id", "/sys/bus/usb/drivers/cx82310_eth/new_id", "/sys/bus/usb/drivers/cx82310_eth/remove_id", "/sys/bus/usb/drivers/cxacru/new_id", "/sys/bus/usb/drivers/cxacru/remove_id", "/sys/bus/usb/drivers/cypress_cy7c63/new_id", "/sys/bus/usb/drivers/cypress_cy7c63/remove_id", "/sys/bus/usb/drivers/cytherm/new_id", "/sys/bus/usb/drivers/cytherm/remove_id", "/sys/bus/usb/drivers/dln2/new_id", "/sys/bus/usb/drivers/dln2/remove_id", "/sys/bus/usb/drivers/dm9601/new_id", "/sys/bus/usb/drivers/dm9601/remove_id", "/sys/bus/usb/drivers/dsbr100/new_id", "/sys/bus/usb/drivers/dsbr100/remove_id", "/sys/bus/usb/drivers/dt9812/new_id", "/sys/bus/usb/drivers/dt9812/remove_id", "/sys/bus/usb/drivers/dtcs033/new_id", "/sys/bus/usb/drivers/dtcs033/remove_id", "/sys/bus/usb/drivers/dvb_usb_a800/new_id", "/sys/bus/usb/drivers/dvb_usb_a800/remove_id", "/sys/bus/usb/drivers/dvb_usb_af9005/new_id", "/sys/bus/usb/drivers/dvb_usb_af9005/remove_id", "/sys/bus/usb/drivers/dvb_usb_az6027/new_id", "/sys/bus/usb/drivers/dvb_usb_az6027/remove_id", "/sys/bus/usb/drivers/dvb_usb_cxusb/new_id", "/sys/bus/usb/drivers/dvb_usb_cxusb/remove_id", "/sys/bus/usb/drivers/dvb_usb_dib0700/new_id", "/sys/bus/usb/drivers/dvb_usb_dib0700/remove_id", "/sys/bus/usb/drivers/dvb_usb_dibusb_mb/new_id", "/sys/bus/usb/drivers/dvb_usb_dibusb_mb/remove_id", "/sys/bus/usb/drivers/dvb_usb_dibusb_mc/new_id", "/sys/bus/usb/drivers/dvb_usb_dibusb_mc/remove_id", "/sys/bus/usb/drivers/dvb_usb_digitv/new_id", "/sys/bus/usb/drivers/dvb_usb_digitv/remove_id", "/sys/bus/usb/drivers/dvb_usb_dtt200u/new_id", "/sys/bus/usb/drivers/dvb_usb_dtt200u/remove_id", "/sys/bus/usb/drivers/dvb_usb_dtv5100/new_id", "/sys/bus/usb/drivers/dvb_usb_dtv5100/remove_id", "/sys/bus/usb/drivers/dvb_usb_gp8psk/new_id", "/sys/bus/usb/drivers/dvb_usb_gp8psk/remove_id", "/sys/bus/usb/drivers/dvb_usb_m920x/new_id", "/sys/bus/usb/drivers/dvb_usb_m920x/remove_id", "/sys/bus/usb/drivers/dvb_usb_nova_t_usb2/new_id", "/sys/bus/usb/drivers/dvb_usb_nova_t_usb2/remove_id", "/sys/bus/usb/drivers/dvb_usb_technisat_usb2/new_id", "/sys/bus/usb/drivers/dvb_usb_technisat_usb2/remove_id", "/sys/bus/usb/drivers/dvb_usb_ttusb2/new_id", "/sys/bus/usb/drivers/dvb_usb_ttusb2/remove_id", "/sys/bus/usb/drivers/dvb_usb_umt_010/new_id", "/sys/bus/usb/drivers/dvb_usb_umt_010/remove_id", "/sys/bus/usb/drivers/dvb_usb_vp702x/new_id", "/sys/bus/usb/drivers/dvb_usb_vp702x/remove_id", "/sys/bus/usb/drivers/dvb_usb_vp7045/new_id", "/sys/bus/usb/drivers/dvb_usb_vp7045/remove_id", "/sys/bus/usb/drivers/dw2102/new_id", "/sys/bus/usb/drivers/dw2102/remove_id", "/sys/bus/usb/drivers/em28xx/new_id", "/sys/bus/usb/drivers/em28xx/remove_id", "/sys/bus/usb/drivers/emi26 - firmware loader/new_id", "/sys/bus/usb/drivers/emi26 - firmware loader/remove_id", "/sys/bus/usb/drivers/emi62 - firmware loader/new_id", "/sys/bus/usb/drivers/emi62 - firmware loader/remove_id", "/sys/bus/usb/drivers/ems_usb/new_id", "/sys/bus/usb/drivers/ems_usb/remove_id", "/sys/bus/usb/drivers/es2_ap_driver/new_id", "/sys/bus/usb/drivers/es2_ap_driver/remove_id", "/sys/bus/usb/drivers/esd_usb/new_id", "/sys/bus/usb/drivers/esd_usb/remove_id", "/sys/bus/usb/drivers/etas_es58x/new_id", "/sys/bus/usb/drivers/etas_es58x/remove_id", "/sys/bus/usb/drivers/etoms/new_id", "/sys/bus/usb/drivers/etoms/remove_id", "/sys/bus/usb/drivers/f81534a_ctrl/new_id", "/sys/bus/usb/drivers/f81534a_ctrl/remove_id", "/sys/bus/usb/drivers/f81604/new_id", "/sys/bus/usb/drivers/f81604/remove_id", "/sys/bus/usb/drivers/finepix/new_id", "/sys/bus/usb/drivers/finepix/remove_id", "/sys/bus/usb/drivers/gl620a/new_id", "/sys/bus/usb/drivers/gl620a/remove_id", "/sys/bus/usb/drivers/gm12u320/new_id", "/sys/bus/usb/drivers/gm12u320/remove_id", "/sys/bus/usb/drivers/gnss-usb/new_id", "/sys/bus/usb/drivers/gnss-usb/remove_id", "/sys/bus/usb/drivers/go7007-loader/new_id", "/sys/bus/usb/drivers/go7007-loader/remove_id", "/sys/bus/usb/drivers/go7007/new_id", "/sys/bus/usb/drivers/go7007/remove_id", "/sys/bus/usb/drivers/gs_usb/new_id", "/sys/bus/usb/drivers/gs_usb/remove_id", "/sys/bus/usb/drivers/gspca_gl860/new_id", "/sys/bus/usb/drivers/gspca_gl860/remove_id", "/sys/bus/usb/drivers/gspca_pac7302/new_id", "/sys/bus/usb/drivers/gspca_pac7302/remove_id", "/sys/bus/usb/drivers/gspca_sn9c20x/new_id", "/sys/bus/usb/drivers/gspca_sn9c20x/remove_id", "/sys/bus/usb/drivers/gspca_topro/new_id", "/sys/bus/usb/drivers/gspca_topro/remove_id", "/sys/bus/usb/drivers/gspca_zc3xx/new_id", "/sys/bus/usb/drivers/gspca_zc3xx/remove_id", "/sys/bus/usb/drivers/gud/new_id", "/sys/bus/usb/drivers/gud/remove_id", "/sys/bus/usb/drivers/hackrf/new_id", "/sys/bus/usb/drivers/hackrf/remove_id", "/sys/bus/usb/drivers/hanwang/new_id", "/sys/bus/usb/drivers/hanwang/remove_id", "/sys/bus/usb/drivers/hdm_usb/new_id", "/sys/bus/usb/drivers/hdm_usb/remove_id", "/sys/bus/usb/drivers/hdpvr/new_id", "/sys/bus/usb/drivers/hdpvr/remove_id", "/sys/bus/usb/drivers/hso/new_id", "/sys/bus/usb/drivers/hso/remove_id", "/sys/bus/usb/drivers/huawei_cdc_ncm/new_id", "/sys/bus/usb/drivers/huawei_cdc_ncm/remove_id", "/sys/bus/usb/drivers/hub/new_id", "/sys/bus/usb/drivers/hub/remove_id", "/sys/bus/usb/drivers/i2c-cp2615/new_id", "/sys/bus/usb/drivers/i2c-cp2615/remove_id", "/sys/bus/usb/drivers/i2c-diolan-u2c/new_id", "/sys/bus/usb/drivers/i2c-diolan-u2c/remove_id", "/sys/bus/usb/drivers/i2c-tiny-usb/new_id", "/sys/bus/usb/drivers/i2c-tiny-usb/remove_id", "/sys/bus/usb/drivers/idmouse/new_id", "/sys/bus/usb/drivers/idmouse/remove_id", "/sys/bus/usb/drivers/iforce/new_id", "/sys/bus/usb/drivers/iforce/remove_id", "/sys/bus/usb/drivers/igorplugusb/new_id", "/sys/bus/usb/drivers/igorplugusb/remove_id", "/sys/bus/usb/drivers/iguanair/new_id", "/sys/bus/usb/drivers/iguanair/remove_id", "/sys/bus/usb/drivers/imon/new_id", "/sys/bus/usb/drivers/imon/remove_id", "/sys/bus/usb/drivers/imon_raw/new_id", "/sys/bus/usb/drivers/imon_raw/remove_id", "/sys/bus/usb/drivers/ims_pcu/new_id", "/sys/bus/usb/drivers/ims_pcu/remove_id", "/sys/bus/usb/drivers/int51x1/new_id", "/sys/bus/usb/drivers/int51x1/remove_id", "/sys/bus/usb/drivers/iowarrior/new_id", "/sys/bus/usb/drivers/iowarrior/remove_id", "/sys/bus/usb/drivers/ipheth/new_id", "/sys/bus/usb/drivers/ipheth/remove_id", "/sys/bus/usb/drivers/ir_toy/new_id", "/sys/bus/usb/drivers/ir_toy/remove_id", "/sys/bus/usb/drivers/isight_firmware/new_id", "/sys/bus/usb/drivers/isight_firmware/remove_id", "/sys/bus/usb/drivers/jeilinj/new_id", "/sys/bus/usb/drivers/jeilinj/remove_id", "/sys/bus/usb/drivers/jl2005bcd/new_id", "/sys/bus/usb/drivers/jl2005bcd/remove_id", "/sys/bus/usb/drivers/kalmia/new_id", "/sys/bus/usb/drivers/kalmia/remove_id", "/sys/bus/usb/drivers/kaweth/new_id", "/sys/bus/usb/drivers/kaweth/remove_id", "/sys/bus/usb/drivers/kbtab/new_id", "/sys/bus/usb/drivers/kbtab/remove_id", "/sys/bus/usb/drivers/keyspan_remote/new_id", "/sys/bus/usb/drivers/keyspan_remote/remove_id", "/sys/bus/usb/drivers/kinect/new_id", "/sys/bus/usb/drivers/kinect/remove_id", "/sys/bus/usb/drivers/konica/new_id", "/sys/bus/usb/drivers/konica/remove_id", "/sys/bus/usb/drivers/kvaser_usb/new_id", "/sys/bus/usb/drivers/kvaser_usb/remove_id", "/sys/bus/usb/drivers/lan78xx/new_id", "/sys/bus/usb/drivers/lan78xx/remove_id", "/sys/bus/usb/drivers/ldusb/new_id", "/sys/bus/usb/drivers/ldusb/remove_id", "/sys/bus/usb/drivers/legousbtower/new_id", "/sys/bus/usb/drivers/legousbtower/remove_id", "/sys/bus/usb/drivers/lg-vl600/new_id", "/sys/bus/usb/drivers/lg-vl600/remove_id", "/sys/bus/usb/drivers/ljca/new_id", "/sys/bus/usb/drivers/ljca/remove_id", "/sys/bus/usb/drivers/lvs/new_id", "/sys/bus/usb/drivers/lvs/remove_id", "/sys/bus/usb/drivers/mars/new_id", "/sys/bus/usb/drivers/mars/remove_id", "/sys/bus/usb/drivers/mcba_usb/new_id", "/sys/bus/usb/drivers/mcba_usb/remove_id", "/sys/bus/usb/drivers/mceusb/new_id", "/sys/bus/usb/drivers/mceusb/remove_id", "/sys/bus/usb/drivers/mdc800/new_id", "/sys/bus/usb/drivers/mdc800/remove_id", "/sys/bus/usb/drivers/microtekX6/new_id", "/sys/bus/usb/drivers/microtekX6/remove_id", "/sys/bus/usb/drivers/mr97310a/new_id", "/sys/bus/usb/drivers/mr97310a/remove_id", "/sys/bus/usb/drivers/msi2500/new_id", "/sys/bus/usb/drivers/msi2500/remove_id", "/sys/bus/usb/drivers/mvusb_mdio/new_id", "/sys/bus/usb/drivers/mvusb_mdio/remove_id", "/sys/bus/usb/drivers/net1080/new_id", "/sys/bus/usb/drivers/net1080/remove_id", "/sys/bus/usb/drivers/nfcmrvl/new_id", "/sys/bus/usb/drivers/nfcmrvl/remove_id", "/sys/bus/usb/drivers/ni6501/new_id", "/sys/bus/usb/drivers/ni6501/remove_id", "/sys/bus/usb/drivers/nw80x/new_id", "/sys/bus/usb/drivers/nw80x/remove_id", "/sys/bus/usb/drivers/opera1/new_id", "/sys/bus/usb/drivers/opera1/remove_id", "/sys/bus/usb/drivers/ov519/new_id", "/sys/bus/usb/drivers/ov519/remove_id", "/sys/bus/usb/drivers/ov534/new_id", "/sys/bus/usb/drivers/ov534/remove_id", "/sys/bus/usb/drivers/ov534_9/new_id", "/sys/bus/usb/drivers/ov534_9/remove_id", "/sys/bus/usb/drivers/pac207/new_id", "/sys/bus/usb/drivers/pac207/remove_id", "/sys/bus/usb/drivers/pac7311/new_id", "/sys/bus/usb/drivers/pac7311/remove_id", "/sys/bus/usb/drivers/pctv452e/new_id", "/sys/bus/usb/drivers/pctv452e/remove_id", "/sys/bus/usb/drivers/pcwd_usb/new_id", "/sys/bus/usb/drivers/pcwd_usb/remove_id", "/sys/bus/usb/drivers/peak_usb/new_id", "/sys/bus/usb/drivers/peak_usb/remove_id", "/sys/bus/usb/drivers/pegasus/new_id", "/sys/bus/usb/drivers/pegasus/remove_id", "/sys/bus/usb/drivers/pegasus_notetaker/new_id", "/sys/bus/usb/drivers/pegasus_notetaker/remove_id", "/sys/bus/usb/drivers/plfxlc/new_id", "/sys/bus/usb/drivers/plfxlc/remove_id", "/sys/bus/usb/drivers/plusb/new_id", "/sys/bus/usb/drivers/plusb/remove_id", "/sys/bus/usb/drivers/pn533_usb/new_id", "/sys/bus/usb/drivers/pn533_usb/remove_id", "/sys/bus/usb/drivers/port100/new_id", "/sys/bus/usb/drivers/port100/remove_id", "/sys/bus/usb/drivers/powermate/new_id", "/sys/bus/usb/drivers/powermate/remove_id", "/sys/bus/usb/drivers/powerz/new_id", "/sys/bus/usb/drivers/powerz/remove_id", "/sys/bus/usb/drivers/pvrusb2/new_id", "/sys/bus/usb/drivers/pvrusb2/remove_id", "/sys/bus/usb/drivers/pxrc/new_id", "/sys/bus/usb/drivers/pxrc/remove_id", "/sys/bus/usb/drivers/qmi_wwan/new_id", "/sys/bus/usb/drivers/qmi_wwan/remove_id", "/sys/bus/usb/drivers/r8152/new_id", "/sys/bus/usb/drivers/r8152/remove_id", "/sys/bus/usb/drivers/r8153_ecm/new_id", "/sys/bus/usb/drivers/r8153_ecm/remove_id", "/sys/bus/usb/drivers/r8712u/new_id", "/sys/bus/usb/drivers/r8712u/remove_id", "/sys/bus/usb/drivers/radio-keene/new_id", "/sys/bus/usb/drivers/radio-keene/remove_id", "/sys/bus/usb/drivers/radio-ma901/new_id", "/sys/bus/usb/drivers/radio-ma901/remove_id", "/sys/bus/usb/drivers/radio-mr800/new_id", "/sys/bus/usb/drivers/radio-mr800/remove_id", "/sys/bus/usb/drivers/radio-raremono/new_id", "/sys/bus/usb/drivers/radio-raremono/remove_id", "/sys/bus/usb/drivers/radio-si470x/new_id", "/sys/bus/usb/drivers/radio-si470x/remove_id", "/sys/bus/usb/drivers/radio-usb-si4713/new_id", "/sys/bus/usb/drivers/radio-usb-si4713/remove_id", "/sys/bus/usb/drivers/radioshark/new_id", "/sys/bus/usb/drivers/radioshark/remove_id", "/sys/bus/usb/drivers/radioshark2/new_id", "/sys/bus/usb/drivers/radioshark2/remove_id", "/sys/bus/usb/drivers/redrat3/new_id", "/sys/bus/usb/drivers/redrat3/remove_id", "/sys/bus/usb/drivers/rndis_host/new_id", "/sys/bus/usb/drivers/rndis_host/remove_id", "/sys/bus/usb/drivers/rtl8150/new_id", "/sys/bus/usb/drivers/rtl8150/remove_id", "/sys/bus/usb/drivers/rtsx_usb/new_id", "/sys/bus/usb/drivers/rtsx_usb/remove_id", "/sys/bus/usb/drivers/s2255/new_id", "/sys/bus/usb/drivers/s2255/remove_id", "/sys/bus/usb/drivers/se401/new_id", "/sys/bus/usb/drivers/se401/remove_id", "/sys/bus/usb/drivers/sisusb/new_id", "/sys/bus/usb/drivers/sisusb/remove_id", "/sys/bus/usb/drivers/smsc75xx/new_id", "/sys/bus/usb/drivers/smsc75xx/remove_id", "/sys/bus/usb/drivers/smsc95xx/new_id", "/sys/bus/usb/drivers/smsc95xx/remove_id", "/sys/bus/usb/drivers/smsusb/new_id", "/sys/bus/usb/drivers/smsusb/remove_id", "/sys/bus/usb/drivers/sn9c2028/new_id", "/sys/bus/usb/drivers/sn9c2028/remove_id", "/sys/bus/usb/drivers/snd-bcd2000/new_id", "/sys/bus/usb/drivers/snd-bcd2000/remove_id", "/sys/bus/usb/drivers/snd-ua101/new_id", "/sys/bus/usb/drivers/snd-ua101/remove_id", "/sys/bus/usb/drivers/snd-usb-6fire/new_id", "/sys/bus/usb/drivers/snd-usb-6fire/remove_id", "/sys/bus/usb/drivers/snd-usb-audio/new_id", "/sys/bus/usb/drivers/snd-usb-audio/remove_id", "/sys/bus/usb/drivers/snd-usb-caiaq/new_id", "/sys/bus/usb/drivers/snd-usb-caiaq/remove_id", "/sys/bus/usb/drivers/snd-usb-hiface/new_id", "/sys/bus/usb/drivers/snd-usb-hiface/remove_id", "/sys/bus/usb/drivers/snd-usb-us122l/new_id", "/sys/bus/usb/drivers/snd-usb-us122l/remove_id", "/sys/bus/usb/drivers/snd-usb-usx2y/new_id", "/sys/bus/usb/drivers/snd-usb-usx2y/remove_id", "/sys/bus/usb/drivers/snd_usb_pod/new_id", "/sys/bus/usb/drivers/snd_usb_pod/remove_id", "/sys/bus/usb/drivers/snd_usb_podhd/new_id", "/sys/bus/usb/drivers/snd_usb_podhd/remove_id", "/sys/bus/usb/drivers/snd_usb_toneport/new_id", "/sys/bus/usb/drivers/snd_usb_toneport/remove_id", "/sys/bus/usb/drivers/snd_usb_variax/new_id", "/sys/bus/usb/drivers/snd_usb_variax/remove_id", "/sys/bus/usb/drivers/sonixb/new_id", "/sys/bus/usb/drivers/sonixb/remove_id", "/sys/bus/usb/drivers/sonixj/new_id", "/sys/bus/usb/drivers/sonixj/remove_id", "/sys/bus/usb/drivers/spca1528/new_id", "/sys/bus/usb/drivers/spca1528/remove_id", "/sys/bus/usb/drivers/spca500/new_id", "/sys/bus/usb/drivers/spca500/remove_id", "/sys/bus/usb/drivers/spca501/new_id", "/sys/bus/usb/drivers/spca501/remove_id", "/sys/bus/usb/drivers/spca505/new_id", "/sys/bus/usb/drivers/spca505/remove_id", "/sys/bus/usb/drivers/spca506/new_id", "/sys/bus/usb/drivers/spca506/remove_id", "/sys/bus/usb/drivers/spca508/new_id", "/sys/bus/usb/drivers/spca508/remove_id", "/sys/bus/usb/drivers/spca561/new_id", "/sys/bus/usb/drivers/spca561/remove_id", "/sys/bus/usb/drivers/speedtch/new_id", "/sys/bus/usb/drivers/speedtch/remove_id", "/sys/bus/usb/drivers/sq905/new_id", "/sys/bus/usb/drivers/sq905/remove_id", "/sys/bus/usb/drivers/sq905c/new_id", "/sys/bus/usb/drivers/sq905c/remove_id", "/sys/bus/usb/drivers/sq930x/new_id", "/sys/bus/usb/drivers/sq930x/remove_id", "/sys/bus/usb/drivers/sr9700/new_id", "/sys/bus/usb/drivers/sr9700/remove_id", "/sys/bus/usb/drivers/stk014/new_id", "/sys/bus/usb/drivers/stk014/remove_id", "/sys/bus/usb/drivers/stk1135/new_id", "/sys/bus/usb/drivers/stk1135/remove_id", "/sys/bus/usb/drivers/stk1160/new_id", "/sys/bus/usb/drivers/stk1160/remove_id", "/sys/bus/usb/drivers/streamzap/new_id", "/sys/bus/usb/drivers/streamzap/remove_id", "/sys/bus/usb/drivers/stv0680/new_id", "/sys/bus/usb/drivers/stv0680/remove_id", "/sys/bus/usb/drivers/sunplus/new_id", "/sys/bus/usb/drivers/sunplus/remove_id", "/sys/bus/usb/drivers/sur40/new_id", "/sys/bus/usb/drivers/sur40/remove_id", "/sys/bus/usb/drivers/synaptics_usb/new_id", "/sys/bus/usb/drivers/synaptics_usb/remove_id", "/sys/bus/usb/drivers/t613/new_id", "/sys/bus/usb/drivers/t613/remove_id", "/sys/bus/usb/drivers/touptek/new_id", "/sys/bus/usb/drivers/touptek/remove_id", "/sys/bus/usb/drivers/trancevibrator/new_id", "/sys/bus/usb/drivers/trancevibrator/remove_id", "/sys/bus/usb/drivers/ttusb-dec/new_id", "/sys/bus/usb/drivers/ttusb-dec/remove_id", "/sys/bus/usb/drivers/ttusb/new_id", "/sys/bus/usb/drivers/ttusb/remove_id", "/sys/bus/usb/drivers/ttusbir/new_id", "/sys/bus/usb/drivers/ttusbir/remove_id", "/sys/bus/usb/drivers/tv8532/new_id", "/sys/bus/usb/drivers/tv8532/remove_id", "/sys/bus/usb/drivers/uas/new_id", "/sys/bus/usb/drivers/uas/remove_id", "/sys/bus/usb/drivers/ucan/new_id", "/sys/bus/usb/drivers/ucan/remove_id", "/sys/bus/usb/drivers/udl/new_id", "/sys/bus/usb/drivers/udl/remove_id", "/sys/bus/usb/drivers/ueagle-atm/new_id", "/sys/bus/usb/drivers/ueagle-atm/remove_id", "/sys/bus/usb/drivers/usb-storage/new_id", "/sys/bus/usb/drivers/usb-storage/remove_id", "/sys/bus/usb/drivers/usb_8dev/new_id", "/sys/bus/usb/drivers/usb_8dev/remove_id", "/sys/bus/usb/drivers/usb_acecad/new_id", "/sys/bus/usb/drivers/usb_acecad/remove_id", "/sys/bus/usb/drivers/usb_ehset_test/new_id", "/sys/bus/usb/drivers/usb_ehset_test/remove_id", "/sys/bus/usb/drivers/usbdux/new_id", "/sys/bus/usb/drivers/usbdux/remove_id", "/sys/bus/usb/drivers/usbduxfast/new_id", "/sys/bus/usb/drivers/usbduxfast/remove_id", "/sys/bus/usb/drivers/usbduxsigma/new_id", "/sys/bus/usb/drivers/usbduxsigma/remove_id", "/sys/bus/usb/drivers/usbfs/new_id", "/sys/bus/usb/drivers/usbfs/remove_id", "/sys/bus/usb/drivers/usbhid/new_id", "/sys/bus/usb/drivers/usbhid/remove_id", "/sys/bus/usb/drivers/usbip-host/match_busid", "/sys/bus/usb/drivers/usblcd/new_id", "/sys/bus/usb/drivers/usblcd/remove_id", "/sys/bus/usb/drivers/usblp/new_id", "/sys/bus/usb/drivers/usblp/remove_id", "/sys/bus/usb/drivers/usbsevseg/new_id", "/sys/bus/usb/drivers/usbsevseg/remove_id", "/sys/bus/usb/drivers/usbtest/new_id", "/sys/bus/usb/drivers/usbtest/remove_id", "/sys/bus/usb/drivers/usbtmc/new_id", "/sys/bus/usb/drivers/usbtmc/remove_id", "/sys/bus/usb/drivers/usbtouchscreen/new_id", "/sys/bus/usb/drivers/usbtouchscreen/remove_id", "/sys/bus/usb/drivers/usbtv/new_id", "/sys/bus/usb/drivers/usbtv/remove_id", "/sys/bus/usb/drivers/ushc/new_id", "/sys/bus/usb/drivers/ushc/remove_id", "/sys/bus/usb/drivers/uss720/new_id", "/sys/bus/usb/drivers/uss720/remove_id", "/sys/bus/usb/drivers/uvcvideo/new_id", "/sys/bus/usb/drivers/uvcvideo/remove_id", "/sys/bus/usb/drivers/vc032x/new_id", "/sys/bus/usb/drivers/vc032x/remove_id", "/sys/bus/usb/drivers/vicam/new_id", "/sys/bus/usb/drivers/vicam/remove_id", "/sys/bus/usb/drivers/viperboard/new_id", "/sys/bus/usb/drivers/viperboard/remove_id", "/sys/bus/usb/drivers/vmk80xx/new_id", "/sys/bus/usb/drivers/vmk80xx/remove_id", "/sys/bus/usb/drivers/vub300/new_id", "/sys/bus/usb/drivers/vub300/remove_id", "/sys/bus/usb/drivers/xbox_remote/new_id", "/sys/bus/usb/drivers/xbox_remote/remove_id", "/sys/bus/usb/drivers/xillyusb/new_id", "/sys/bus/usb/drivers/xillyusb/remove_id", "/sys/bus/usb/drivers/xirlink-cit/new_id", "/sys/bus/usb/drivers/xirlink-cit/remove_id", "/sys/bus/usb/drivers/xpad/new_id", "/sys/bus/usb/drivers/xpad/remove_id", "/sys/bus/usb/drivers/yealink/new_id", "/sys/bus/usb/drivers/yealink/remove_id", "/sys/bus/usb/drivers/yurex/new_id", "/sys/bus/usb/drivers/yurex/remove_id", "/sys/bus/usb/drivers/zaurus/new_id", "/sys/bus/usb/drivers/zaurus/remove_id", "/sys/bus/usb/drivers_autoprobe", "/sys/bus/vdpa/drivers_autoprobe", "/sys/bus/virtio/drivers_autoprobe", "/sys/bus/wmi/drivers_autoprobe", "/sys/bus/workqueue/drivers_autoprobe", "/sys/class/devcoredump/disabled", "/sys/class/firmware/timeout", "/sys/class/net/bonding_masters", "/sys/devices/LNXSYSTM:00/LNXPWRBN:00/input/input0/event0/power/autosuspend_delay_ms", "/sys/devices/LNXSYSTM:00/LNXPWRBN:00/input/input0/event0/power/control", "/sys/devices/LNXSYSTM:00/LNXPWRBN:00/input/input0/event0/uevent", "/sys/devices/LNXSYSTM:00/LNXPWRBN:00/input/input0/inhibited", "/sys/devices/LNXSYSTM:00/LNXPWRBN:00/input/input0/power/autosuspend_delay_ms", "/sys/devices/LNXSYSTM:00/LNXPWRBN:00/input/input0/power/control", "/sys/devices/LNXSYSTM:00/LNXPWRBN:00/input/input0/uevent", "/sys/devices/LNXSYSTM:00/LNXPWRBN:00/power/autosuspend_delay_ms", "/sys/devices/LNXSYSTM:00/LNXPWRBN:00/power/control", "/sys/devices/LNXSYSTM:00/LNXPWRBN:00/power/wakeup", "/sys/devices/LNXSYSTM:00/LNXPWRBN:00/uevent", "/sys/devices/LNXSYSTM:00/LNXPWRBN:00/wakeup/wakeup8/uevent", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/ACPI0010:00/LNXCPU:00/power/autosuspend_delay_ms", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/ACPI0010:00/LNXCPU:00/power/control", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/ACPI0010:00/LNXCPU:00/uevent", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/ACPI0010:00/LNXCPU:01/power/autosuspend_delay_ms", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/ACPI0010:00/LNXCPU:01/power/control", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/ACPI0010:00/LNXCPU:01/uevent", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/ACPI0010:00/power/autosuspend_delay_ms", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/ACPI0010:00/power/control", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/ACPI0010:00/uevent", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/PNP0103:00/power/autosuspend_delay_ms", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/PNP0103:00/power/control", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/PNP0103:00/uevent", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/PNP0A06:00/power/autosuspend_delay_ms", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/PNP0A06:00/power/control", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/PNP0A06:00/uevent", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/PNP0A06:01/power/autosuspend_delay_ms", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/PNP0A06:01/power/control", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/PNP0A06:01/uevent", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/PNP0A06:02/power/autosuspend_delay_ms", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/PNP0A06:02/power/control", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/PNP0A06:02/uevent", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/QEMU0002:00/power/autosuspend_delay_ms", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/QEMU0002:00/power/control", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/QEMU0002:00/uevent", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/device:00/power/autosuspend_delay_ms", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/device:00/power/control", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/device:00/uevent", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/device:00/wakeup/wakeup0/uevent", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/device:01/PNP0303:00/power/autosuspend_delay_ms", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/device:01/PNP0303:00/power/control", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/device:01/PNP0303:00/uevent", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/device:01/PNP0400:00/power/autosuspend_delay_ms", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/device:01/PNP0400:00/power/control", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/device:01/PNP0400:00/uevent", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/device:01/PNP0501:00/power/autosuspend_delay_ms", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/device:01/PNP0501:00/power/control", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/device:01/PNP0501:00/uevent", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/device:01/PNP0700:00/device:02/power/autosuspend_delay_ms", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/device:01/PNP0700:00/device:02/power/control", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/device:01/PNP0700:00/device:02/uevent", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/device:01/PNP0700:00/power/autosuspend_delay_ms", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/device:01/PNP0700:00/power/control", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/device:01/PNP0700:00/uevent", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/device:01/PNP0B00:00/power/autosuspend_delay_ms", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/device:01/PNP0B00:00/power/control", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/device:01/PNP0B00:00/uevent", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/device:01/PNP0F13:00/power/autosuspend_delay_ms", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/device:01/PNP0F13:00/power/control", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/device:01/PNP0F13:00/uevent", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/device:01/power/autosuspend_delay_ms", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/device:01/power/control", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/device:01/uevent", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/device:01/wakeup/wakeup1/uevent", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/device:03/power/autosuspend_delay_ms", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/device:03/power/control", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/device:03/uevent", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/device:03/wakeup/wakeup2/uevent", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/device:04/power/autosuspend_delay_ms", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/device:04/power/control", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/device:04/uevent", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/device:04/wakeup/wakeup3/uevent", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/device:05/power/autosuspend_delay_ms", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/device:05/power/control", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/device:05/uevent", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/device:05/wakeup/wakeup4/uevent", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/device:06/power/autosuspend_delay_ms", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/device:06/power/control", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/device:06/uevent", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/device:06/wakeup/wakeup5/uevent", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/device:07/power/autosuspend_delay_ms", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/device:07/power/control", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/device:07/uevent", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/device:07/wakeup/wakeup6/uevent", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/device:08/power/autosuspend_delay_ms", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/device:08/power/control", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/device:08/uevent", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/device:09/power/autosuspend_delay_ms", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/device:09/power/control", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/device:09/uevent", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/device:0a/power/autosuspend_delay_ms", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/device:0a/power/control", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/device:0a/uevent", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/device:0b/power/autosuspend_delay_ms", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/device:0b/power/control", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/device:0b/uevent", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/device:0c/power/autosuspend_delay_ms", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/device:0c/power/control", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/device:0c/uevent", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/device:0d/power/autosuspend_delay_ms", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/device:0d/power/control", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/device:0d/uevent", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/device:0e/power/autosuspend_delay_ms", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/device:0e/power/control", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/device:0e/uevent", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/device:0f/power/autosuspend_delay_ms", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/device:0f/power/control", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/device:0f/uevent", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/device:10/power/autosuspend_delay_ms", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/device:10/power/control", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/device:10/uevent", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/device:11/power/autosuspend_delay_ms", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/device:11/power/control", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/device:11/uevent", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/device:12/power/autosuspend_delay_ms", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/device:12/power/control", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/device:12/uevent", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/device:13/power/autosuspend_delay_ms", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/device:13/power/control", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/device:13/uevent", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/device:14/power/autosuspend_delay_ms", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/device:14/power/control", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/device:14/uevent", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/device:15/power/autosuspend_delay_ms", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/device:15/power/control", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/device:15/uevent", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/device:16/power/autosuspend_delay_ms", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/device:16/power/control", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/device:16/uevent", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/device:17/power/autosuspend_delay_ms", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/device:17/power/control", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/device:17/uevent", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/device:18/power/autosuspend_delay_ms", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/device:18/power/control", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/device:18/uevent", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/device:19/power/autosuspend_delay_ms", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/device:19/power/control", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/device:19/uevent", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/device:1a/power/autosuspend_delay_ms", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/device:1a/power/control", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/device:1a/uevent", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/device:1b/power/autosuspend_delay_ms", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/device:1b/power/control", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/device:1b/uevent", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/device:1c/power/autosuspend_delay_ms", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/device:1c/power/control", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/device:1c/uevent", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/device:1d/power/autosuspend_delay_ms", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/device:1d/power/control", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/device:1d/uevent", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/device:1e/power/autosuspend_delay_ms", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/device:1e/power/control", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/device:1e/uevent", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/device:1f/power/autosuspend_delay_ms", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/device:1f/power/control", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/device:1f/uevent", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/device:20/power/autosuspend_delay_ms", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/device:20/power/control", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/device:20/uevent", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/device:21/power/autosuspend_delay_ms", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/device:21/power/control", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/device:21/uevent", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/device:22/power/autosuspend_delay_ms", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/device:22/power/control", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/device:22/uevent", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/power/autosuspend_delay_ms", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/power/control", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/uevent", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/wakeup/wakeup7/uevent", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/PNP0C0F:00/power/autosuspend_delay_ms", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/PNP0C0F:00/power/control", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/PNP0C0F:00/uevent", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/PNP0C0F:01/power/autosuspend_delay_ms", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/PNP0C0F:01/power/control", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/PNP0C0F:01/uevent", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/PNP0C0F:02/power/autosuspend_delay_ms", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/PNP0C0F:02/power/control", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/PNP0C0F:02/uevent", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/PNP0C0F:03/power/autosuspend_delay_ms", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/PNP0C0F:03/power/control", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/PNP0C0F:03/uevent", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/PNP0C0F:04/power/autosuspend_delay_ms", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/PNP0C0F:04/power/control", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/PNP0C0F:04/uevent", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/power/autosuspend_delay_ms", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/power/control", "/sys/devices/LNXSYSTM:00/LNXSYBUS:00/uevent", "/sys/devices/LNXSYSTM:00/LNXSYBUS:01/power/autosuspend_delay_ms", "/sys/devices/LNXSYSTM:00/LNXSYBUS:01/power/control", "/sys/devices/LNXSYSTM:00/LNXSYBUS:01/uevent", "/sys/devices/LNXSYSTM:00/power/autosuspend_delay_ms", "/sys/devices/LNXSYSTM:00/power/control", "/sys/devices/LNXSYSTM:00/uevent", "/sys/devices/breakpoint/perf_event_mux_interval_ms", "/sys/devices/breakpoint/power/autosuspend_delay_ms", "/sys/devices/breakpoint/power/control", "/sys/devices/breakpoint/uevent", "/sys/devices/cpu/perf_event_mux_interval_ms", "/sys/devices/cpu/power/autosuspend_delay_ms", "/sys/devices/cpu/power/control", "/sys/devices/cpu/rdpmc", "/sys/devices/cpu/uevent", "/sys/devices/msr/perf_event_mux_interval_ms", "/sys/devices/msr/power/autosuspend_delay_ms", "/sys/devices/msr/power/control", "/sys/devices/msr/uevent", "/sys/devices/pci0000:00/0000:00:00.0/broken_parity_status", "/sys/devices/pci0000:00/0000:00:00.0/config", "/sys/devices/pci0000:00/0000:00:00.0/d3cold_allowed", "/sys/devices/pci0000:00/0000:00:00.0/driver_override", "/sys/devices/pci0000:00/0000:00:00.0/enable", "/sys/devices/pci0000:00/0000:00:00.0/msi_bus", "/sys/devices/pci0000:00/0000:00:00.0/numa_node", "/sys/devices/pci0000:00/0000:00:00.0/power/autosuspend_delay_ms", "/sys/devices/pci0000:00/0000:00:00.0/power/control", "/sys/devices/pci0000:00/0000:00:00.0/uevent", "/sys/devices/pci0000:00/0000:00:01.0/broken_parity_status", "/sys/devices/pci0000:00/0000:00:01.0/config", "/sys/devices/pci0000:00/0000:00:01.0/d3cold_allowed", "/sys/devices/pci0000:00/0000:00:01.0/driver_override", "/sys/devices/pci0000:00/0000:00:01.0/enable", "/sys/devices/pci0000:00/0000:00:01.0/msi_bus", "/sys/devices/pci0000:00/0000:00:01.0/numa_node", "/sys/devices/pci0000:00/0000:00:01.0/power/autosuspend_delay_ms", "/sys/devices/pci0000:00/0000:00:01.0/power/control", "/sys/devices/pci0000:00/0000:00:01.0/uevent", "/sys/devices/pci0000:00/0000:00:01.1/ata1/ata_port/ata1/power/autosuspend_delay_ms", "/sys/devices/pci0000:00/0000:00:01.1/ata1/ata_port/ata1/power/control", "/sys/devices/pci0000:00/0000:00:01.1/ata1/ata_port/ata1/uevent", "/sys/devices/pci0000:00/0000:00:01.1/ata1/host0/power/autosuspend_delay_ms", "/sys/devices/pci0000:00/0000:00:01.1/ata1/host0/power/control", "/sys/devices/pci0000:00/0000:00:01.1/ata1/host0/scsi_host/host0/active_mode", "/sys/devices/pci0000:00/0000:00:01.1/ata1/host0/scsi_host/host0/eh_deadline", "/sys/devices/pci0000:00/0000:00:01.1/ata1/host0/scsi_host/host0/power/autosuspend_delay_ms", "/sys/devices/pci0000:00/0000:00:01.1/ata1/host0/scsi_host/host0/power/control", "/sys/devices/pci0000:00/0000:00:01.1/ata1/host0/scsi_host/host0/state", "/sys/devices/pci0000:00/0000:00:01.1/ata1/host0/scsi_host/host0/supported_mode", "/sys/devices/pci0000:00/0000:00:01.1/ata1/host0/scsi_host/host0/uevent", "/sys/devices/pci0000:00/0000:00:01.1/ata1/host0/target0:0:0/0:0:0:0/block/sda/events_poll_msecs", "/sys/devices/pci0000:00/0000:00:01.1/ata1/host0/target0:0:0/0:0:0:0/block/sda/integrity/read_verify", "/sys/devices/pci0000:00/0000:00:01.1/ata1/host0/target0:0:0/0:0:0:0/block/sda/integrity/write_generate", "/sys/devices/pci0000:00/0000:00:01.1/ata1/host0/target0:0:0/0:0:0:0/block/sda/io-timeout-fail", "/sys/devices/pci0000:00/0000:00:01.1/ata1/host0/target0:0:0/0:0:0:0/block/sda/make-it-fail", "/sys/devices/pci0000:00/0000:00:01.1/ata1/host0/target0:0:0/0:0:0:0/block/sda/power/autosuspend_delay_ms", "/sys/devices/pci0000:00/0000:00:01.1/ata1/host0/target0:0:0/0:0:0:0/block/sda/power/control", "/sys/devices/pci0000:00/0000:00:01.1/ata1/host0/target0:0:0/0:0:0:0/block/sda/queue/add_random", "/sys/devices/pci0000:00/0000:00:01.1/ata1/host0/target0:0:0/0:0:0:0/block/sda/queue/discard_max_bytes", "/sys/devices/pci0000:00/0000:00:01.1/ata1/host0/target0:0:0/0:0:0:0/block/sda/queue/io_poll", "/sys/devices/pci0000:00/0000:00:01.1/ata1/host0/target0:0:0/0:0:0:0/block/sda/queue/io_poll_delay", "/sys/devices/pci0000:00/0000:00:01.1/ata1/host0/target0:0:0/0:0:0:0/block/sda/queue/io_timeout", "/sys/devices/pci0000:00/0000:00:01.1/ata1/host0/target0:0:0/0:0:0:0/block/sda/queue/iosched/async_depth", "/sys/devices/pci0000:00/0000:00:01.1/ata1/host0/target0:0:0/0:0:0:0/block/sda/queue/iosched/fifo_batch", "/sys/devices/pci0000:00/0000:00:01.1/ata1/host0/target0:0:0/0:0:0:0/block/sda/queue/iosched/front_merges", "/sys/devices/pci0000:00/0000:00:01.1/ata1/host0/target0:0:0/0:0:0:0/block/sda/queue/iosched/prio_aging_expire", "/sys/devices/pci0000:00/0000:00:01.1/ata1/host0/target0:0:0/0:0:0:0/block/sda/queue/iosched/read_expire", "/sys/devices/pci0000:00/0000:00:01.1/ata1/host0/target0:0:0/0:0:0:0/block/sda/queue/iosched/writes_starved", "/sys/devices/pci0000:00/0000:00:01.1/ata1/host0/target0:0:0/0:0:0:0/block/sda/queue/iostats", "/sys/devices/pci0000:00/0000:00:01.1/ata1/host0/target0:0:0/0:0:0:0/block/sda/queue/max_sectors_kb", "/sys/devices/pci0000:00/0000:00:01.1/ata1/host0/target0:0:0/0:0:0:0/block/sda/queue/nomerges", "/sys/devices/pci0000:00/0000:00:01.1/ata1/host0/target0:0:0/0:0:0:0/block/sda/queue/nr_requests", "/sys/devices/pci0000:00/0000:00:01.1/ata1/host0/target0:0:0/0:0:0:0/block/sda/queue/read_ahead_kb", "/sys/devices/pci0000:00/0000:00:01.1/ata1/host0/target0:0:0/0:0:0:0/block/sda/queue/rq_affinity", "/sys/devices/pci0000:00/0000:00:01.1/ata1/host0/target0:0:0/0:0:0:0/block/sda/queue/scheduler", "/sys/devices/pci0000:00/0000:00:01.1/ata1/host0/target0:0:0/0:0:0:0/block/sda/queue/stable_writes", "/sys/devices/pci0000:00/0000:00:01.1/ata1/host0/target0:0:0/0:0:0:0/block/sda/queue/wbt_lat_usec", "/sys/devices/pci0000:00/0000:00:01.1/ata1/host0/target0:0:0/0:0:0:0/block/sda/sda1/make-it-fail", "/sys/devices/pci0000:00/0000:00:01.1/ata1/host0/target0:0:0/0:0:0:0/block/sda/sda1/power/autosuspend_delay_ms", "/sys/devices/pci0000:00/0000:00:01.1/ata1/host0/target0:0:0/0:0:0:0/block/sda/sda1/power/control", "/sys/devices/pci0000:00/0000:00:01.1/ata1/host0/target0:0:0/0:0:0:0/block/sda/sda1/trace/act_mask", "/sys/devices/pci0000:00/0000:00:01.1/ata1/host0/target0:0:0/0:0:0:0/block/sda/sda1/trace/enable", "/sys/devices/pci0000:00/0000:00:01.1/ata1/host0/target0:0:0/0:0:0:0/block/sda/sda1/trace/end_lba", "/sys/devices/pci0000:00/0000:00:01.1/ata1/host0/target0:0:0/0:0:0:0/block/sda/sda1/trace/pid", "/sys/devices/pci0000:00/0000:00:01.1/ata1/host0/target0:0:0/0:0:0:0/block/sda/sda1/uevent", "/sys/devices/pci0000:00/0000:00:01.1/ata1/host0/target0:0:0/0:0:0:0/block/sda/trace/act_mask", "/sys/devices/pci0000:00/0000:00:01.1/ata1/host0/target0:0:0/0:0:0:0/block/sda/trace/end_lba", "/sys/devices/pci0000:00/0000:00:01.1/ata1/host0/target0:0:0/0:0:0:0/block/sda/trace/pid", "/sys/devices/pci0000:00/0000:00:01.1/ata1/host0/target0:0:0/0:0:0:0/block/sda/trace/start_lba", "/sys/devices/pci0000:00/0000:00:01.1/ata1/host0/target0:0:0/0:0:0:0/block/sda/uevent", "/sys/devices/pci0000:00/0000:00:01.1/ata1/host0/target0:0:0/0:0:0:0/bsg/0:0:0:0/power/autosuspend_delay_ms", "/sys/devices/pci0000:00/0000:00:01.1/ata1/host0/target0:0:0/0:0:0:0/bsg/0:0:0:0/power/control", "/sys/devices/pci0000:00/0000:00:01.1/ata1/host0/target0:0:0/0:0:0:0/bsg/0:0:0:0/uevent", "/sys/devices/pci0000:00/0000:00:01.1/ata1/host0/target0:0:0/0:0:0:0/cdl_enable", "/sys/devices/pci0000:00/0000:00:01.1/ata1/host0/target0:0:0/0:0:0:0/eh_timeout", "/sys/devices/pci0000:00/0000:00:01.1/ata1/host0/target0:0:0/0:0:0:0/power/autosuspend_delay_ms", "/sys/devices/pci0000:00/0000:00:01.1/ata1/host0/target0:0:0/0:0:0:0/power/control", "/sys/devices/pci0000:00/0000:00:01.1/ata1/host0/target0:0:0/0:0:0:0/queue_type", "/sys/devices/pci0000:00/0000:00:01.1/ata1/host0/target0:0:0/0:0:0:0/scsi_device/0:0:0:0/power/autosuspend_delay_ms", "/sys/devices/pci0000:00/0000:00:01.1/ata1/host0/target0:0:0/0:0:0:0/scsi_device/0:0:0:0/power/control", "/sys/devices/pci0000:00/0000:00:01.1/ata1/host0/target0:0:0/0:0:0:0/scsi_device/0:0:0:0/uevent", "/sys/devices/pci0000:00/0000:00:01.1/ata1/host0/target0:0:0/0:0:0:0/scsi_disk/0:0:0:0/allow_restart", "/sys/devices/pci0000:00/0000:00:01.1/ata1/host0/target0:0:0/0:0:0:0/scsi_disk/0:0:0:0/cache_type", "/sys/devices/pci0000:00/0000:00:01.1/ata1/host0/target0:0:0/0:0:0:0/scsi_disk/0:0:0:0/manage_runtime_start_stop", "/sys/devices/pci0000:00/0000:00:01.1/ata1/host0/target0:0:0/0:0:0:0/scsi_disk/0:0:0:0/manage_shutdown", "/sys/devices/pci0000:00/0000:00:01.1/ata1/host0/target0:0:0/0:0:0:0/scsi_disk/0:0:0:0/manage_system_start_stop", "/sys/devices/pci0000:00/0000:00:01.1/ata1/host0/target0:0:0/0:0:0:0/scsi_disk/0:0:0:0/max_medium_access_timeouts", "/sys/devices/pci0000:00/0000:00:01.1/ata1/host0/target0:0:0/0:0:0:0/scsi_disk/0:0:0:0/max_retries", "/sys/devices/pci0000:00/0000:00:01.1/ata1/host0/target0:0:0/0:0:0:0/scsi_disk/0:0:0:0/max_write_same_blocks", "/sys/devices/pci0000:00/0000:00:01.1/ata1/host0/target0:0:0/0:0:0:0/scsi_disk/0:0:0:0/power/autosuspend_delay_ms", "/sys/devices/pci0000:00/0000:00:01.1/ata1/host0/target0:0:0/0:0:0:0/scsi_disk/0:0:0:0/power/control", "/sys/devices/pci0000:00/0000:00:01.1/ata1/host0/target0:0:0/0:0:0:0/scsi_disk/0:0:0:0/protection_type", "/sys/devices/pci0000:00/0000:00:01.1/ata1/host0/target0:0:0/0:0:0:0/scsi_disk/0:0:0:0/provisioning_mode", "/sys/devices/pci0000:00/0000:00:01.1/ata1/host0/target0:0:0/0:0:0:0/scsi_disk/0:0:0:0/uevent", "/sys/devices/pci0000:00/0000:00:01.1/ata1/host0/target0:0:0/0:0:0:0/scsi_disk/0:0:0:0/zeroing_mode"
openat$auto_kernfs_fop(fd const[AT_FDCWD], file ptr[in, string[auto_kernfs_fop_files]], flags flags[open_flags], mode const[0]) fd_auto_kernfs_fop (automatic)
read$auto_kernfs_fop(fd fd_auto_kernfs_fop, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)
write$auto_kernfs_fop(fd fd_auto_kernfs_fop, buf ptr[in, array[int8]], len bytesize[buf]) (automatic)
mmap$auto_kernfs_fop(addr vma, len len[addr], prot flags[mmap_prot], flags flags[mmap_flags], fd fd_auto_kernfs_fop, offset fileoff) (automatic)

# fops: open:l2cap_debugfs_open read:seq_read
resource fd_auto_l2cap_debugfs[fd]
openat$auto_l2cap_debugfs(fd const[AT_FDCWD], file ptr[in, string["/sys/kernel/debug/bluetooth/l2cap"]], flags flags[open_flags], mode const[0]) fd_auto_l2cap_debugfs (automatic)
read$auto_l2cap_debugfs(fd fd_auto_l2cap_debugfs, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)

# fops: open:lowpan_control_open read:seq_read write:lowpan_control_write
resource fd_auto_lowpan_control[fd]
openat$auto_lowpan_control(fd const[AT_FDCWD], file ptr[in, string["/sys/kernel/debug/bluetooth/6lowpan_control"]], flags flags[open_flags], mode const[0]) fd_auto_lowpan_control (automatic)
read$auto_lowpan_control(fd fd_auto_lowpan_control, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)
write$auto_lowpan_control(fd fd_auto_lowpan_control, buf ptr[in, array[int8]], len bytesize[buf]) (automatic)

# fops: open:lowpan_enable_fops_open read:debugfs_attr_read write:debugfs_attr_write
resource fd_auto14[fd]
openat$auto14(fd const[AT_FDCWD], file ptr[in, string["/sys/kernel/debug/bluetooth/6lowpan_enable"]], flags flags[open_flags], mode const[0]) fd_auto14 (automatic)
read$auto14(fd fd_auto14, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)
write$auto14(fd fd_auto14, buf ptr[in, array[int8]], len bytesize[buf]) (automatic)

# fops: open:lru_gen_seq_open read:seq_read
resource fd_auto_lru_gen_seq[fd]
auto_lru_gen_seq_files = "/sys/kernel/debug/lru_gen", "/sys/kernel/debug/lru_gen_full"
openat$auto_lru_gen_seq(fd const[AT_FDCWD], file ptr[in, string[auto_lru_gen_seq_files]], flags flags[open_flags], mode const[0]) fd_auto_lru_gen_seq (automatic)
read$auto_lru_gen_seq(fd fd_auto_lru_gen_seq, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)

# fops: open:lru_gen_seq_open read:seq_read write:lru_gen_seq_write
resource fd_auto_lru_gen_seq2[fd]
openat$auto_lru_gen_seq2(fd const[AT_FDCWD], file ptr[in, string["/sys/kernel/debug/lru_gen"]], flags flags[open_flags], mode const[0]) fd_auto_lru_gen_seq2 (automatic)
read$auto_lru_gen_seq2(fd fd_auto_lru_gen_seq2, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)
write$auto_lru_gen_seq2(fd fd_auto_lru_gen_seq2, buf ptr[in, array[int8]], len bytesize[buf]) (automatic)

# fops: open:mISDN_open read:mISDN_read ioctl:mISDN_ioctl
resource fd_auto_mISDN[fd]
openat$auto_mISDN(fd const[AT_FDCWD], file ptr[in, string["/dev/mISDNtimer"]], flags flags[open_flags], mode const[0]) fd_auto_mISDN (automatic)
read$auto_mISDN(fd fd_auto_mISDN, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)
ioctl$auto_IMDELTIMER(fd fd_auto_mISDN, cmd const[IMDELTIMER], arg ptr[in, int32]) (automatic)
ioctl$auto_IMADDTIMER(fd fd_auto_mISDN, cmd const[IMADDTIMER], arg ptr[in, int32]) (automatic)

# fops: open:mem_open read:mem_read write:mem_write
resource fd_auto_mem[fd]
auto_mem_files = "/proc/self/mem", "/proc/thread-self/mem"
openat$auto_mem(fd const[AT_FDCWD], file ptr[in, string[auto_mem_files]], flags flags[open_flags], mode const[0]) fd_auto_mem (automatic)
read$auto_mem(fd fd_auto_mem, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)
write$auto_mem(fd fd_auto_mem, buf ptr[in, array[int8]], len bytesize[buf]) (automatic)

# fops: open:memtype_seq_open read:seq_read
resource fd_auto_memtype_seq[fd]
openat$auto_memtype_seq(fd const[AT_FDCWD], file ptr[in, string["/sys/kernel/debug/x86/pat_memtype_list"]], flags flags[open_flags], mode const[0]) fd_auto_memtype_seq (automatic)
read$auto_memtype_seq(fd fd_auto_memtype_seq, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)

# fops: open:mgts_open read:seq_read
resource fd_auto_mgts[fd]
openat$auto_mgts(fd const[AT_FDCWD], file ptr[in, string["/sys/kernel/debug/multigrain_timestamps"]], flags flags[open_flags], mode const[0]) fd_auto_mgts (automatic)
read$auto_mgts(fd fd_auto_mgts, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)

# fops: open:mon_stat_open read:mon_stat_read
resource fd_auto_mon_stat[fd]
auto_mon_stat_files = "/sys/kernel/debug/usb/usbmon/0s", "/sys/kernel/debug/usb/usbmon/10s", "/sys/kernel/debug/usb/usbmon/11s", "/sys/kernel/debug/usb/usbmon/12s", "/sys/kernel/debug/usb/usbmon/13s", "/sys/kernel/debug/usb/usbmon/14s", "/sys/kernel/debug/usb/usbmon/15s", "/sys/kernel/debug/usb/usbmon/16s", "/sys/kernel/debug/usb/usbmon/17s", "/sys/kernel/debug/usb/usbmon/18s", "/sys/kernel/debug/usb/usbmon/19s", "/sys/kernel/debug/usb/usbmon/1s", "/sys/kernel/debug/usb/usbmon/20s", "/sys/kernel/debug/usb/usbmon/21s", "/sys/kernel/debug/usb/usbmon/22s", "/sys/kernel/debug/usb/usbmon/23s", "/sys/kernel/debug/usb/usbmon/24s", "/sys/kernel/debug/usb/usbmon/25s", "/sys/kernel/debug/usb/usbmon/26s", "/sys/kernel/debug/usb/usbmon/27s", "/sys/kernel/debug/usb/usbmon/28s", "/sys/kernel/debug/usb/usbmon/29s", "/sys/kernel/debug/usb/usbmon/2s", "/sys/kernel/debug/usb/usbmon/30s", "/sys/kernel/debug/usb/usbmon/31s", "/sys/kernel/debug/usb/usbmon/32s", "/sys/kernel/debug/usb/usbmon/33s", "/sys/kernel/debug/usb/usbmon/34s", "/sys/kernel/debug/usb/usbmon/35s", "/sys/kernel/debug/usb/usbmon/36s", "/sys/kernel/debug/usb/usbmon/37s", "/sys/kernel/debug/usb/usbmon/38s", "/sys/kernel/debug/usb/usbmon/39s", "/sys/kernel/debug/usb/usbmon/3s", "/sys/kernel/debug/usb/usbmon/40s", "/sys/kernel/debug/usb/usbmon/4s", "/sys/kernel/debug/usb/usbmon/5s", "/sys/kernel/debug/usb/usbmon/6s", "/sys/kernel/debug/usb/usbmon/7s", "/sys/kernel/debug/usb/usbmon/8s", "/sys/kernel/debug/usb/usbmon/9s"
openat$auto_mon_stat(fd const[AT_FDCWD], file ptr[in, string[auto_mon_stat_files]], flags flags[open_flags], mode const[0]) fd_auto_mon_stat (automatic)
read$auto_mon_stat(fd fd_auto_mon_stat, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)

# fops: open:mountinfo_open read:seq_read_iter
resource fd_auto15[fd]
auto15_files = "/proc/self/mountinfo", "/proc/thread-self/mountinfo"
openat$auto15(fd const[AT_FDCWD], file ptr[in, string[auto15_files]], flags flags[open_flags], mode const[0]) fd_auto15 (automatic)
read$auto15(fd fd_auto15, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)

# fops: open:mounts_open read:seq_read_iter
resource fd_auto16[fd]
auto16_files = "/proc/self/mounts", "/proc/thread-self/mounts"
openat$auto16(fd const[AT_FDCWD], file ptr[in, string[auto16_files]], flags flags[open_flags], mode const[0]) fd_auto16 (automatic)
read$auto16(fd fd_auto16, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)

# fops: open:mountstats_open read:seq_read_iter
resource fd_auto17[fd]
openat$auto17(fd const[AT_FDCWD], file ptr[in, string["/proc/self/mountstats"]], flags flags[open_flags], mode const[0]) fd_auto17 (automatic)
read$auto17(fd fd_auto17, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)

# fops: open:msr_open read:msr_read write:msr_write ioctl:msr_ioctl
resource fd_auto_msr[fd]
auto_msr_files = "/dev/cpu/0/msr", "/dev/cpu/1/msr"
openat$auto_msr(fd const[AT_FDCWD], file ptr[in, string[auto_msr_files]], flags flags[open_flags], mode const[0]) fd_auto_msr (automatic)
read$auto_msr(fd fd_auto_msr, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)
write$auto_msr(fd fd_auto_msr, buf ptr[in, array[int8]], len bytesize[buf]) (automatic)
ioctl$auto_X86_IOC_WRMSR_REGS(fd fd_auto_msr, cmd const[X86_IOC_WRMSR_REGS], arg ptr[in, array[int8]]) (automatic)
ioctl$auto_X86_IOC_RDMSR_REGS(fd fd_auto_msr, cmd const[X86_IOC_RDMSR_REGS], arg ptr[in, array[int8]]) (automatic)

# fops: open:mtdchar_open read:mtdchar_read write:mtdchar_write mmap:mtdchar_mmap ioctl:mtdchar_unlocked_ioctl
resource fd_auto_mtdchar[fd]
openat$auto_mtdchar(fd const[AT_FDCWD], file ptr[in, string["/dev/mtd0"]], flags flags[open_flags], mode const[0]) fd_auto_mtdchar (automatic)
read$auto_mtdchar(fd fd_auto_mtdchar, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)
write$auto_mtdchar(fd fd_auto_mtdchar, buf ptr[in, array[int8]], len bytesize[buf]) (automatic)
mmap$auto_mtdchar(addr vma, len len[addr], prot flags[mmap_prot], flags flags[mmap_flags], fd fd_auto_mtdchar, offset fileoff) (automatic)
ioctl$auto_mtdchar(fd fd_auto_mtdchar, cmd intptr, arg ptr[in, array[int8]]) (automatic)

# fops: open:nodes_fop_open read:o2net_debug_read
resource fd_auto18[fd]
openat$auto18(fd const[AT_FDCWD], file ptr[in, string["/sys/kernel/debug/o2net/connected_nodes"]], flags flags[open_flags], mode const[0]) fd_auto18 (automatic)
read$auto18(fd fd_auto18, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)

# fops: open:nonseekable_open ioctl:bch2_chardev_ioctl
resource fd_auto19[fd]
openat$auto19(fd const[AT_FDCWD], file ptr[in, string["/dev/bcachefs-ctl"]], flags flags[open_flags], mode const[0]) fd_auto19 (automatic)
ioctl$auto19(fd fd_auto19, cmd intptr, arg ptr[in, array[int8]]) (automatic)

# fops: open:nst_fop_open read:seq_read
resource fd_auto_nst_fop[fd]
openat$auto_nst_fop(fd const[AT_FDCWD], file ptr[in, string["/sys/kernel/debug/o2net/send_tracking"]], flags flags[open_flags], mode const[0]) fd_auto_nst_fop (automatic)
read$auto_nst_fop(fd fd_auto_nst_fop, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)

# fops: open:nvmf_dev_open read:seq_read write:nvmf_dev_write
resource fd_auto_nvmf_dev[fd]
openat$auto_nvmf_dev(fd const[AT_FDCWD], file ptr[in, string["/dev/nvme-fabrics"]], flags flags[open_flags], mode const[0]) fd_auto_nvmf_dev (automatic)
read$auto_nvmf_dev(fd fd_auto_nvmf_dev, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)
write$auto_nvmf_dev(fd fd_auto_nvmf_dev, buf ptr[in, array[int8]], len bytesize[buf]) (automatic)

# fops: open:nvram_misc_open read:nvram_misc_read write:nvram_misc_write ioctl:nvram_misc_ioctl
resource fd_auto_nvram_misc[fd]
openat$auto_nvram_misc(fd const[AT_FDCWD], file ptr[in, string["/dev/nvram"]], flags flags[open_flags], mode const[0]) fd_auto_nvram_misc (automatic)
read$auto_nvram_misc(fd fd_auto_nvram_misc, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)
write$auto_nvram_misc(fd fd_auto_nvram_misc, buf ptr[in, array[int8]], len bytesize[buf]) (automatic)
ioctl$auto_NVRAM_SETCKS(fd fd_auto_nvram_misc, cmd const[NVRAM_SETCKS], arg const[0]) (automatic)
ioctl$auto_NVRAM_INIT(fd fd_auto_nvram_misc, cmd const[NVRAM_INIT], arg const[0]) (automatic)

# fops: open:o2hb_debug_open read:o2hb_debug_read
resource fd_auto_o2hb_debug[fd]
auto_o2hb_debug_files = "/sys/kernel/debug/o2hb/failed_regions", "/sys/kernel/debug/o2hb/live_regions", "/sys/kernel/debug/o2hb/livenodes", "/sys/kernel/debug/o2hb/quorum_regions"
openat$auto_o2hb_debug(fd const[AT_FDCWD], file ptr[in, string[auto_o2hb_debug_files]], flags flags[open_flags], mode const[0]) fd_auto_o2hb_debug (automatic)
read$auto_o2hb_debug(fd fd_auto_o2hb_debug, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)

# fops: open:objects_open read:seq_read
resource fd_auto_objects[fd]
openat$auto_objects(fd const[AT_FDCWD], file ptr[in, string["/sys/kernel/debug/kfence/objects"]], flags flags[open_flags], mode const[0]) fd_auto_objects (automatic)
read$auto_objects(fd fd_auto_objects, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)

# fops: open:odev_open read:odev_read write:odev_write ioctl:odev_ioctl
resource fd_auto_odev[fd]
auto_odev_files = "/dev/sequencer", "/dev/sequencer2"
openat$auto_odev(fd const[AT_FDCWD], file ptr[in, string[auto_odev_files]], flags flags[open_flags], mode const[0]) fd_auto_odev (automatic)
read$auto_odev(fd fd_auto_odev, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)
write$auto_odev(fd fd_auto_odev, buf ptr[in, array[int8]], len bytesize[buf]) (automatic)
ioctl$auto_odev(fd fd_auto_odev, cmd intptr, arg ptr[in, array[int8]]) (automatic)

# fops: open:orangefs_debug_help_open read:seq_read
resource fd_auto_orangefs_debug_help[fd]
openat$auto_orangefs_debug_help(fd const[AT_FDCWD], file ptr[in, string["/sys/kernel/debug/orangefs/debug-help"]], flags flags[open_flags], mode const[0]) fd_auto_orangefs_debug_help (automatic)
read$auto_orangefs_debug_help(fd fd_auto_orangefs_debug_help, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)

# fops: open:orangefs_debug_open read:orangefs_debug_read write:orangefs_debug_write
resource fd_auto_orangefs_debug[fd]
openat$auto_orangefs_debug(fd const[AT_FDCWD], file ptr[in, string["/sys/kernel/debug/orangefs/kernel-debug"]], flags flags[open_flags], mode const[0]) fd_auto_orangefs_debug (automatic)
read$auto_orangefs_debug(fd fd_auto_orangefs_debug, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)
write$auto_orangefs_debug(fd fd_auto_orangefs_debug, buf ptr[in, array[int8]], len bytesize[buf]) (automatic)

# fops: open:output_bpc_open read:seq_read
resource fd_auto_output_bpc[fd]
auto_output_bpc_files = "/sys/kernel/debug/dri/0000:00:02.0/Virtual-2/output_bpc", "/sys/kernel/debug/dri/vkms/Virtual-1/output_bpc", "/sys/kernel/debug/dri/vkms/Writeback-1/output_bpc"
openat$auto_output_bpc(fd const[AT_FDCWD], file ptr[in, string[auto_output_bpc_files]], flags flags[open_flags], mode const[0]) fd_auto_output_bpc (automatic)
read$auto_output_bpc(fd fd_auto_output_bpc, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)

# fops: open:page_owner_stack_open read:seq_read
resource fd_auto_page_owner_stack[fd]
openat$auto_page_owner_stack(fd const[AT_FDCWD], file ptr[in, string["/sys/kernel/debug/page_owner_stacks/show_stacks"]], flags flags[open_flags], mode const[0]) fd_auto_page_owner_stack (automatic)
read$auto_page_owner_stack(fd fd_auto_page_owner_stack, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)

# fops: open:percpu_stats_open read:seq_read
resource fd_auto_percpu_stats[fd]
openat$auto_percpu_stats(fd const[AT_FDCWD], file ptr[in, string["/sys/kernel/debug/percpu_stats"]], flags flags[open_flags], mode const[0]) fd_auto_percpu_stats (automatic)
read$auto_percpu_stats(fd fd_auto_percpu_stats, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)

# fops: open:pid_maps_open read:seq_read ioctl:procfs_procmap_ioctl
resource fd_auto20[fd]
auto20_files = "/proc/self/maps", "/proc/thread-self/maps"
openat$auto20(fd const[AT_FDCWD], file ptr[in, string[auto20_files]], flags flags[open_flags], mode const[0]) fd_auto20 (automatic)
read$auto20(fd fd_auto20, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)
ioctl$auto_PROCMAP_QUERY(fd fd_auto20, cmd const[PROCMAP_QUERY], arg ptr[in, array[int8]]) (automatic)

# fops: open:pid_numa_maps_open read:seq_read
resource fd_auto_pid_numa_maps[fd]
auto_pid_numa_maps_files = "/proc/self/numa_maps", "/proc/thread-self/numa_maps"
openat$auto_pid_numa_maps(fd const[AT_FDCWD], file ptr[in, string[auto_pid_numa_maps_files]], flags flags[open_flags], mode const[0]) fd_auto_pid_numa_maps (automatic)
read$auto_pid_numa_maps(fd fd_auto_pid_numa_maps, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)

# fops: open:pid_smaps_open read:seq_read
resource fd_auto_pid_smaps[fd]
auto_pid_smaps_files = "/proc/self/smaps", "/proc/thread-self/smaps"
openat$auto_pid_smaps(fd const[AT_FDCWD], file ptr[in, string[auto_pid_smaps_files]], flags flags[open_flags], mode const[0]) fd_auto_pid_smaps (automatic)
read$auto_pid_smaps(fd fd_auto_pid_smaps, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)

# fops: open:posix_clock_open read:posix_clock_read ioctl:posix_clock_ioctl
resource fd_auto_posix_clock[fd]
openat$auto_posix_clock(fd const[AT_FDCWD], file ptr[in, string["/dev/ptp0"]], flags flags[open_flags], mode const[0]) fd_auto_posix_clock (automatic)
read$auto_posix_clock(fd fd_auto_posix_clock, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)
ioctl$auto_posix_clock(fd fd_auto_posix_clock, cmd intptr, arg ptr[in, array[int8]]) (automatic)

# fops: open:probes_open read:seq_read write:probes_write
resource fd_auto_probes[fd]
auto_probes_files = "/sys/kernel/debug/tracing/uprobe_events", "/sys/kernel/tracing/uprobe_events"
openat$auto_probes(fd const[AT_FDCWD], file ptr[in, string[auto_probes_files]], flags flags[open_flags], mode const[0]) fd_auto_probes (automatic)
read$auto_probes(fd fd_auto_probes, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)
write$auto_probes(fd fd_auto_probes, buf ptr[in, array[int8]], len bytesize[buf]) (automatic)

# fops: open:proc_page_owner_threshold_open read:simple_attr_read write:simple_attr_write
resource fd_auto_proc_page_owner_threshold[fd]
openat$auto_proc_page_owner_threshold(fd const[AT_FDCWD], file ptr[in, string["/sys/kernel/debug/page_owner_stacks/count_threshold"]], flags flags[open_flags], mode const[0]) fd_auto_proc_page_owner_threshold (automatic)
read$auto_proc_page_owner_threshold(fd fd_auto_proc_page_owner_threshold, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)
write$auto_proc_page_owner_threshold(fd fd_auto_proc_page_owner_threshold, buf ptr[in, array[int8]], len bytesize[buf]) (automatic)

# fops: open:proc_pid_attr_open read:proc_pid_attr_read write:proc_pid_attr_write
resource fd_auto_proc_pid_attr[fd]
auto_proc_pid_attr_files = "/proc/self/attr/apparmor/current", "/proc/self/attr/apparmor/exec", "/proc/self/attr/apparmor/prev", "/proc/self/attr/current", "/proc/self/attr/exec", "/proc/self/attr/fscreate", "/proc/self/attr/keycreate", "/proc/self/attr/prev", "/proc/self/attr/smack/current", "/proc/self/attr/sockcreate", "/proc/thread-self/attr/apparmor/current", "/proc/thread-self/attr/apparmor/exec", "/proc/thread-self/attr/apparmor/prev", "/proc/thread-self/attr/current", "/proc/thread-self/attr/exec", "/proc/thread-self/attr/fscreate", "/proc/thread-self/attr/keycreate", "/proc/thread-self/attr/prev", "/proc/thread-self/attr/smack/current", "/proc/thread-self/attr/sockcreate"
openat$auto_proc_pid_attr(fd const[AT_FDCWD], file ptr[in, string[auto_proc_pid_attr_files]], flags flags[open_flags], mode const[0]) fd_auto_proc_pid_attr (automatic)
read$auto_proc_pid_attr(fd fd_auto_proc_pid_attr, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)
write$auto_proc_pid_attr(fd fd_auto_proc_pid_attr, buf ptr[in, array[int8]], len bytesize[buf]) (automatic)

# fops: open:proc_reg_open read:proc_reg_read write:proc_reg_write mmap:proc_reg_mmap ioctl:proc_reg_unlocked_ioctl
resource fd_auto_proc_reg[fd]
auto_proc_reg_files = "/proc/acpi/wakeup", "/proc/asound/card0/dummy_pcm", "/proc/asound/card0/id", "/proc/asound/card0/oss_mixer", "/proc/asound/card0/pcm0c/info", "/proc/asound/card0/pcm0c/oss", "/proc/asound/card0/pcm0c/sub0/hw_params", "/proc/asound/card0/pcm0c/sub0/info", "/proc/asound/card0/pcm0c/sub0/status", "/proc/asound/card0/pcm0c/sub0/sw_params", "/proc/asound/card0/pcm0c/sub0/xrun_injection", "/proc/asound/card0/pcm0c/sub1/hw_params", "/proc/asound/card0/pcm0c/sub1/info", "/proc/asound/card0/pcm0c/sub1/status", "/proc/asound/card0/pcm0c/sub1/sw_params", "/proc/asound/card0/pcm0c/sub1/xrun_injection", "/proc/asound/card0/pcm0c/sub2/hw_params", "/proc/asound/card0/pcm0c/sub2/info", "/proc/asound/card0/pcm0c/sub2/status", "/proc/asound/card0/pcm0c/sub2/sw_params", "/proc/asound/card0/pcm0c/sub2/xrun_injection", "/proc/asound/card0/pcm0c/sub3/hw_params", "/proc/asound/card0/pcm0c/sub3/info", "/proc/asound/card0/pcm0c/sub3/status", "/proc/asound/card0/pcm0c/sub3/sw_params", "/proc/asound/card0/pcm0c/sub3/xrun_injection", "/proc/asound/card0/pcm0c/sub4/hw_params", "/proc/asound/card0/pcm0c/sub4/info", "/proc/asound/card0/pcm0c/sub4/status", "/proc/asound/card0/pcm0c/sub4/sw_params", "/proc/asound/card0/pcm0c/sub4/xrun_injection", "/proc/asound/card0/pcm0c/sub5/hw_params", "/proc/asound/card0/pcm0c/sub5/info", "/proc/asound/card0/pcm0c/sub5/status", "/proc/asound/card0/pcm0c/sub5/sw_params", "/proc/asound/card0/pcm0c/sub5/xrun_injection", "/proc/asound/card0/pcm0c/sub6/hw_params", "/proc/asound/card0/pcm0c/sub6/info", "/proc/asound/card0/pcm0c/sub6/status", "/proc/asound/card0/pcm0c/sub6/sw_params", "/proc/asound/card0/pcm0c/sub6/xrun_injection", "/proc/asound/card0/pcm0c/sub7/hw_params", "/proc/asound/card0/pcm0c/sub7/info", "/proc/asound/card0/pcm0c/sub7/status", "/proc/asound/card0/pcm0c/sub7/sw_params", "/proc/asound/card0/pcm0c/sub7/xrun_injection", "/proc/asound/card0/pcm0c/xrun_debug", "/proc/asound/card0/pcm0p/info", "/proc/asound/card0/pcm0p/oss", "/proc/asound/card0/pcm0p/sub0/hw_params", "/proc/asound/card0/pcm0p/sub0/info", "/proc/asound/card0/pcm0p/sub0/status", "/proc/asound/card0/pcm0p/sub0/sw_params", "/proc/asound/card0/pcm0p/sub0/xrun_injection", "/proc/asound/card0/pcm0p/sub1/hw_params", "/proc/asound/card0/pcm0p/sub1/info", "/proc/asound/card0/pcm0p/sub1/status", "/proc/asound/card0/pcm0p/sub1/sw_params", "/proc/asound/card0/pcm0p/sub1/xrun_injection", "/proc/asound/card0/pcm0p/sub2/hw_params", "/proc/asound/card0/pcm0p/sub2/info", "/proc/asound/card0/pcm0p/sub2/status", "/proc/asound/card0/pcm0p/sub2/sw_params", "/proc/asound/card0/pcm0p/sub2/xrun_injection", "/proc/asound/card0/pcm0p/sub3/hw_params", "/proc/asound/card0/pcm0p/sub3/info", "/proc/asound/card0/pcm0p/sub3/status", "/proc/asound/card0/pcm0p/sub3/sw_params", "/proc/asound/card0/pcm0p/sub3/xrun_injection", "/proc/asound/card0/pcm0p/sub4/hw_params", "/proc/asound/card0/pcm0p/sub4/info", "/proc/asound/card0/pcm0p/sub4/status", "/proc/asound/card0/pcm0p/sub4/sw_params", "/proc/asound/card0/pcm0p/sub4/xrun_injection", "/proc/asound/card0/pcm0p/sub5/hw_params", "/proc/asound/card0/pcm0p/sub5/info", "/proc/asound/card0/pcm0p/sub5/status", "/proc/asound/card0/pcm0p/sub5/sw_params", "/proc/asound/card0/pcm0p/sub5/xrun_injection", "/proc/asound/card0/pcm0p/sub6/hw_params", "/proc/asound/card0/pcm0p/sub6/info", "/proc/asound/card0/pcm0p/sub6/status", "/proc/asound/card0/pcm0p/sub6/sw_params", "/proc/asound/card0/pcm0p/sub6/xrun_injection", "/proc/asound/card0/pcm0p/sub7/hw_params", "/proc/asound/card0/pcm0p/sub7/info", "/proc/asound/card0/pcm0p/sub7/status", "/proc/asound/card0/pcm0p/sub7/sw_params", "/proc/asound/card0/pcm0p/sub7/xrun_injection", "/proc/asound/card0/pcm0p/xrun_debug", "/proc/asound/card1/cable#0", "/proc/asound/card1/cable#1", "/proc/asound/card1/id", "/proc/asound/card1/oss_mixer", "/proc/asound/card1/pcm0c/info", "/proc/asound/card1/pcm0c/oss", "/proc/asound/card1/pcm0c/sub0/hw_params", "/proc/asound/card1/pcm0c/sub0/info", "/proc/asound/card1/pcm0c/sub0/status", "/proc/asound/card1/pcm0c/sub0/sw_params", "/proc/asound/card1/pcm0c/sub0/xrun_injection", "/proc/asound/card1/pcm0c/sub1/hw_params", "/proc/asound/card1/pcm0c/sub1/info", "/proc/asound/card1/pcm0c/sub1/status", "/proc/asound/card1/pcm0c/sub1/sw_params", "/proc/asound/card1/pcm0c/sub1/xrun_injection", "/proc/asound/card1/pcm0c/sub2/hw_params", "/proc/asound/card1/pcm0c/sub2/info", "/proc/asound/card1/pcm0c/sub2/status", "/proc/asound/card1/pcm0c/sub2/sw_params", "/proc/asound/card1/pcm0c/sub2/xrun_injection", "/proc/asound/card1/pcm0c/sub3/hw_params", "/proc/asound/card1/pcm0c/sub3/info", "/proc/asound/card1/pcm0c/sub3/status", "/proc/asound/card1/pcm0c/sub3/sw_params", "/proc/asound/card1/pcm0c/sub3/xrun_injection", "/proc/asound/card1/pcm0c/sub4/hw_params", "/proc/asound/card1/pcm0c/sub4/info", "/proc/asound/card1/pcm0c/sub4/status", "/proc/asound/card1/pcm0c/sub4/sw_params", "/proc/asound/card1/pcm0c/sub4/xrun_injection", "/proc/asound/card1/pcm0c/sub5/hw_params", "/proc/asound/card1/pcm0c/sub5/info", "/proc/asound/card1/pcm0c/sub5/status", "/proc/asound/card1/pcm0c/sub5/sw_params", "/proc/asound/card1/pcm0c/sub5/xrun_injection", "/proc/asound/card1/pcm0c/sub6/hw_params", "/proc/asound/card1/pcm0c/sub6/info", "/proc/asound/card1/pcm0c/sub6/status", "/proc/asound/card1/pcm0c/sub6/sw_params", "/proc/asound/card1/pcm0c/sub6/xrun_injection", "/proc/asound/card1/pcm0c/sub7/hw_params", "/proc/asound/card1/pcm0c/sub7/info", "/proc/asound/card1/pcm0c/sub7/status", "/proc/asound/card1/pcm0c/sub7/sw_params", "/proc/asound/card1/pcm0c/sub7/xrun_injection", "/proc/asound/card1/pcm0c/xrun_debug", "/proc/asound/card1/pcm0p/info", "/proc/asound/card1/pcm0p/oss", "/proc/asound/card1/pcm0p/sub0/hw_params", "/proc/asound/card1/pcm0p/sub0/info", "/proc/asound/card1/pcm0p/sub0/status", "/proc/asound/card1/pcm0p/sub0/sw_params", "/proc/asound/card1/pcm0p/sub0/xrun_injection", "/proc/asound/card1/pcm0p/sub1/hw_params", "/proc/asound/card1/pcm0p/sub1/info", "/proc/asound/card1/pcm0p/sub1/status", "/proc/asound/card1/pcm0p/sub1/sw_params", "/proc/asound/card1/pcm0p/sub1/xrun_injection", "/proc/asound/card1/pcm0p/sub2/hw_params", "/proc/asound/card1/pcm0p/sub2/info", "/proc/asound/card1/pcm0p/sub2/status", "/proc/asound/card1/pcm0p/sub2/sw_params", "/proc/asound/card1/pcm0p/sub2/xrun_injection", "/proc/asound/card1/pcm0p/sub3/hw_params", "/proc/asound/card1/pcm0p/sub3/info", "/proc/asound/card1/pcm0p/sub3/status", "/proc/asound/card1/pcm0p/sub3/sw_params", "/proc/asound/card1/pcm0p/sub3/xrun_injection", "/proc/asound/card1/pcm0p/sub4/hw_params", "/proc/asound/card1/pcm0p/sub4/info", "/proc/asound/card1/pcm0p/sub4/status", "/proc/asound/card1/pcm0p/sub4/sw_params", "/proc/asound/card1/pcm0p/sub4/xrun_injection", "/proc/asound/card1/pcm0p/sub5/hw_params", "/proc/asound/card1/pcm0p/sub5/info", "/proc/asound/card1/pcm0p/sub5/status", "/proc/asound/card1/pcm0p/sub5/sw_params", "/proc/asound/card1/pcm0p/sub5/xrun_injection", "/proc/asound/card1/pcm0p/sub6/hw_params", "/proc/asound/card1/pcm0p/sub6/info", "/proc/asound/card1/pcm0p/sub6/status", "/proc/asound/card1/pcm0p/sub6/sw_params", "/proc/asound/card1/pcm0p/sub6/xrun_injection", "/proc/asound/card1/pcm0p/sub7/hw_params", "/proc/asound/card1/pcm0p/sub7/info", "/proc/asound/card1/pcm0p/sub7/status", "/proc/asound/card1/pcm0p/sub7/sw_params", "/proc/asound/card1/pcm0p/sub7/xrun_injection", "/proc/asound/card1/pcm0p/xrun_debug", "/proc/asound/card1/pcm1c/info", "/proc/asound/card1/pcm1c/oss", "/proc/asound/card1/pcm1c/sub0/hw_params", "/proc/asound/card1/pcm1c/sub0/info", "/proc/asound/card1/pcm1c/sub0/status", "/proc/asound/card1/pcm1c/sub0/sw_params", "/proc/asound/card1/pcm1c/sub0/xrun_injection", "/proc/asound/card1/pcm1c/sub1/hw_params", "/proc/asound/card1/pcm1c/sub1/info", "/proc/asound/card1/pcm1c/sub1/status", "/proc/asound/card1/pcm1c/sub1/sw_params", "/proc/asound/card1/pcm1c/sub1/xrun_injection", "/proc/asound/card1/pcm1c/sub2/hw_params", "/proc/asound/card1/pcm1c/sub2/info", "/proc/asound/card1/pcm1c/sub2/status", "/proc/asound/card1/pcm1c/sub2/sw_params", "/proc/asound/card1/pcm1c/sub2/xrun_injection", "/proc/asound/card1/pcm1c/sub3/hw_params", "/proc/asound/card1/pcm1c/sub3/info", "/proc/asound/card1/pcm1c/sub3/status", "/proc/asound/card1/pcm1c/sub3/sw_params", "/proc/asound/card1/pcm1c/sub3/xrun_injection", "/proc/asound/card1/pcm1c/sub4/hw_params", "/proc/asound/card1/pcm1c/sub4/info", "/proc/asound/card1/pcm1c/sub4/status", "/proc/asound/card1/pcm1c/sub4/sw_params", "/proc/asound/card1/pcm1c/sub4/xrun_injection", "/proc/asound/card1/pcm1c/sub5/hw_params", "/proc/asound/card1/pcm1c/sub5/info", "/proc/asound/card1/pcm1c/sub5/status", "/proc/asound/card1/pcm1c/sub5/sw_params", "/proc/asound/card1/pcm1c/sub5/xrun_injection", "/proc/asound/card1/pcm1c/sub6/hw_params", "/proc/asound/card1/pcm1c/sub6/info", "/proc/asound/card1/pcm1c/sub6/status", "/proc/asound/card1/pcm1c/sub6/sw_params", "/proc/asound/card1/pcm1c/sub6/xrun_injection", "/proc/asound/card1/pcm1c/sub7/hw_params", "/proc/asound/card1/pcm1c/sub7/info", "/proc/asound/card1/pcm1c/sub7/status", "/proc/asound/card1/pcm1c/sub7/sw_params", "/proc/asound/card1/pcm1c/sub7/xrun_injection", "/proc/asound/card1/pcm1c/xrun_debug", "/proc/asound/card1/pcm1p/info", "/proc/asound/card1/pcm1p/oss", "/proc/asound/card1/pcm1p/sub0/hw_params", "/proc/asound/card1/pcm1p/sub0/info", "/proc/asound/card1/pcm1p/sub0/status", "/proc/asound/card1/pcm1p/sub0/sw_params", "/proc/asound/card1/pcm1p/sub0/xrun_injection", "/proc/asound/card1/pcm1p/sub1/hw_params", "/proc/asound/card1/pcm1p/sub1/info", "/proc/asound/card1/pcm1p/sub1/status", "/proc/asound/card1/pcm1p/sub1/sw_params", "/proc/asound/card1/pcm1p/sub1/xrun_injection", "/proc/asound/card1/pcm1p/sub2/hw_params", "/proc/asound/card1/pcm1p/sub2/info", "/proc/asound/card1/pcm1p/sub2/status", "/proc/asound/card1/pcm1p/sub2/sw_params", "/proc/asound/card1/pcm1p/sub2/xrun_injection", "/proc/asound/card1/pcm1p/sub3/hw_params", "/proc/asound/card1/pcm1p/sub3/info", "/proc/asound/card1/pcm1p/sub3/status", "/proc/asound/card1/pcm1p/sub3/sw_params", "/proc/asound/card1/pcm1p/sub3/xrun_injection", "/proc/asound/card1/pcm1p/sub4/hw_params", "/proc/asound/card1/pcm1p/sub4/info", "/proc/asound/card1/pcm1p/sub4/status", "/proc/asound/card1/pcm1p/sub4/sw_params", "/proc/asound/card1/pcm1p/sub4/xrun_injection", "/proc/asound/card1/pcm1p/sub5/hw_params", "/proc/asound/card1/pcm1p/sub5/info", "/proc/asound/card1/pcm1p/sub5/status", "/proc/asound/card1/pcm1p/sub5/sw_params", "/proc/asound/card1/pcm1p/sub5/xrun_injection", "/proc/asound/card1/pcm1p/sub6/hw_params", "/proc/asound/card1/pcm1p/sub6/info", "/proc/asound/card1/pcm1p/sub6/status", "/proc/asound/card1/pcm1p/sub6/sw_params", "/proc/asound/card1/pcm1p/sub6/xrun_injection", "/proc/asound/card1/pcm1p/sub7/hw_params", "/proc/asound/card1/pcm1p/sub7/info", "/proc/asound/card1/pcm1p/sub7/status", "/proc/asound/card1/pcm1p/sub7/sw_params", "/proc/asound/card1/pcm1p/sub7/xrun_injection", "/proc/asound/card1/pcm1p/xrun_debug", "/proc/asound/card1/timer_source", "/proc/asound/card2/id", "/proc/asound/card2/midi0", "/proc/asound/card2/midi1", "/proc/asound/card2/midi2", "/proc/asound/card2/midi3", "/proc/asound/card2/oss_mixer", "/proc/asound/cards", "/proc/asound/devices", "/proc/asound/hwdep", "/proc/asound/modules", "/proc/asound/oss/devices", "/proc/asound/oss/sndstat", "/proc/asound/pcm", "/proc/asound/seq/clients", "/proc/asound/seq/drivers", "/proc/asound/seq/oss", "/proc/asound/seq/queues", "/proc/asound/seq/timer", "/proc/asound/timers", "/proc/asound/version", "/proc/bus/input/devices", "/proc/bus/input/handlers", "/proc/bus/pci/00/00.0", "/proc/bus/pci/00/01.0", "/proc/bus/pci/00/01.1", "/proc/bus/pci/00/01.3", "/proc/bus/pci/00/02.0", "/proc/bus/pci/00/03.0", "/proc/bus/pci/00/04.0", "/proc/config.gz", "/proc/dynamic_debug/control", "/proc/fs/cifs/LinuxExtensionsEnabled", "/proc/fs/cifs/LookupCacheEnabled", "/proc/fs/cifs/SecurityFlags", "/proc/fs/cifs/Stats", "/proc/fs/cifs/cifsFYI", "/proc/fs/cifs/dfscache", "/proc/fs/cifs/mount_params", "/proc/fs/cifs/rdma_readwrite_threshold", "/proc/fs/cifs/smbd_keep_alive_interval", "/proc/fs/cifs/smbd_max_fragmented_recv_size", "/proc/fs/cifs/smbd_max_frmr_depth", "/proc/fs/cifs/smbd_max_receive_size", "/proc/fs/cifs/smbd_max_send_size", "/proc/fs/cifs/smbd_receive_credit_max", "/proc/fs/cifs/smbd_send_credit_target", "/proc/fs/cifs/traceSMB", "/proc/fs/jbd2/sda1-8/info", "/proc/fs/jfs/loglevel", "/proc/fs/lockd/nlm_end_grace", "/proc/fs/nfs/exports", "/proc/irq/0/smp_affinity", "/proc/irq/0/smp_affinity_list", "/proc/irq/1/smp_affinity", "/proc/irq/1/smp_affinity_list", "/proc/irq/10/smp_affinity", "/proc/irq/10/smp_affinity_list", "/proc/irq/11/smp_affinity", "/proc/irq/11/smp_affinity_list", "/proc/irq/12/smp_affinity", "/proc/irq/12/smp_affinity_list", "/proc/irq/13/smp_affinity", "/proc/irq/13/smp_affinity_list", "/proc/irq/14/smp_affinity", "/proc/irq/14/smp_affinity_list", "/proc/irq/15/smp_affinity", "/proc/irq/15/smp_affinity_list", "/proc/irq/2/smp_affinity", "/proc/irq/2/smp_affinity_list", "/proc/irq/24/smp_affinity", "/proc/irq/24/smp_affinity_list", "/proc/irq/25/smp_affinity", "/proc/irq/25/smp_affinity_list", "/proc/irq/3/smp_affinity", "/proc/irq/3/smp_affinity_list", "/proc/irq/4/smp_affinity", "/proc/irq/4/smp_affinity_list", "/proc/irq/5/smp_affinity", "/proc/irq/5/smp_affinity_list", "/proc/irq/6/smp_affinity", "/proc/irq/6/smp_affinity_list", "/proc/irq/7/smp_affinity", "/proc/irq/7/smp_affinity_list", "/proc/irq/8/smp_affinity", "/proc/irq/8/smp_affinity_list", "/proc/irq/9/smp_affinity", "/proc/irq/9/smp_affinity_list", "/proc/irq/default_smp_affinity", "/proc/kallsyms", "/proc/mdstat", "/proc/mtrr", "/proc/pressure/cpu", "/proc/pressure/io", "/proc/pressure/irq", "/proc/pressure/memory", "/proc/scsi/device_info", "/proc/scsi/scsi", "/proc/scsi/sg/allow_dio", "/proc/scsi/sg/def_reserved_size", "/proc/self/net/afs/addr_prefs", "/proc/self/net/afs/cells", "/proc/self/net/afs/rootcell", "/proc/self/net/afs/stats", "/proc/self/net/afs/sysname", "/proc/self/net/can/rcvlist_all", "/proc/self/net/can/rcvlist_eff", "/proc/self/net/can/rcvlist_err", "/proc/self/net/can/rcvlist_fil", "/proc/self/net/can/rcvlist_inv", "/proc/self/net/can/rcvlist_sff", "/proc/self/net/can/reset_stats", "/proc/self/net/can/stats", "/proc/self/net/fib_triestat", "/proc/self/net/ip_vs_stats", "/proc/self/net/ip_vs_stats_percpu", "/proc/self/net/kcm_stats", "/proc/self/net/netstat", "/proc/self/net/rpc/auth.rpcsec.context/channel", "/proc/self/net/rpc/auth.rpcsec.context/flush", "/proc/self/net/rpc/auth.rpcsec.init/channel", "/proc/self/net/rpc/auth.rpcsec.init/flush", "/proc/self/net/rpc/auth.unix.gid/channel", "/proc/self/net/rpc/auth.unix.gid/content", "/proc/self/net/rpc/auth.unix.gid/flush", "/proc/self/net/rpc/auth.unix.ip/channel", "/proc/self/net/rpc/auth.unix.ip/content", "/proc/self/net/rpc/auth.unix.ip/flush", "/proc/self/net/rpc/gss_krb5_enctypes", "/proc/self/net/rpc/nfs", "/proc/self/net/rpc/nfs4.idtoname/channel", "/proc/self/net/rpc/nfs4.idtoname/content", "/proc/self/net/rpc/nfs4.idtoname/flush", "/proc/self/net/rpc/nfs4.nametoid/channel", "/proc/self/net/rpc/nfs4.nametoid/content", "/proc/self/net/rpc/nfs4.nametoid/flush", "/proc/self/net/rpc/nfsd", "/proc/self/net/rpc/nfsd.export/channel", "/proc/self/net/rpc/nfsd.export/content", "/proc/self/net/rpc/nfsd.export/flush", "/proc/self/net/rpc/nfsd.fh/channel", "/proc/self/net/rpc/nfsd.fh/content", "/proc/self/net/rpc/nfsd.fh/flush", "/proc/self/net/rpc/use-gss-proxy", "/proc/self/net/rt6_stats", "/proc/self/net/rxrpc/stats", "/proc/self/net/sctp/snmp", "/proc/self/net/snmp", "/proc/self/net/snmp6", "/proc/self/net/sockstat", "/proc/self/net/sockstat6", "/proc/self/net/tls_stat", "/proc/self/net/xfrm_stat", "/proc/thread-self/net/afs/addr_prefs", "/proc/thread-self/net/afs/cells", "/proc/thread-self/net/afs/rootcell", "/proc/thread-self/net/afs/stats", "/proc/thread-self/net/afs/sysname", "/proc/thread-self/net/can/rcvlist_all", "/proc/thread-self/net/can/rcvlist_eff", "/proc/thread-self/net/can/rcvlist_err", "/proc/thread-self/net/can/rcvlist_fil", "/proc/thread-self/net/can/rcvlist_inv", "/proc/thread-self/net/can/rcvlist_sff", "/proc/thread-self/net/can/reset_stats", "/proc/thread-self/net/can/stats", "/proc/thread-self/net/fib_triestat", "/proc/thread-self/net/ip_vs_stats", "/proc/thread-self/net/ip_vs_stats_percpu", "/proc/thread-self/net/kcm_stats", "/proc/thread-self/net/netstat", "/proc/thread-self/net/rpc/auth.rpcsec.context/channel", "/proc/thread-self/net/rpc/auth.rpcsec.context/flush", "/proc/thread-self/net/rpc/auth.rpcsec.init/channel", "/proc/thread-self/net/rpc/auth.rpcsec.init/flush", "/proc/thread-self/net/rpc/auth.unix.gid/channel", "/proc/thread-self/net/rpc/auth.unix.gid/content", "/proc/thread-self/net/rpc/auth.unix.gid/flush", "/proc/thread-self/net/rpc/auth.unix.ip/channel", "/proc/thread-self/net/rpc/auth.unix.ip/content", "/proc/thread-self/net/rpc/auth.unix.ip/flush", "/proc/thread-self/net/rpc/gss_krb5_enctypes", "/proc/thread-self/net/rpc/nfs", "/proc/thread-self/net/rpc/nfs4.idtoname/channel", "/proc/thread-self/net/rpc/nfs4.idtoname/content", "/proc/thread-self/net/rpc/nfs4.idtoname/flush", "/proc/thread-self/net/rpc/nfs4.nametoid/channel", "/proc/thread-self/net/rpc/nfs4.nametoid/content", "/proc/thread-self/net/rpc/nfs4.nametoid/flush", "/proc/thread-self/net/rpc/nfsd", "/proc/thread-self/net/rpc/nfsd.export/channel", "/proc/thread-self/net/rpc/nfsd.export/content", "/proc/thread-self/net/rpc/nfsd.export/flush", "/proc/thread-self/net/rpc/nfsd.fh/channel", "/proc/thread-self/net/rpc/nfsd.fh/content", "/proc/thread-self/net/rpc/nfsd.fh/flush", "/proc/thread-self/net/rpc/use-gss-proxy", "/proc/thread-self/net/rt6_stats", "/proc/thread-self/net/rxrpc/stats", "/proc/thread-self/net/sctp/snmp", "/proc/thread-self/net/snmp", "/proc/thread-self/net/snmp6", "/proc/thread-self/net/sockstat", "/proc/thread-self/net/sockstat6", "/proc/thread-self/net/tls_stat", "/proc/thread-self/net/xfrm_stat"
openat$auto_proc_reg(fd const[AT_FDCWD], file ptr[in, string[auto_proc_reg_files]], flags flags[open_flags], mode const[0]) fd_auto_proc_reg (automatic)
read$auto_proc_reg(fd fd_auto_proc_reg, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)
write$auto_proc_reg(fd fd_auto_proc_reg, buf ptr[in, array[int8]], len bytesize[buf]) (automatic)
mmap$auto_proc_reg(addr vma, len len[addr], prot flags[mmap_prot], flags flags[mmap_flags], fd fd_auto_proc_reg, offset fileoff) (automatic)
ioctl$auto_proc_reg(fd fd_auto_proc_reg, cmd intptr, arg ptr[in, array[int8]]) (automatic)

# fops: open:proc_setgroups_open read:seq_read write:proc_setgroups_write
resource fd_auto_proc_setgroups[fd]
auto_proc_setgroups_files = "/proc/self/setgroups", "/proc/thread-self/setgroups"
openat$auto_proc_setgroups(fd const[AT_FDCWD], file ptr[in, string[auto_proc_setgroups_files]], flags flags[open_flags], mode const[0]) fd_auto_proc_setgroups (automatic)
read$auto_proc_setgroups(fd fd_auto_proc_setgroups, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)
write$auto_proc_setgroups(fd fd_auto_proc_setgroups, buf ptr[in, array[int8]], len bytesize[buf]) (automatic)

# fops: open:proc_single_open read:seq_read
resource fd_auto_proc_single[fd]
auto_proc_single_files = "/proc/self/arch_status", "/proc/self/cgroup", "/proc/self/cpuset", "/proc/self/io", "/proc/self/ksm_merging_pages", "/proc/self/ksm_stat", "/proc/self/limits", "/proc/self/oom_score", "/proc/self/personality", "/proc/self/schedstat", "/proc/self/stack", "/proc/self/stat", "/proc/self/statm", "/proc/self/status", "/proc/self/syscall", "/proc/self/wchan", "/proc/thread-self/arch_status", "/proc/thread-self/cgroup", "/proc/thread-self/cpuset", "/proc/thread-self/io", "/proc/thread-self/ksm_merging_pages", "/proc/thread-self/ksm_stat", "/proc/thread-self/limits", "/proc/thread-self/oom_score", "/proc/thread-self/personality", "/proc/thread-self/schedstat", "/proc/thread-self/stack", "/proc/thread-self/stat", "/proc/thread-self/statm", "/proc/thread-self/status", "/proc/thread-self/syscall", "/proc/thread-self/wchan"
openat$auto_proc_single(fd const[AT_FDCWD], file ptr[in, string[auto_proc_single_files]], flags flags[open_flags], mode const[0]) fd_auto_proc_single (automatic)
read$auto_proc_single(fd fd_auto_proc_single, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)

# fops: open:proc_sys_open read:proc_sys_read write:proc_sys_write
resource fd_auto_proc_sys[fd]
auto_proc_sys_files = "/proc/sys/abi/vsyscall32", "/proc/sys/debug/exception-trace", "/proc/sys/dev/cdrom/autoclose", "/proc/sys/dev/cdrom/autoeject", "/proc/sys/dev/cdrom/check_media", "/proc/sys/dev/cdrom/debug", "/proc/sys/dev/cdrom/lock", "/proc/sys/dev/hpet/max-user-freq", "/proc/sys/dev/i915/oa_max_sample_rate", "/proc/sys/dev/i915/perf_stream_paranoid", "/proc/sys/dev/parport/default/spintime", "/proc/sys/dev/parport/default/timeslice", "/proc/sys/dev/raid/speed_limit_max", "/proc/sys/dev/raid/speed_limit_min", "/proc/sys/dev/scsi/logging_level", "/proc/sys/dev/tty/ldisc_autoload", "/proc/sys/dev/tty/legacy_tiocsti", "/proc/sys/fs/aio-max-nr", "/proc/sys/fs/dentry-negative", "/proc/sys/fs/dir-notify-enable", "/proc/sys/fs/epoll/max_user_watches", "/proc/sys/fs/fanotify/max_queued_events", "/proc/sys/fs/fanotify/max_user_groups", "/proc/sys/fs/fanotify/max_user_marks", "/proc/sys/fs/file-max", "/proc/sys/fs/inotify/max_queued_events", "/proc/sys/fs/inotify/max_user_instances", "/proc/sys/fs/inotify/max_user_watches", "/proc/sys/fs/lease-break-time", "/proc/sys/fs/leases-enable", "/proc/sys/fs/mount-max", "/proc/sys/fs/mqueue/msg_default", "/proc/sys/fs/mqueue/msg_max", "/proc/sys/fs/mqueue/msgsize_default", "/proc/sys/fs/mqueue/msgsize_max", "/proc/sys/fs/mqueue/queues_max", "/proc/sys/fs/nfs/idmap_cache_timeout", "/proc/sys/fs/nfs/nfs_callback_tcpport", "/proc/sys/fs/nfs/nfs_congestion_kb", "/proc/sys/fs/nfs/nfs_mountpoint_timeout", "/proc/sys/fs/nfs/nlm_grace_period", "/proc/sys/fs/nfs/nlm_tcpport", "/proc/sys/fs/nfs/nlm_timeout", "/proc/sys/fs/nfs/nlm_udpport", "/proc/sys/fs/nfs/nsm_local_state", "/proc/sys/fs/nfs/nsm_use_hostnames", "/proc/sys/fs/nr_open", "/proc/sys/fs/ocfs2/nm/hb_ctl_path", "/proc/sys/fs/overflowgid", "/proc/sys/fs/overflowuid", "/proc/sys/fs/pipe-max-size", "/proc/sys/fs/pipe-user-pages-hard", "/proc/sys/fs/pipe-user-pages-soft", "/proc/sys/fs/protected_fifos", "/proc/sys/fs/protected_hardlinks", "/proc/sys/fs/protected_regular", "/proc/sys/fs/protected_symlinks", "/proc/sys/fs/suid_dumpable", "/proc/sys/fs/verity/require_signatures", "/proc/sys/fs/xfs/error_level", "/proc/sys/fs/xfs/filestream_centisecs", "/proc/sys/fs/xfs/inherit_noatime", "/proc/sys/fs/xfs/inherit_nodefrag", "/proc/sys/fs/xfs/inherit_nodump", "/proc/sys/fs/xfs/inherit_nosymlinks", "/proc/sys/fs/xfs/inherit_sync", "/proc/sys/fs/xfs/irix_sgid_inherit", "/proc/sys/fs/xfs/irix_symlink_mode", "/proc/sys/fs/xfs/panic_mask", "/proc/sys/fs/xfs/rotorstep", "/proc/sys/fs/xfs/speculative_cow_prealloc_lifetime", "/proc/sys/fs/xfs/speculative_prealloc_lifetime", "/proc/sys/fs/xfs/stats_clear", "/proc/sys/fs/xfs/xfssyncd_centisecs", "/proc/sys/kernel/acct", "/proc/sys/kernel/acpi_video_flags", "/proc/sys/kernel/auto_msgmni", "/proc/sys/kernel/bpf_stats_enabled", "/proc/sys/kernel/cad_pid", "/proc/sys/kernel/core_file_note_size_limit", "/proc/sys/kernel/core_pattern", "/proc/sys/kernel/core_pipe_limit", "/proc/sys/kernel/core_uses_pid", "/proc/sys/kernel/ctrl-alt-del", "/proc/sys/kernel/dmesg_restrict", "/proc/sys/kernel/domainname", "/proc/sys/kernel/firmware_config/force_sysfs_fallback", "/proc/sys/kernel/firmware_config/ignore_sysfs_fallback", "/proc/sys/kernel/ftrace_dump_on_oops", "/proc/sys/kernel/hardlockup_all_cpu_backtrace", "/proc/sys/kernel/hardlockup_panic", "/proc/sys/kernel/hostname", "/proc/sys/kernel/hotplug", "/proc/sys/kernel/hung_task_all_cpu_backtrace", "/proc/sys/kernel/hung_task_check_count", "/proc/sys/kernel/hung_task_check_interval_secs", "/proc/sys/kernel/hung_task_panic", "/proc/sys/kernel/hung_task_timeout_secs", "/proc/sys/kernel/hung_task_warnings", "/proc/sys/kernel/io_delay_type", "/proc/sys/kernel/io_uring_disabled", "/proc/sys/kernel/io_uring_group", "/proc/sys/kernel/kexec_load_disabled", "/proc/sys/kernel/kexec_load_limit_panic", "/proc/sys/kernel/kexec_load_limit_reboot", "/proc/sys/kernel/keys/gc_delay", "/proc/sys/kernel/keys/maxbytes", "/proc/sys/kernel/keys/maxkeys", "/proc/sys/kernel/keys/persistent_keyring_expiry", "/proc/sys/kernel/keys/root_maxbytes", "/proc/sys/kernel/keys/root_maxkeys", "/proc/sys/kernel/kptr_restrict", "/proc/sys/kernel/max_lock_depth", "/proc/sys/kernel/max_rcu_stall_to_panic", "/proc/sys/kernel/modprobe", "/proc/sys/kernel/modules_disabled", "/proc/sys/kernel/msg_next_id", "/proc/sys/kernel/msgmax", "/proc/sys/kernel/msgmnb", "/proc/sys/kernel/msgmni", "/proc/sys/kernel/nmi_watchdog", "/proc/sys/kernel/ns_last_pid", "/proc/sys/kernel/numa_balancing", "/proc/sys/kernel/numa_balancing_promote_rate_limit_MBps", "/proc/sys/kernel/oops_all_cpu_backtrace", "/proc/sys/kernel/oops_limit", "/proc/sys/kernel/overflowgid", "/proc/sys/kernel/overflowuid", "/proc/sys/kernel/panic", "/proc/sys/kernel/panic_on_io_nmi", "/proc/sys/kernel/panic_on_oops", "/proc/sys/kernel/panic_on_rcu_stall", "/proc/sys/kernel/panic_on_unrecovered_nmi", "/proc/sys/kernel/panic_on_warn", "/proc/sys/kernel/panic_print", "/proc/sys/kernel/perf_cpu_time_max_percent", "/proc/sys/kernel/perf_event_max_contexts_per_stack", "/proc/sys/kernel/perf_event_max_sample_rate", "/proc/sys/kernel/perf_event_max_stack", "/proc/sys/kernel/perf_event_mlock_kb", "/proc/sys/kernel/perf_event_paranoid", "/proc/sys/kernel/pid_max", "/proc/sys/kernel/poweroff_cmd", "/proc/sys/kernel/print-fatal-signals", "/proc/sys/kernel/printk", "/proc/sys/kernel/printk_delay", "/proc/sys/kernel/printk_devkmsg", "/proc/sys/kernel/printk_ratelimit", "/proc/sys/kernel/printk_ratelimit_burst", "/proc/sys/kernel/prove_locking", "/proc/sys/kernel/pty/max", "/proc/sys/kernel/pty/reserve", "/proc/sys/kernel/random/urandom_min_reseed_secs", "/proc/sys/kernel/random/write_wakeup_threshold", "/proc/sys/kernel/randomize_va_space", "/proc/sys/kernel/real-root-dev", "/proc/sys/kernel/sched_cfs_bandwidth_slice_us", "/proc/sys/kernel/sched_deadline_period_max_us", "/proc/sys/kernel/sched_deadline_period_min_us", "/proc/sys/kernel/sched_rr_timeslice_ms", "/proc/sys/kernel/sched_rt_period_us", "/proc/sys/kernel/sched_rt_runtime_us", "/proc/sys/kernel/sched_schedstats", "/proc/sys/kernel/seccomp/actions_logged", "/proc/sys/kernel/sem", "/proc/sys/kernel/sem_next_id", "/proc/sys/kernel/shm_next_id", "/proc/sys/kernel/shm_rmid_forced", "/proc/sys/kernel/shmall", "/proc/sys/kernel/shmmax", "/proc/sys/kernel/shmmni", "/proc/sys/kernel/soft_watchdog", "/proc/sys/kernel/softlockup_all_cpu_backtrace", "/proc/sys/kernel/softlockup_panic", "/proc/sys/kernel/split_lock_mitigate", "/proc/sys/kernel/sysctl_writes_strict", "/proc/sys/kernel/tainted", "/proc/sys/kernel/task_delayacct", "/proc/sys/kernel/threads-max", "/proc/sys/kernel/timer_migration", "/proc/sys/kernel/traceoff_on_warning", "/proc/sys/kernel/tracepoint_printk", "/proc/sys/kernel/unknown_nmi_panic", "/proc/sys/kernel/unprivileged_bpf_disabled", "/proc/sys/kernel/usermodehelper/bset", "/proc/sys/kernel/usermodehelper/inheritable", "/proc/sys/kernel/warn_limit", "/proc/sys/kernel/watchdog", "/proc/sys/kernel/watchdog_cpumask", "/proc/sys/kernel/watchdog_thresh", "/proc/sys/kernel/yama/ptrace_scope", "/proc/sys/net/bridge/bridge-nf-call-arptables", "/proc/sys/net/bridge/bridge-nf-call-ip6tables", "/proc/sys/net/bridge/bridge-nf-call-iptables", "/proc/sys/net/bridge/bridge-nf-filter-pppoe-tagged", "/proc/sys/net/bridge/bridge-nf-filter-vlan-tagged", "/proc/sys/net/bridge/bridge-nf-pass-vlan-input-dev", "/proc/sys/net/core/optmem_max", "/proc/sys/net/core/rps_default_mask", "/proc/sys/net/core/somaxconn", "/proc/sys/net/core/tstamp_allow_data", "/proc/sys/net/core/txrehash", "/proc/sys/net/core/xfrm_acq_expires", "/proc/sys/net/core/xfrm_aevent_etime", "/proc/sys/net/core/xfrm_aevent_rseqth", "/proc/sys/net/core/xfrm_larval_drop", "/proc/sys/net/ieee802154/6lowpan/6lowpanfrag_high_thresh", "/proc/sys/net/ieee802154/6lowpan/6lowpanfrag_low_thresh", "/proc/sys/net/ieee802154/6lowpan/6lowpanfrag_time", "/proc/sys/net/ipv4/conf/all/accept_local", "/proc/sys/net/ipv4/conf/all/accept_redirects", "/proc/sys/net/ipv4/conf/all/accept_source_route", "/proc/sys/net/ipv4/conf/all/arp_accept", "/proc/sys/net/ipv4/conf/all/arp_announce", "/proc/sys/net/ipv4/conf/all/arp_evict_nocarrier", "/proc/sys/net/ipv4/conf/all/arp_filter", "/proc/sys/net/ipv4/conf/all/arp_ignore", "/proc/sys/net/ipv4/conf/all/arp_notify", "/proc/sys/net/ipv4/conf/all/bc_forwarding", "/proc/sys/net/ipv4/conf/all/bootp_relay", "/proc/sys/net/ipv4/conf/all/disable_policy", "/proc/sys/net/ipv4/conf/all/disable_xfrm", "/proc/sys/net/ipv4/conf/all/drop_gratuitous_arp", "/proc/sys/net/ipv4/conf/all/drop_unicast_in_l2_multicast", "/proc/sys/net/ipv4/conf/all/force_igmp_version", "/proc/sys/net/ipv4/conf/all/forwarding", "/proc/sys/net/ipv4/conf/all/igmpv2_unsolicited_report_interval", "/proc/sys/net/ipv4/conf/all/igmpv3_unsolicited_report_interval", "/proc/sys/net/ipv4/conf/all/ignore_routes_with_linkdown", "/proc/sys/net/ipv4/conf/all/log_martians", "/proc/sys/net/ipv4/conf/all/medium_id", "/proc/sys/net/ipv4/conf/all/promote_secondaries", "/proc/sys/net/ipv4/conf/all/proxy_arp", "/proc/sys/net/ipv4/conf/all/proxy_arp_pvlan", "/proc/sys/net/ipv4/conf/all/route_localnet", "/proc/sys/net/ipv4/conf/all/rp_filter", "/proc/sys/net/ipv4/conf/all/secure_redirects", "/proc/sys/net/ipv4/conf/all/send_redirects", "/proc/sys/net/ipv4/conf/all/shared_media", "/proc/sys/net/ipv4/conf/all/src_valid_mark", "/proc/sys/net/ipv4/conf/all/tag", "/proc/sys/net/ipv4/conf/default/accept_local", "/proc/sys/net/ipv4/conf/default/accept_redirects", "/proc/sys/net/ipv4/conf/default/accept_source_route", "/proc/sys/net/ipv4/conf/default/arp_accept", "/proc/sys/net/ipv4/conf/default/arp_announce", "/proc/sys/net/ipv4/conf/default/arp_evict_nocarrier", "/proc/sys/net/ipv4/conf/default/arp_filter", "/proc/sys/net/ipv4/conf/default/arp_ignore", "/proc/sys/net/ipv4/conf/default/arp_notify", "/proc/sys/net/ipv4/conf/default/bc_forwarding", "/proc/sys/net/ipv4/conf/default/bootp_relay", "/proc/sys/net/ipv4/conf/default/disable_policy", "/proc/sys/net/ipv4/conf/default/disable_xfrm", "/proc/sys/net/ipv4/conf/default/drop_gratuitous_arp", "/proc/sys/net/ipv4/conf/default/drop_unicast_in_l2_multicast", "/proc/sys/net/ipv4/conf/default/force_igmp_version", "/proc/sys/net/ipv4/conf/default/forwarding", "/proc/sys/net/ipv4/conf/default/igmpv2_unsolicited_report_interval", "/proc/sys/net/ipv4/conf/default/igmpv3_unsolicited_report_interval", "/proc/sys/net/ipv4/conf/default/ignore_routes_with_linkdown", "/proc/sys/net/ipv4/conf/default/log_martians", "/proc/sys/net/ipv4/conf/default/medium_id", "/proc/sys/net/ipv4/conf/default/promote_secondaries", "/proc/sys/net/ipv4/conf/default/proxy_arp", "/proc/sys/net/ipv4/conf/default/proxy_arp_pvlan", "/proc/sys/net/ipv4/conf/default/route_localnet", "/proc/sys/net/ipv4/conf/default/rp_filter", "/proc/sys/net/ipv4/conf/default/secure_redirects", "/proc/sys/net/ipv4/conf/default/send_redirects", "/proc/sys/net/ipv4/conf/default/shared_media", "/proc/sys/net/ipv4/conf/default/src_valid_mark", "/proc/sys/net/ipv4/conf/default/tag", "/proc/sys/net/ipv4/conf/erspan0/accept_local", "/proc/sys/net/ipv4/conf/erspan0/accept_redirects", "/proc/sys/net/ipv4/conf/erspan0/accept_source_route", "/proc/sys/net/ipv4/conf/erspan0/arp_accept", "/proc/sys/net/ipv4/conf/erspan0/arp_announce", "/proc/sys/net/ipv4/conf/erspan0/arp_evict_nocarrier", "/proc/sys/net/ipv4/conf/erspan0/arp_filter", "/proc/sys/net/ipv4/conf/erspan0/arp_ignore", "/proc/sys/net/ipv4/conf/erspan0/arp_notify", "/proc/sys/net/ipv4/conf/erspan0/bc_forwarding", "/proc/sys/net/ipv4/conf/erspan0/bootp_relay", "/proc/sys/net/ipv4/conf/erspan0/disable_policy", "/proc/sys/net/ipv4/conf/erspan0/disable_xfrm", "/proc/sys/net/ipv4/conf/erspan0/drop_gratuitous_arp", "/proc/sys/net/ipv4/conf/erspan0/drop_unicast_in_l2_multicast", "/proc/sys/net/ipv4/conf/erspan0/force_igmp_version", "/proc/sys/net/ipv4/conf/erspan0/forwarding", "/proc/sys/net/ipv4/conf/erspan0/igmpv2_unsolicited_report_interval", "/proc/sys/net/ipv4/conf/erspan0/igmpv3_unsolicited_report_interval", "/proc/sys/net/ipv4/conf/erspan0/ignore_routes_with_linkdown", "/proc/sys/net/ipv4/conf/erspan0/log_martians", "/proc/sys/net/ipv4/conf/erspan0/medium_id", "/proc/sys/net/ipv4/conf/erspan0/promote_secondaries", "/proc/sys/net/ipv4/conf/erspan0/proxy_arp", "/proc/sys/net/ipv4/conf/erspan0/proxy_arp_pvlan", "/proc/sys/net/ipv4/conf/erspan0/route_localnet", "/proc/sys/net/ipv4/conf/erspan0/rp_filter", "/proc/sys/net/ipv4/conf/erspan0/secure_redirects", "/proc/sys/net/ipv4/conf/erspan0/send_redirects", "/proc/sys/net/ipv4/conf/erspan0/shared_media", "/proc/sys/net/ipv4/conf/erspan0/src_valid_mark", "/proc/sys/net/ipv4/conf/erspan0/tag", "/proc/sys/net/ipv4/conf/gre0/accept_local", "/proc/sys/net/ipv4/conf/gre0/accept_redirects", "/proc/sys/net/ipv4/conf/gre0/accept_source_route", "/proc/sys/net/ipv4/conf/gre0/arp_accept", "/proc/sys/net/ipv4/conf/gre0/arp_announce", "/proc/sys/net/ipv4/conf/gre0/arp_evict_nocarrier", "/proc/sys/net/ipv4/conf/gre0/arp_filter", "/proc/sys/net/ipv4/conf/gre0/arp_ignore", "/proc/sys/net/ipv4/conf/gre0/arp_notify", "/proc/sys/net/ipv4/conf/gre0/bc_forwarding", "/proc/sys/net/ipv4/conf/gre0/bootp_relay", "/proc/sys/net/ipv4/conf/gre0/disable_policy", "/proc/sys/net/ipv4/conf/gre0/disable_xfrm", "/proc/sys/net/ipv4/conf/gre0/drop_gratuitous_arp", "/proc/sys/net/ipv4/conf/gre0/drop_unicast_in_l2_multicast", "/proc/sys/net/ipv4/conf/gre0/force_igmp_version", "/proc/sys/net/ipv4/conf/gre0/forwarding", "/proc/sys/net/ipv4/conf/gre0/igmpv2_unsolicited_report_interval", "/proc/sys/net/ipv4/conf/gre0/igmpv3_unsolicited_report_interval", "/proc/sys/net/ipv4/conf/gre0/ignore_routes_with_linkdown", "/proc/sys/net/ipv4/conf/gre0/log_martians", "/proc/sys/net/ipv4/conf/gre0/medium_id", "/proc/sys/net/ipv4/conf/gre0/promote_secondaries", "/proc/sys/net/ipv4/conf/gre0/proxy_arp", "/proc/sys/net/ipv4/conf/gre0/proxy_arp_pvlan", "/proc/sys/net/ipv4/conf/gre0/route_localnet", "/proc/sys/net/ipv4/conf/gre0/rp_filter", "/proc/sys/net/ipv4/conf/gre0/secure_redirects", "/proc/sys/net/ipv4/conf/gre0/send_redirects", "/proc/sys/net/ipv4/conf/gre0/shared_media", "/proc/sys/net/ipv4/conf/gre0/src_valid_mark", "/proc/sys/net/ipv4/conf/gre0/tag", "/proc/sys/net/ipv4/conf/gretap0/accept_local", "/proc/sys/net/ipv4/conf/gretap0/accept_redirects", "/proc/sys/net/ipv4/conf/gretap0/accept_source_route", "/proc/sys/net/ipv4/conf/gretap0/arp_accept", "/proc/sys/net/ipv4/conf/gretap0/arp_announce", "/proc/sys/net/ipv4/conf/gretap0/arp_evict_nocarrier", "/proc/sys/net/ipv4/conf/gretap0/arp_filter", "/proc/sys/net/ipv4/conf/gretap0/arp_ignore", "/proc/sys/net/ipv4/conf/gretap0/arp_notify", "/proc/sys/net/ipv4/conf/gretap0/bc_forwarding", "/proc/sys/net/ipv4/conf/gretap0/bootp_relay", "/proc/sys/net/ipv4/conf/gretap0/disable_policy", "/proc/sys/net/ipv4/conf/gretap0/disable_xfrm", "/proc/sys/net/ipv4/conf/gretap0/drop_gratuitous_arp", "/proc/sys/net/ipv4/conf/gretap0/drop_unicast_in_l2_multicast", "/proc/sys/net/ipv4/conf/gretap0/force_igmp_version", "/proc/sys/net/ipv4/conf/gretap0/forwarding", "/proc/sys/net/ipv4/conf/gretap0/igmpv2_unsolicited_report_interval", "/proc/sys/net/ipv4/conf/gretap0/igmpv3_unsolicited_report_interval", "/proc/sys/net/ipv4/conf/gretap0/ignore_routes_with_linkdown", "/proc/sys/net/ipv4/conf/gretap0/log_martians", "/proc/sys/net/ipv4/conf/gretap0/medium_id", "/proc/sys/net/ipv4/conf/gretap0/promote_secondaries", "/proc/sys/net/ipv4/conf/gretap0/proxy_arp", "/proc/sys/net/ipv4/conf/gretap0/proxy_arp_pvlan", "/proc/sys/net/ipv4/conf/gretap0/route_localnet", "/proc/sys/net/ipv4/conf/gretap0/rp_filter", "/proc/sys/net/ipv4/conf/gretap0/secure_redirects", "/proc/sys/net/ipv4/conf/gretap0/send_redirects", "/proc/sys/net/ipv4/conf/gretap0/shared_media", "/proc/sys/net/ipv4/conf/gretap0/src_valid_mark", "/proc/sys/net/ipv4/conf/gretap0/tag", "/proc/sys/net/ipv4/conf/ip6_vti0/accept_local", "/proc/sys/net/ipv4/conf/ip6_vti0/accept_redirects", "/proc/sys/net/ipv4/conf/ip6_vti0/accept_source_route", "/proc/sys/net/ipv4/conf/ip6_vti0/arp_accept", "/proc/sys/net/ipv4/conf/ip6_vti0/arp_announce", "/proc/sys/net/ipv4/conf/ip6_vti0/arp_evict_nocarrier", "/proc/sys/net/ipv4/conf/ip6_vti0/arp_filter", "/proc/sys/net/ipv4/conf/ip6_vti0/arp_ignore", "/proc/sys/net/ipv4/conf/ip6_vti0/arp_notify", "/proc/sys/net/ipv4/conf/ip6_vti0/bc_forwarding", "/proc/sys/net/ipv4/conf/ip6_vti0/bootp_relay", "/proc/sys/net/ipv4/conf/ip6_vti0/disable_policy", "/proc/sys/net/ipv4/conf/ip6_vti0/disable_xfrm", "/proc/sys/net/ipv4/conf/ip6_vti0/drop_gratuitous_arp", "/proc/sys/net/ipv4/conf/ip6_vti0/drop_unicast_in_l2_multicast", "/proc/sys/net/ipv4/conf/ip6_vti0/force_igmp_version", "/proc/sys/net/ipv4/conf/ip6_vti0/forwarding", "/proc/sys/net/ipv4/conf/ip6_vti0/igmpv2_unsolicited_report_interval", "/proc/sys/net/ipv4/conf/ip6_vti0/igmpv3_unsolicited_report_interval", "/proc/sys/net/ipv4/conf/ip6_vti0/ignore_routes_with_linkdown", "/proc/sys/net/ipv4/conf/ip6_vti0/log_martians", "/proc/sys/net/ipv4/conf/ip6_vti0/medium_id", "/proc/sys/net/ipv4/conf/ip6_vti0/promote_secondaries", "/proc/sys/net/ipv4/conf/ip6_vti0/proxy_arp", "/proc/sys/net/ipv4/conf/ip6_vti0/proxy_arp_pvlan", "/proc/sys/net/ipv4/conf/ip6_vti0/route_localnet", "/proc/sys/net/ipv4/conf/ip6_vti0/rp_filter", "/proc/sys/net/ipv4/conf/ip6_vti0/secure_redirects", "/proc/sys/net/ipv4/conf/ip6_vti0/send_redirects", "/proc/sys/net/ipv4/conf/ip6_vti0/shared_media", "/proc/sys/net/ipv4/conf/ip6_vti0/src_valid_mark", "/proc/sys/net/ipv4/conf/ip6_vti0/tag", "/proc/sys/net/ipv4/conf/ip6gre0/accept_local", "/proc/sys/net/ipv4/conf/ip6gre0/accept_redirects", "/proc/sys/net/ipv4/conf/ip6gre0/accept_source_route", "/proc/sys/net/ipv4/conf/ip6gre0/arp_accept", "/proc/sys/net/ipv4/conf/ip6gre0/arp_announce", "/proc/sys/net/ipv4/conf/ip6gre0/arp_evict_nocarrier", "/proc/sys/net/ipv4/conf/ip6gre0/arp_filter", "/proc/sys/net/ipv4/conf/ip6gre0/arp_ignore", "/proc/sys/net/ipv4/conf/ip6gre0/arp_notify", "/proc/sys/net/ipv4/conf/ip6gre0/bc_forwarding", "/proc/sys/net/ipv4/conf/ip6gre0/bootp_relay", "/proc/sys/net/ipv4/conf/ip6gre0/disable_policy", "/proc/sys/net/ipv4/conf/ip6gre0/disable_xfrm", "/proc/sys/net/ipv4/conf/ip6gre0/drop_gratuitous_arp", "/proc/sys/net/ipv4/conf/ip6gre0/drop_unicast_in_l2_multicast", "/proc/sys/net/ipv4/conf/ip6gre0/force_igmp_version", "/proc/sys/net/ipv4/conf/ip6gre0/forwarding", "/proc/sys/net/ipv4/conf/ip6gre0/igmpv2_unsolicited_report_interval", "/proc/sys/net/ipv4/conf/ip6gre0/igmpv3_unsolicited_report_interval", "/proc/sys/net/ipv4/conf/ip6gre0/ignore_routes_with_linkdown", "/proc/sys/net/ipv4/conf/ip6gre0/log_martians", "/proc/sys/net/ipv4/conf/ip6gre0/medium_id", "/proc/sys/net/ipv4/conf/ip6gre0/promote_secondaries", "/proc/sys/net/ipv4/conf/ip6gre0/proxy_arp", "/proc/sys/net/ipv4/conf/ip6gre0/proxy_arp_pvlan", "/proc/sys/net/ipv4/conf/ip6gre0/route_localnet", "/proc/sys/net/ipv4/conf/ip6gre0/rp_filter", "/proc/sys/net/ipv4/conf/ip6gre0/secure_redirects", "/proc/sys/net/ipv4/conf/ip6gre0/send_redirects", "/proc/sys/net/ipv4/conf/ip6gre0/shared_media", "/proc/sys/net/ipv4/conf/ip6gre0/src_valid_mark", "/proc/sys/net/ipv4/conf/ip6gre0/tag", "/proc/sys/net/ipv4/conf/ip6tnl0/accept_local", "/proc/sys/net/ipv4/conf/ip6tnl0/accept_redirects", "/proc/sys/net/ipv4/conf/ip6tnl0/accept_source_route", "/proc/sys/net/ipv4/conf/ip6tnl0/arp_accept", "/proc/sys/net/ipv4/conf/ip6tnl0/arp_announce", "/proc/sys/net/ipv4/conf/ip6tnl0/arp_evict_nocarrier", "/proc/sys/net/ipv4/conf/ip6tnl0/arp_filter", "/proc/sys/net/ipv4/conf/ip6tnl0/arp_ignore", "/proc/sys/net/ipv4/conf/ip6tnl0/arp_notify", "/proc/sys/net/ipv4/conf/ip6tnl0/bc_forwarding", "/proc/sys/net/ipv4/conf/ip6tnl0/bootp_relay", "/proc/sys/net/ipv4/conf/ip6tnl0/disable_policy", "/proc/sys/net/ipv4/conf/ip6tnl0/disable_xfrm", "/proc/sys/net/ipv4/conf/ip6tnl0/drop_gratuitous_arp", "/proc/sys/net/ipv4/conf/ip6tnl0/drop_unicast_in_l2_multicast", "/proc/sys/net/ipv4/conf/ip6tnl0/force_igmp_version", "/proc/sys/net/ipv4/conf/ip6tnl0/forwarding", "/proc/sys/net/ipv4/conf/ip6tnl0/igmpv2_unsolicited_report_interval", "/proc/sys/net/ipv4/conf/ip6tnl0/igmpv3_unsolicited_report_interval", "/proc/sys/net/ipv4/conf/ip6tnl0/ignore_routes_with_linkdown", "/proc/sys/net/ipv4/conf/ip6tnl0/log_martians", "/proc/sys/net/ipv4/conf/ip6tnl0/medium_id", "/proc/sys/net/ipv4/conf/ip6tnl0/promote_secondaries", "/proc/sys/net/ipv4/conf/ip6tnl0/proxy_arp", "/proc/sys/net/ipv4/conf/ip6tnl0/proxy_arp_pvlan", "/proc/sys/net/ipv4/conf/ip6tnl0/route_localnet", "/proc/sys/net/ipv4/conf/ip6tnl0/rp_filter", "/proc/sys/net/ipv4/conf/ip6tnl0/secure_redirects", "/proc/sys/net/ipv4/conf/ip6tnl0/send_redirects", "/proc/sys/net/ipv4/conf/ip6tnl0/shared_media", "/proc/sys/net/ipv4/conf/ip6tnl0/src_valid_mark", "/proc/sys/net/ipv4/conf/ip6tnl0/tag", "/proc/sys/net/ipv4/conf/ip_vti0/accept_local", "/proc/sys/net/ipv4/conf/ip_vti0/accept_redirects", "/proc/sys/net/ipv4/conf/ip_vti0/accept_source_route", "/proc/sys/net/ipv4/conf/ip_vti0/arp_accept", "/proc/sys/net/ipv4/conf/ip_vti0/arp_announce", "/proc/sys/net/ipv4/conf/ip_vti0/arp_evict_nocarrier", "/proc/sys/net/ipv4/conf/ip_vti0/arp_filter", "/proc/sys/net/ipv4/conf/ip_vti0/arp_ignore", "/proc/sys/net/ipv4/conf/ip_vti0/arp_notify", "/proc/sys/net/ipv4/conf/ip_vti0/bc_forwarding", "/proc/sys/net/ipv4/conf/ip_vti0/bootp_relay", "/proc/sys/net/ipv4/conf/ip_vti0/disable_policy", "/proc/sys/net/ipv4/conf/ip_vti0/disable_xfrm", "/proc/sys/net/ipv4/conf/ip_vti0/drop_gratuitous_arp", "/proc/sys/net/ipv4/conf/ip_vti0/drop_unicast_in_l2_multicast", "/proc/sys/net/ipv4/conf/ip_vti0/force_igmp_version", "/proc/sys/net/ipv4/conf/ip_vti0/forwarding", "/proc/sys/net/ipv4/conf/ip_vti0/igmpv2_unsolicited_report_interval", "/proc/sys/net/ipv4/conf/ip_vti0/igmpv3_unsolicited_report_interval", "/proc/sys/net/ipv4/conf/ip_vti0/ignore_routes_with_linkdown", "/proc/sys/net/ipv4/conf/ip_vti0/log_martians", "/proc/sys/net/ipv4/conf/ip_vti0/medium_id", "/proc/sys/net/ipv4/conf/ip_vti0/promote_secondaries", "/proc/sys/net/ipv4/conf/ip_vti0/proxy_arp", "/proc/sys/net/ipv4/conf/ip_vti0/proxy_arp_pvlan", "/proc/sys/net/ipv4/conf/ip_vti0/route_localnet", "/proc/sys/net/ipv4/conf/ip_vti0/rp_filter", "/proc/sys/net/ipv4/conf/ip_vti0/secure_redirects", "/proc/sys/net/ipv4/conf/ip_vti0/send_redirects", "/proc/sys/net/ipv4/conf/ip_vti0/shared_media", "/proc/sys/net/ipv4/conf/ip_vti0/src_valid_mark", "/proc/sys/net/ipv4/conf/ip_vti0/tag", "/proc/sys/net/ipv4/conf/lo/accept_local", "/proc/sys/net/ipv4/conf/lo/accept_redirects", "/proc/sys/net/ipv4/conf/lo/accept_source_route", "/proc/sys/net/ipv4/conf/lo/arp_accept", "/proc/sys/net/ipv4/conf/lo/arp_announce", "/proc/sys/net/ipv4/conf/lo/arp_evict_nocarrier", "/proc/sys/net/ipv4/conf/lo/arp_filter", "/proc/sys/net/ipv4/conf/lo/arp_ignore", "/proc/sys/net/ipv4/conf/lo/arp_notify", "/proc/sys/net/ipv4/conf/lo/bc_forwarding", "/proc/sys/net/ipv4/conf/lo/bootp_relay", "/proc/sys/net/ipv4/conf/lo/disable_policy", "/proc/sys/net/ipv4/conf/lo/disable_xfrm", "/proc/sys/net/ipv4/conf/lo/drop_gratuitous_arp", "/proc/sys/net/ipv4/conf/lo/drop_unicast_in_l2_multicast", "/proc/sys/net/ipv4/conf/lo/force_igmp_version", "/proc/sys/net/ipv4/conf/lo/forwarding", "/proc/sys/net/ipv4/conf/lo/igmpv2_unsolicited_report_interval", "/proc/sys/net/ipv4/conf/lo/igmpv3_unsolicited_report_interval", "/proc/sys/net/ipv4/conf/lo/ignore_routes_with_linkdown", "/proc/sys/net/ipv4/conf/lo/log_martians", "/proc/sys/net/ipv4/conf/lo/medium_id", "/proc/sys/net/ipv4/conf/lo/promote_secondaries", "/proc/sys/net/ipv4/conf/lo/proxy_arp", "/proc/sys/net/ipv4/conf/lo/proxy_arp_pvlan", "/proc/sys/net/ipv4/conf/lo/route_localnet", "/proc/sys/net/ipv4/conf/lo/rp_filter", "/proc/sys/net/ipv4/conf/lo/secure_redirects", "/proc/sys/net/ipv4/conf/lo/send_redirects", "/proc/sys/net/ipv4/conf/lo/shared_media", "/proc/sys/net/ipv4/conf/lo/src_valid_mark", "/proc/sys/net/ipv4/conf/lo/tag", "/proc/sys/net/ipv4/conf/sit0/accept_local", "/proc/sys/net/ipv4/conf/sit0/accept_redirects", "/proc/sys/net/ipv4/conf/sit0/accept_source_route", "/proc/sys/net/ipv4/conf/sit0/arp_accept", "/proc/sys/net/ipv4/conf/sit0/arp_announce", "/proc/sys/net/ipv4/conf/sit0/arp_evict_nocarrier", "/proc/sys/net/ipv4/conf/sit0/arp_filter", "/proc/sys/net/ipv4/conf/sit0/arp_ignore", "/proc/sys/net/ipv4/conf/sit0/arp_notify", "/proc/sys/net/ipv4/conf/sit0/bc_forwarding", "/proc/sys/net/ipv4/conf/sit0/bootp_relay", "/proc/sys/net/ipv4/conf/sit0/disable_policy", "/proc/sys/net/ipv4/conf/sit0/disable_xfrm", "/proc/sys/net/ipv4/conf/sit0/drop_gratuitous_arp", "/proc/sys/net/ipv4/conf/sit0/drop_unicast_in_l2_multicast", "/proc/sys/net/ipv4/conf/sit0/force_igmp_version", "/proc/sys/net/ipv4/conf/sit0/forwarding", "/proc/sys/net/ipv4/conf/sit0/igmpv2_unsolicited_report_interval", "/proc/sys/net/ipv4/conf/sit0/igmpv3_unsolicited_report_interval", "/proc/sys/net/ipv4/conf/sit0/ignore_routes_with_linkdown", "/proc/sys/net/ipv4/conf/sit0/log_martians", "/proc/sys/net/ipv4/conf/sit0/medium_id", "/proc/sys/net/ipv4/conf/sit0/promote_secondaries", "/proc/sys/net/ipv4/conf/sit0/proxy_arp", "/proc/sys/net/ipv4/conf/sit0/proxy_arp_pvlan", "/proc/sys/net/ipv4/conf/sit0/route_localnet", "/proc/sys/net/ipv4/conf/sit0/rp_filter", "/proc/sys/net/ipv4/conf/sit0/secure_redirects", "/proc/sys/net/ipv4/conf/sit0/send_redirects", "/proc/sys/net/ipv4/conf/sit0/shared_media", "/proc/sys/net/ipv4/conf/sit0/src_valid_mark", "/proc/sys/net/ipv4/conf/sit0/tag", "/proc/sys/net/ipv4/conf/tunl0/accept_local", "/proc/sys/net/ipv4/conf/tunl0/accept_redirects", "/proc/sys/net/ipv4/conf/tunl0/accept_source_route", "/proc/sys/net/ipv4/conf/tunl0/arp_accept", "/proc/sys/net/ipv4/conf/tunl0/arp_announce", "/proc/sys/net/ipv4/conf/tunl0/arp_evict_nocarrier", "/proc/sys/net/ipv4/conf/tunl0/arp_filter", "/proc/sys/net/ipv4/conf/tunl0/arp_ignore", "/proc/sys/net/ipv4/conf/tunl0/arp_notify", "/proc/sys/net/ipv4/conf/tunl0/bc_forwarding", "/proc/sys/net/ipv4/conf/tunl0/bootp_relay", "/proc/sys/net/ipv4/conf/tunl0/disable_policy", "/proc/sys/net/ipv4/conf/tunl0/disable_xfrm", "/proc/sys/net/ipv4/conf/tunl0/drop_gratuitous_arp", "/proc/sys/net/ipv4/conf/tunl0/drop_unicast_in_l2_multicast", "/proc/sys/net/ipv4/conf/tunl0/force_igmp_version", "/proc/sys/net/ipv4/conf/tunl0/forwarding", "/proc/sys/net/ipv4/conf/tunl0/igmpv2_unsolicited_report_interval", "/proc/sys/net/ipv4/conf/tunl0/igmpv3_unsolicited_report_interval", "/proc/sys/net/ipv4/conf/tunl0/ignore_routes_with_linkdown", "/proc/sys/net/ipv4/conf/tunl0/log_martians", "/proc/sys/net/ipv4/conf/tunl0/medium_id", "/proc/sys/net/ipv4/conf/tunl0/promote_secondaries", "/proc/sys/net/ipv4/conf/tunl0/proxy_arp", "/proc/sys/net/ipv4/conf/tunl0/proxy_arp_pvlan", "/proc/sys/net/ipv4/conf/tunl0/route_localnet", "/proc/sys/net/ipv4/conf/tunl0/rp_filter", "/proc/sys/net/ipv4/conf/tunl0/secure_redirects", "/proc/sys/net/ipv4/conf/tunl0/send_redirects", "/proc/sys/net/ipv4/conf/tunl0/shared_media", "/proc/sys/net/ipv4/conf/tunl0/src_valid_mark", "/proc/sys/net/ipv4/conf/tunl0/tag", "/proc/sys/net/ipv4/fib_multipath_hash_fields", "/proc/sys/net/ipv4/fib_multipath_hash_policy", "/proc/sys/net/ipv4/fib_multipath_hash_seed", "/proc/sys/net/ipv4/fib_multipath_use_neigh", "/proc/sys/net/ipv4/fib_notify_on_flag_change", "/proc/sys/net/ipv4/fwmark_reflect", "/proc/sys/net/ipv4/icmp_echo_enable_probe", "/proc/sys/net/ipv4/icmp_echo_ignore_all", "/proc/sys/net/ipv4/icmp_echo_ignore_broadcasts", "/proc/sys/net/ipv4/icmp_errors_use_inbound_ifaddr", "/proc/sys/net/ipv4/icmp_ignore_bogus_error_responses", "/proc/sys/net/ipv4/icmp_msgs_burst", "/proc/sys/net/ipv4/icmp_msgs_per_sec", "/proc/sys/net/ipv4/icmp_ratelimit", "/proc/sys/net/ipv4/icmp_ratemask", "/proc/sys/net/ipv4/igmp_link_local_mcast_reports", "/proc/sys/net/ipv4/igmp_max_memberships", "/proc/sys/net/ipv4/igmp_max_msf", "/proc/sys/net/ipv4/igmp_qrv", "/proc/sys/net/ipv4/ip_autobind_reuse", "/proc/sys/net/ipv4/ip_default_ttl", "/proc/sys/net/ipv4/ip_dynaddr", "/proc/sys/net/ipv4/ip_early_demux", "/proc/sys/net/ipv4/ip_forward", "/proc/sys/net/ipv4/ip_forward_update_priority", "/proc/sys/net/ipv4/ip_forward_use_pmtu", "/proc/sys/net/ipv4/ip_local_port_range", "/proc/sys/net/ipv4/ip_local_reserved_ports", "/proc/sys/net/ipv4/ip_no_pmtu_disc", "/proc/sys/net/ipv4/ip_nonlocal_bind", "/proc/sys/net/ipv4/ip_unprivileged_port_start", "/proc/sys/net/ipv4/ipfrag_high_thresh", "/proc/sys/net/ipv4/ipfrag_low_thresh", "/proc/sys/net/ipv4/ipfrag_max_dist", "/proc/sys/net/ipv4/ipfrag_time", "/proc/sys/net/ipv4/neigh/erspan0/anycast_delay", "/proc/sys/net/ipv4/neigh/erspan0/app_solicit", "/proc/sys/net/ipv4/neigh/erspan0/base_reachable_time", "/proc/sys/net/ipv4/neigh/erspan0/base_reachable_time_ms", "/proc/sys/net/ipv4/neigh/erspan0/delay_first_probe_time", "/proc/sys/net/ipv4/neigh/erspan0/gc_stale_time", "/proc/sys/net/ipv4/neigh/erspan0/interval_probe_time_ms", "/proc/sys/net/ipv4/neigh/erspan0/locktime", "/proc/sys/net/ipv4/neigh/erspan0/mcast_resolicit", "/proc/sys/net/ipv4/neigh/erspan0/mcast_solicit", "/proc/sys/net/ipv4/neigh/erspan0/proxy_delay", "/proc/sys/net/ipv4/neigh/erspan0/proxy_qlen", "/proc/sys/net/ipv4/neigh/erspan0/retrans_time", "/proc/sys/net/ipv4/neigh/erspan0/retrans_time_ms", "/proc/sys/net/ipv4/neigh/erspan0/ucast_solicit", "/proc/sys/net/ipv4/neigh/erspan0/unres_qlen", "/proc/sys/net/ipv4/neigh/erspan0/unres_qlen_bytes", "/proc/sys/net/ipv4/neigh/gre0/anycast_delay", "/proc/sys/net/ipv4/neigh/gre0/app_solicit", "/proc/sys/net/ipv4/neigh/gre0/base_reachable_time", "/proc/sys/net/ipv4/neigh/gre0/base_reachable_time_ms", "/proc/sys/net/ipv4/neigh/gre0/delay_first_probe_time", "/proc/sys/net/ipv4/neigh/gre0/gc_stale_time", "/proc/sys/net/ipv4/neigh/gre0/interval_probe_time_ms", "/proc/sys/net/ipv4/neigh/gre0/locktime", "/proc/sys/net/ipv4/neigh/gre0/mcast_resolicit", "/proc/sys/net/ipv4/neigh/gre0/mcast_solicit", "/proc/sys/net/ipv4/neigh/gre0/proxy_delay", "/proc/sys/net/ipv4/neigh/gre0/proxy_qlen", "/proc/sys/net/ipv4/neigh/gre0/retrans_time", "/proc/sys/net/ipv4/neigh/gre0/retrans_time_ms", "/proc/sys/net/ipv4/neigh/gre0/ucast_solicit", "/proc/sys/net/ipv4/neigh/gre0/unres_qlen", "/proc/sys/net/ipv4/neigh/gre0/unres_qlen_bytes", "/proc/sys/net/ipv4/neigh/gretap0/anycast_delay", "/proc/sys/net/ipv4/neigh/gretap0/app_solicit", "/proc/sys/net/ipv4/neigh/gretap0/base_reachable_time", "/proc/sys/net/ipv4/neigh/gretap0/base_reachable_time_ms", "/proc/sys/net/ipv4/neigh/gretap0/delay_first_probe_time", "/proc/sys/net/ipv4/neigh/gretap0/gc_stale_time", "/proc/sys/net/ipv4/neigh/gretap0/interval_probe_time_ms", "/proc/sys/net/ipv4/neigh/gretap0/locktime", "/proc/sys/net/ipv4/neigh/gretap0/mcast_resolicit", "/proc/sys/net/ipv4/neigh/gretap0/mcast_solicit", "/proc/sys/net/ipv4/neigh/gretap0/proxy_delay", "/proc/sys/net/ipv4/neigh/gretap0/proxy_qlen", "/proc/sys/net/ipv4/neigh/gretap0/retrans_time", "/proc/sys/net/ipv4/neigh/gretap0/retrans_time_ms", "/proc/sys/net/ipv4/neigh/gretap0/ucast_solicit", "/proc/sys/net/ipv4/neigh/gretap0/unres_qlen", "/proc/sys/net/ipv4/neigh/gretap0/unres_qlen_bytes", "/proc/sys/net/ipv4/neigh/ip6_vti0/anycast_delay", "/proc/sys/net/ipv4/neigh/ip6_vti0/app_solicit", "/proc/sys/net/ipv4/neigh/ip6_vti0/base_reachable_time", "/proc/sys/net/ipv4/neigh/ip6_vti0/base_reachable_time_ms", "/proc/sys/net/ipv4/neigh/ip6_vti0/delay_first_probe_time", "/proc/sys/net/ipv4/neigh/ip6_vti0/gc_stale_time", "/proc/sys/net/ipv4/neigh/ip6_vti0/interval_probe_time_ms", "/proc/sys/net/ipv4/neigh/ip6_vti0/locktime", "/proc/sys/net/ipv4/neigh/ip6_vti0/mcast_resolicit", "/proc/sys/net/ipv4/neigh/ip6_vti0/mcast_solicit", "/proc/sys/net/ipv4/neigh/ip6_vti0/proxy_delay", "/proc/sys/net/ipv4/neigh/ip6_vti0/proxy_qlen", "/proc/sys/net/ipv4/neigh/ip6_vti0/retrans_time", "/proc/sys/net/ipv4/neigh/ip6_vti0/retrans_time_ms", "/proc/sys/net/ipv4/neigh/ip6_vti0/ucast_solicit", "/proc/sys/net/ipv4/neigh/ip6_vti0/unres_qlen", "/proc/sys/net/ipv4/neigh/ip6_vti0/unres_qlen_bytes", "/proc/sys/net/ipv4/neigh/ip6gre0/anycast_delay", "/proc/sys/net/ipv4/neigh/ip6gre0/app_solicit", "/proc/sys/net/ipv4/neigh/ip6gre0/base_reachable_time", "/proc/sys/net/ipv4/neigh/ip6gre0/base_reachable_time_ms", "/proc/sys/net/ipv4/neigh/ip6gre0/delay_first_probe_time", "/proc/sys/net/ipv4/neigh/ip6gre0/gc_stale_time", "/proc/sys/net/ipv4/neigh/ip6gre0/interval_probe_time_ms", "/proc/sys/net/ipv4/neigh/ip6gre0/locktime", "/proc/sys/net/ipv4/neigh/ip6gre0/mcast_resolicit", "/proc/sys/net/ipv4/neigh/ip6gre0/mcast_solicit", "/proc/sys/net/ipv4/neigh/ip6gre0/proxy_delay", "/proc/sys/net/ipv4/neigh/ip6gre0/proxy_qlen", "/proc/sys/net/ipv4/neigh/ip6gre0/retrans_time", "/proc/sys/net/ipv4/neigh/ip6gre0/retrans_time_ms", "/proc/sys/net/ipv4/neigh/ip6gre0/ucast_solicit", "/proc/sys/net/ipv4/neigh/ip6gre0/unres_qlen", "/proc/sys/net/ipv4/neigh/ip6gre0/unres_qlen_bytes", "/proc/sys/net/ipv4/neigh/ip6tnl0/anycast_delay", "/proc/sys/net/ipv4/neigh/ip6tnl0/app_solicit", "/proc/sys/net/ipv4/neigh/ip6tnl0/base_reachable_time", "/proc/sys/net/ipv4/neigh/ip6tnl0/base_reachable_time_ms", "/proc/sys/net/ipv4/neigh/ip6tnl0/delay_first_probe_time", "/proc/sys/net/ipv4/neigh/ip6tnl0/gc_stale_time", "/proc/sys/net/ipv4/neigh/ip6tnl0/interval_probe_time_ms", "/proc/sys/net/ipv4/neigh/ip6tnl0/locktime", "/proc/sys/net/ipv4/neigh/ip6tnl0/mcast_resolicit", "/proc/sys/net/ipv4/neigh/ip6tnl0/mcast_solicit", "/proc/sys/net/ipv4/neigh/ip6tnl0/proxy_delay", "/proc/sys/net/ipv4/neigh/ip6tnl0/proxy_qlen", "/proc/sys/net/ipv4/neigh/ip6tnl0/retrans_time", "/proc/sys/net/ipv4/neigh/ip6tnl0/retrans_time_ms", "/proc/sys/net/ipv4/neigh/ip6tnl0/ucast_solicit", "/proc/sys/net/ipv4/neigh/ip6tnl0/unres_qlen", "/proc/sys/net/ipv4/neigh/ip6tnl0/unres_qlen_bytes", "/proc/sys/net/ipv4/neigh/ip_vti0/anycast_delay", "/proc/sys/net/ipv4/neigh/ip_vti0/app_solicit", "/proc/sys/net/ipv4/neigh/ip_vti0/base_reachable_time", "/proc/sys/net/ipv4/neigh/ip_vti0/base_reachable_time_ms", "/proc/sys/net/ipv4/neigh/ip_vti0/delay_first_probe_time", "/proc/sys/net/ipv4/neigh/ip_vti0/gc_stale_time", "/proc/sys/net/ipv4/neigh/ip_vti0/interval_probe_time_ms", "/proc/sys/net/ipv4/neigh/ip_vti0/locktime", "/proc/sys/net/ipv4/neigh/ip_vti0/mcast_resolicit", "/proc/sys/net/ipv4/neigh/ip_vti0/mcast_solicit", "/proc/sys/net/ipv4/neigh/ip_vti0/proxy_delay", "/proc/sys/net/ipv4/neigh/ip_vti0/proxy_qlen", "/proc/sys/net/ipv4/neigh/ip_vti0/retrans_time", "/proc/sys/net/ipv4/neigh/ip_vti0/retrans_time_ms", "/proc/sys/net/ipv4/neigh/ip_vti0/ucast_solicit", "/proc/sys/net/ipv4/neigh/ip_vti0/unres_qlen", "/proc/sys/net/ipv4/neigh/ip_vti0/unres_qlen_bytes", "/proc/sys/net/ipv4/neigh/lo/anycast_delay", "/proc/sys/net/ipv4/neigh/lo/app_solicit", "/proc/sys/net/ipv4/neigh/lo/base_reachable_time", "/proc/sys/net/ipv4/neigh/lo/base_reachable_time_ms", "/proc/sys/net/ipv4/neigh/lo/delay_first_probe_time", "/proc/sys/net/ipv4/neigh/lo/gc_stale_time", "/proc/sys/net/ipv4/neigh/lo/interval_probe_time_ms", "/proc/sys/net/ipv4/neigh/lo/locktime", "/proc/sys/net/ipv4/neigh/lo/mcast_resolicit", "/proc/sys/net/ipv4/neigh/lo/mcast_solicit", "/proc/sys/net/ipv4/neigh/lo/proxy_delay", "/proc/sys/net/ipv4/neigh/lo/proxy_qlen", "/proc/sys/net/ipv4/neigh/lo/retrans_time", "/proc/sys/net/ipv4/neigh/lo/retrans_time_ms", "/proc/sys/net/ipv4/neigh/lo/ucast_solicit", "/proc/sys/net/ipv4/neigh/lo/unres_qlen", "/proc/sys/net/ipv4/neigh/lo/unres_qlen_bytes", "/proc/sys/net/ipv4/neigh/sit0/anycast_delay", "/proc/sys/net/ipv4/neigh/sit0/app_solicit", "/proc/sys/net/ipv4/neigh/sit0/base_reachable_time", "/proc/sys/net/ipv4/neigh/sit0/base_reachable_time_ms", "/proc/sys/net/ipv4/neigh/sit0/delay_first_probe_time", "/proc/sys/net/ipv4/neigh/sit0/gc_stale_time", "/proc/sys/net/ipv4/neigh/sit0/interval_probe_time_ms", "/proc/sys/net/ipv4/neigh/sit0/locktime", "/proc/sys/net/ipv4/neigh/sit0/mcast_resolicit", "/proc/sys/net/ipv4/neigh/sit0/mcast_solicit", "/proc/sys/net/ipv4/neigh/sit0/proxy_delay", "/proc/sys/net/ipv4/neigh/sit0/proxy_qlen", "/proc/sys/net/ipv4/neigh/sit0/retrans_time", "/proc/sys/net/ipv4/neigh/sit0/retrans_time_ms", "/proc/sys/net/ipv4/neigh/sit0/ucast_solicit", "/proc/sys/net/ipv4/neigh/sit0/unres_qlen", "/proc/sys/net/ipv4/neigh/sit0/unres_qlen_bytes", "/proc/sys/net/ipv4/neigh/tunl0/anycast_delay", "/proc/sys/net/ipv4/neigh/tunl0/app_solicit", "/proc/sys/net/ipv4/neigh/tunl0/base_reachable_time", "/proc/sys/net/ipv4/neigh/tunl0/base_reachable_time_ms", "/proc/sys/net/ipv4/neigh/tunl0/delay_first_probe_time", "/proc/sys/net/ipv4/neigh/tunl0/gc_stale_time", "/proc/sys/net/ipv4/neigh/tunl0/interval_probe_time_ms", "/proc/sys/net/ipv4/neigh/tunl0/locktime", "/proc/sys/net/ipv4/neigh/tunl0/mcast_resolicit", "/proc/sys/net/ipv4/neigh/tunl0/mcast_solicit", "/proc/sys/net/ipv4/neigh/tunl0/proxy_delay", "/proc/sys/net/ipv4/neigh/tunl0/proxy_qlen", "/proc/sys/net/ipv4/neigh/tunl0/retrans_time", "/proc/sys/net/ipv4/neigh/tunl0/retrans_time_ms", "/proc/sys/net/ipv4/neigh/tunl0/ucast_solicit", "/proc/sys/net/ipv4/neigh/tunl0/unres_qlen", "/proc/sys/net/ipv4/neigh/tunl0/unres_qlen_bytes", "/proc/sys/net/ipv4/nexthop_compat_mode", "/proc/sys/net/ipv4/ping_group_range", "/proc/sys/net/ipv4/raw_l3mdev_accept", "/proc/sys/net/ipv4/route/min_adv_mss", "/proc/sys/net/ipv4/route/min_pmtu", "/proc/sys/net/ipv4/route/mtu_expires", "/proc/sys/net/ipv4/tcp_abort_on_overflow", "/proc/sys/net/ipv4/tcp_adv_win_scale", "/proc/sys/net/ipv4/tcp_app_win", "/proc/sys/net/ipv4/tcp_autocorking", "/proc/sys/net/ipv4/tcp_backlog_ack_defer", "/proc/sys/net/ipv4/tcp_base_mss", "/proc/sys/net/ipv4/tcp_challenge_ack_limit", "/proc/sys/net/ipv4/tcp_child_ehash_entries", "/proc/sys/net/ipv4/tcp_comp_sack_delay_ns", "/proc/sys/net/ipv4/tcp_comp_sack_nr", "/proc/sys/net/ipv4/tcp_comp_sack_slack_ns", "/proc/sys/net/ipv4/tcp_congestion_control", "/proc/sys/net/ipv4/tcp_dsack", "/proc/sys/net/ipv4/tcp_early_demux", "/proc/sys/net/ipv4/tcp_early_retrans", "/proc/sys/net/ipv4/tcp_ecn", "/proc/sys/net/ipv4/tcp_ecn_fallback", "/proc/sys/net/ipv4/tcp_fack", "/proc/sys/net/ipv4/tcp_fastopen", "/proc/sys/net/ipv4/tcp_fastopen_blackhole_timeout_sec", "/proc/sys/net/ipv4/tcp_fastopen_key", "/proc/sys/net/ipv4/tcp_fin_timeout", "/proc/sys/net/ipv4/tcp_frto", "/proc/sys/net/ipv4/tcp_fwmark_accept", "/proc/sys/net/ipv4/tcp_invalid_ratelimit", "/proc/sys/net/ipv4/tcp_keepalive_intvl", "/proc/sys/net/ipv4/tcp_keepalive_probes", "/proc/sys/net/ipv4/tcp_keepalive_time", "/proc/sys/net/ipv4/tcp_l3mdev_accept", "/proc/sys/net/ipv4/tcp_limit_output_bytes", "/proc/sys/net/ipv4/tcp_max_reordering", "/proc/sys/net/ipv4/tcp_max_syn_backlog", "/proc/sys/net/ipv4/tcp_max_tw_buckets", "/proc/sys/net/ipv4/tcp_migrate_req", "/proc/sys/net/ipv4/tcp_min_rtt_wlen", "/proc/sys/net/ipv4/tcp_min_snd_mss", "/proc/sys/net/ipv4/tcp_min_tso_segs", "/proc/sys/net/ipv4/tcp_moderate_rcvbuf", "/proc/sys/net/ipv4/tcp_mtu_probe_floor", "/proc/sys/net/ipv4/tcp_mtu_probing", "/proc/sys/net/ipv4/tcp_no_metrics_save", "/proc/sys/net/ipv4/tcp_no_ssthresh_metrics_save", "/proc/sys/net/ipv4/tcp_notsent_lowat", "/proc/sys/net/ipv4/tcp_orphan_retries", "/proc/sys/net/ipv4/tcp_pacing_ca_ratio", "/proc/sys/net/ipv4/tcp_pacing_ss_ratio", "/proc/sys/net/ipv4/tcp_pingpong_thresh", "/proc/sys/net/ipv4/tcp_plb_cong_thresh", "/proc/sys/net/ipv4/tcp_plb_enabled", "/proc/sys/net/ipv4/tcp_plb_idle_rehash_rounds", "/proc/sys/net/ipv4/tcp_plb_rehash_rounds", "/proc/sys/net/ipv4/tcp_plb_suspend_rto_sec", "/proc/sys/net/ipv4/tcp_probe_interval", "/proc/sys/net/ipv4/tcp_probe_threshold", "/proc/sys/net/ipv4/tcp_recovery", "/proc/sys/net/ipv4/tcp_reflect_tos", "/proc/sys/net/ipv4/tcp_reordering", "/proc/sys/net/ipv4/tcp_retrans_collapse", "/proc/sys/net/ipv4/tcp_retries1", "/proc/sys/net/ipv4/tcp_retries2", "/proc/sys/net/ipv4/tcp_rfc1337", "/proc/sys/net/ipv4/tcp_rmem", "/proc/sys/net/ipv4/tcp_rto_min_us", "/proc/sys/net/ipv4/tcp_sack", "/proc/sys/net/ipv4/tcp_shrink_window", "/proc/sys/net/ipv4/tcp_slow_start_after_idle", "/proc/sys/net/ipv4/tcp_stdurg", "/proc/sys/net/ipv4/tcp_syn_linear_timeouts", "/proc/sys/net/ipv4/tcp_syn_retries", "/proc/sys/net/ipv4/tcp_synack_retries", "/proc/sys/net/ipv4/tcp_syncookies", "/proc/sys/net/ipv4/tcp_thin_linear_timeouts", "/proc/sys/net/ipv4/tcp_timestamps", "/proc/sys/net/ipv4/tcp_tso_rtt_log", "/proc/sys/net/ipv4/tcp_tso_win_divisor", "/proc/sys/net/ipv4/tcp_tw_reuse", "/proc/sys/net/ipv4/tcp_window_scaling", "/proc/sys/net/ipv4/tcp_wmem", "/proc/sys/net/ipv4/tcp_workaround_signed_windows", "/proc/sys/net/ipv4/udp_child_hash_entries", "/proc/sys/net/ipv4/udp_early_demux", "/proc/sys/net/ipv4/udp_l3mdev_accept", "/proc/sys/net/ipv4/udp_rmem_min", "/proc/sys/net/ipv4/udp_wmem_min", "/proc/sys/net/ipv4/vs/am_droprate", "/proc/sys/net/ipv4/vs/amemthresh", "/proc/sys/net/ipv4/vs/backup_only", "/proc/sys/net/ipv4/vs/cache_bypass", "/proc/sys/net/ipv4/vs/conn_reuse_mode", "/proc/sys/net/ipv4/vs/conntrack", "/proc/sys/net/ipv4/vs/drop_entry", "/proc/sys/net/ipv4/vs/drop_packet", "/proc/sys/net/ipv4/vs/est_cpulist", "/proc/sys/net/ipv4/vs/est_nice", "/proc/sys/net/ipv4/vs/expire_nodest_conn", "/proc/sys/net/ipv4/vs/expire_quiescent_template", "/proc/sys/net/ipv4/vs/ignore_tunneled", "/proc/sys/net/ipv4/vs/lblc_expiration", "/proc/sys/net/ipv4/vs/lblcr_expiration", "/proc/sys/net/ipv4/vs/nat_icmp_send", "/proc/sys/net/ipv4/vs/pmtu_disc", "/proc/sys/net/ipv4/vs/run_estimation", "/proc/sys/net/ipv4/vs/schedule_icmp", "/proc/sys/net/ipv4/vs/secure_tcp", "/proc/sys/net/ipv4/vs/sloppy_sctp", "/proc/sys/net/ipv4/vs/sloppy_tcp", "/proc/sys/net/ipv4/vs/snat_reroute", "/proc/sys/net/ipv4/vs/sync_persist_mode", "/proc/sys/net/ipv4/vs/sync_ports", "/proc/sys/net/ipv4/vs/sync_qlen_max", "/proc/sys/net/ipv4/vs/sync_refresh_period", "/proc/sys/net/ipv4/vs/sync_retries", "/proc/sys/net/ipv4/vs/sync_sock_size", "/proc/sys/net/ipv4/vs/sync_threshold", "/proc/sys/net/ipv4/vs/sync_version", "/proc/sys/net/ipv4/xfrm4_gc_thresh", "/proc/sys/net/ipv6/anycast_src_echo_reply", "/proc/sys/net/ipv6/auto_flowlabels", "/proc/sys/net/ipv6/bindv6only", "/proc/sys/net/ipv6/conf/all/accept_dad", "/proc/sys/net/ipv6/conf/all/accept_ra", "/proc/sys/net/ipv6/conf/all/accept_ra_defrtr", "/proc/sys/net/ipv6/conf/all/accept_ra_from_local", "/proc/sys/net/ipv6/conf/all/accept_ra_min_hop_limit", "/proc/sys/net/ipv6/conf/all/accept_ra_min_lft", "/proc/sys/net/ipv6/conf/all/accept_ra_mtu", "/proc/sys/net/ipv6/conf/all/accept_ra_pinfo", "/proc/sys/net/ipv6/conf/all/accept_ra_rt_info_max_plen", "/proc/sys/net/ipv6/conf/all/accept_ra_rt_info_min_plen", "/proc/sys/net/ipv6/conf/all/accept_ra_rtr_pref", "/proc/sys/net/ipv6/conf/all/accept_redirects", "/proc/sys/net/ipv6/conf/all/accept_source_route", "/proc/sys/net/ipv6/conf/all/accept_untracked_na", "/proc/sys/net/ipv6/conf/all/addr_gen_mode", "/proc/sys/net/ipv6/conf/all/autoconf", "/proc/sys/net/ipv6/conf/all/dad_transmits", "/proc/sys/net/ipv6/conf/all/disable_ipv6", "/proc/sys/net/ipv6/conf/all/disable_policy", "/proc/sys/net/ipv6/conf/all/drop_unicast_in_l2_multicast", "/proc/sys/net/ipv6/conf/all/drop_unsolicited_na", "/proc/sys/net/ipv6/conf/all/enhanced_dad", "/proc/sys/net/ipv6/conf/all/force_mld_version", "/proc/sys/net/ipv6/conf/all/force_tllao", "/proc/sys/net/ipv6/conf/all/forwarding", "/proc/sys/net/ipv6/conf/all/hop_limit", "/proc/sys/net/ipv6/conf/all/ignore_routes_with_linkdown", "/proc/sys/net/ipv6/conf/all/ioam6_enabled", "/proc/sys/net/ipv6/conf/all/ioam6_id", "/proc/sys/net/ipv6/conf/all/ioam6_id_wide", "/proc/sys/net/ipv6/conf/all/keep_addr_on_down", "/proc/sys/net/ipv6/conf/all/max_addresses", "/proc/sys/net/ipv6/conf/all/max_desync_factor", "/proc/sys/net/ipv6/conf/all/mldv1_unsolicited_report_interval", "/proc/sys/net/ipv6/conf/all/mldv2_unsolicited_report_interval", "/proc/sys/net/ipv6/conf/all/mtu", "/proc/sys/net/ipv6/conf/all/ndisc_evict_nocarrier", "/proc/sys/net/ipv6/conf/all/ndisc_notify", "/proc/sys/net/ipv6/conf/all/ndisc_tclass", "/proc/sys/net/ipv6/conf/all/optimistic_dad", "/proc/sys/net/ipv6/conf/all/proxy_ndp", "/proc/sys/net/ipv6/conf/all/ra_defrtr_metric", "/proc/sys/net/ipv6/conf/all/ra_honor_pio_life", "/proc/sys/net/ipv6/conf/all/ra_honor_pio_pflag", "/proc/sys/net/ipv6/conf/all/regen_max_retry", "/proc/sys/net/ipv6/conf/all/regen_min_advance", "/proc/sys/net/ipv6/conf/all/router_probe_interval", "/proc/sys/net/ipv6/conf/all/router_solicitation_delay", "/proc/sys/net/ipv6/conf/all/router_solicitation_interval", "/proc/sys/net/ipv6/conf/all/router_solicitation_max_interval", "/proc/sys/net/ipv6/conf/all/router_solicitations", "/proc/sys/net/ipv6/conf/all/rpl_seg_enabled", "/proc/sys/net/ipv6/conf/all/seg6_enabled", "/proc/sys/net/ipv6/conf/all/seg6_require_hmac", "/proc/sys/net/ipv6/conf/all/stable_secret", "/proc/sys/net/ipv6/conf/all/suppress_frag_ndisc", "/proc/sys/net/ipv6/conf/all/temp_prefered_lft", "/proc/sys/net/ipv6/conf/all/temp_valid_lft", "/proc/sys/net/ipv6/conf/all/use_oif_addrs_only", "/proc/sys/net/ipv6/conf/all/use_optimistic", "/proc/sys/net/ipv6/conf/all/use_tempaddr", "/proc/sys/net/ipv6/conf/default/accept_dad", "/proc/sys/net/ipv6/conf/default/accept_ra", "/proc/sys/net/ipv6/conf/default/accept_ra_defrtr", "/proc/sys/net/ipv6/conf/default/accept_ra_from_local", "/proc/sys/net/ipv6/conf/default/accept_ra_min_hop_limit", "/proc/sys/net/ipv6/conf/default/accept_ra_min_lft", "/proc/sys/net/ipv6/conf/default/accept_ra_mtu", "/proc/sys/net/ipv6/conf/default/accept_ra_pinfo", "/proc/sys/net/ipv6/conf/default/accept_ra_rt_info_max_plen", "/proc/sys/net/ipv6/conf/default/accept_ra_rt_info_min_plen", "/proc/sys/net/ipv6/conf/default/accept_ra_rtr_pref", "/proc/sys/net/ipv6/conf/default/accept_redirects", "/proc/sys/net/ipv6/conf/default/accept_source_route", "/proc/sys/net/ipv6/conf/default/accept_untracked_na", "/proc/sys/net/ipv6/conf/default/addr_gen_mode", "/proc/sys/net/ipv6/conf/default/autoconf"
openat$auto_proc_sys(fd const[AT_FDCWD], file ptr[in, string[auto_proc_sys_files]], flags flags[open_flags], mode const[0]) fd_auto_proc_sys (automatic)
read$auto_proc_sys(fd fd_auto_proc_sys, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)
write$auto_proc_sys(fd fd_auto_proc_sys, buf ptr[in, array[int8]], len bytesize[buf]) (automatic)

# fops: open:proc_timers_open read:seq_read
resource fd_auto_proc_timers[fd]
openat$auto_proc_timers(fd const[AT_FDCWD], file ptr[in, string["/proc/self/timers"]], flags flags[open_flags], mode const[0]) fd_auto_proc_timers (automatic)
read$auto_proc_timers(fd fd_auto_proc_timers, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)

# fops: open:profile_open read:seq_read
resource fd_auto_profile[fd]
auto_profile_files = "/sys/kernel/debug/tracing/uprobe_profile", "/sys/kernel/tracing/uprobe_profile"
openat$auto_profile(fd const[AT_FDCWD], file ptr[in, string[auto_profile_files]], flags flags[open_flags], mode const[0]) fd_auto_profile (automatic)
read$auto_profile(fd fd_auto_profile, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)

# fops: open:raw_open ioctl:raw_ioctl
resource fd_auto_raw[fd]
openat$auto_raw(fd const[AT_FDCWD], file ptr[in, string["/dev/raw-gadget"]], flags flags[open_flags], mode const[0]) fd_auto_raw (automatic)
ioctl$auto_USB_RAW_IOCTL_EP_SET_WEDGE(fd fd_auto_raw, cmd const[USB_RAW_IOCTL_EP_SET_WEDGE], arg ptr[inout, int32]) (automatic)
ioctl$auto_USB_RAW_IOCTL_EP_CLEAR_HALT(fd fd_auto_raw, cmd const[USB_RAW_IOCTL_EP_CLEAR_HALT], arg ptr[inout, int32]) (automatic)
ioctl$auto_USB_RAW_IOCTL_EP_SET_HALT(fd fd_auto_raw, cmd const[USB_RAW_IOCTL_EP_SET_HALT], arg ptr[inout, int32]) (automatic)
ioctl$auto_USB_RAW_IOCTL_EP0_STALL(fd fd_auto_raw, cmd const[USB_RAW_IOCTL_EP0_STALL], arg const[0]) (automatic)
ioctl$auto_USB_RAW_IOCTL_EPS_INFO(fd fd_auto_raw, cmd const[USB_RAW_IOCTL_EPS_INFO], arg ptr[in, usb_raw_eps_info$auto_record]) (automatic)
ioctl$auto_USB_RAW_IOCTL_VBUS_DRAW(fd fd_auto_raw, cmd const[USB_RAW_IOCTL_VBUS_DRAW], arg ptr[inout, int32]) (automatic)
ioctl$auto_USB_RAW_IOCTL_CONFIGURE(fd fd_auto_raw, cmd const[USB_RAW_IOCTL_CONFIGURE], arg const[0]) (automatic)
ioctl$auto_USB_RAW_IOCTL_EP_READ(fd fd_auto_raw, cmd const[USB_RAW_IOCTL_EP_READ], arg ptr[in, array[int8]]) (automatic)
ioctl$auto_USB_RAW_IOCTL_EP_WRITE(fd fd_auto_raw, cmd const[USB_RAW_IOCTL_EP_WRITE], arg ptr[inout, usb_raw_ep_io$auto_record]) (automatic)
ioctl$auto_USB_RAW_IOCTL_EP_DISABLE(fd fd_auto_raw, cmd const[USB_RAW_IOCTL_EP_DISABLE], arg ptr[inout, int32]) (automatic)
ioctl$auto_USB_RAW_IOCTL_EP_ENABLE(fd fd_auto_raw, cmd const[USB_RAW_IOCTL_EP_ENABLE], arg ptr[inout, usb_endpoint_descriptor$auto_record]) (automatic)
ioctl$auto_USB_RAW_IOCTL_EP0_READ(fd fd_auto_raw, cmd const[USB_RAW_IOCTL_EP0_READ], arg ptr[in, array[int8]]) (automatic)
ioctl$auto_USB_RAW_IOCTL_EP0_WRITE(fd fd_auto_raw, cmd const[USB_RAW_IOCTL_EP0_WRITE], arg ptr[inout, usb_raw_ep_io$auto_record]) (automatic)
ioctl$auto_USB_RAW_IOCTL_EVENT_FETCH(fd fd_auto_raw, cmd const[USB_RAW_IOCTL_EVENT_FETCH], arg ptr[in, usb_raw_event$auto_record]) (automatic)
ioctl$auto_USB_RAW_IOCTL_RUN(fd fd_auto_raw, cmd const[USB_RAW_IOCTL_RUN], arg const[0]) (automatic)
ioctl$auto_USB_RAW_IOCTL_INIT(fd fd_auto_raw, cmd const[USB_RAW_IOCTL_INIT], arg ptr[inout, usb_raw_init$auto_record]) (automatic)

# fops: open:regulator_summary_open read:seq_read
resource fd_auto_regulator_summary[fd]
openat$auto_regulator_summary(fd const[AT_FDCWD], file ptr[in, string["/sys/kernel/debug/regulator/regulator_summary"]], flags flags[open_flags], mode const[0]) fd_auto_regulator_summary (automatic)
read$auto_regulator_summary(fd fd_auto_regulator_summary, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)

# fops: open:rfcomm_dlc_debugfs_open read:seq_read
resource fd_auto_rfcomm_dlc_debugfs[fd]
openat$auto_rfcomm_dlc_debugfs(fd const[AT_FDCWD], file ptr[in, string["/sys/kernel/debug/bluetooth/rfcomm_dlc"]], flags flags[open_flags], mode const[0]) fd_auto_rfcomm_dlc_debugfs (automatic)
read$auto_rfcomm_dlc_debugfs(fd fd_auto_rfcomm_dlc_debugfs, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)

# fops: open:rfcomm_sock_debugfs_open read:seq_read
resource fd_auto_rfcomm_sock_debugfs[fd]
openat$auto_rfcomm_sock_debugfs(fd const[AT_FDCWD], file ptr[in, string["/sys/kernel/debug/bluetooth/rfcomm"]], flags flags[open_flags], mode const[0]) fd_auto_rfcomm_sock_debugfs (automatic)
read$auto_rfcomm_sock_debugfs(fd fd_auto_rfcomm_sock_debugfs, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)

# fops: open:rfkill_fop_open read:rfkill_fop_read write:rfkill_fop_write ioctl:rfkill_fop_ioctl
resource fd_auto_rfkill_fop[fd]
openat$auto_rfkill_fop(fd const[AT_FDCWD], file ptr[in, string["/dev/rfkill"]], flags flags[open_flags], mode const[0]) fd_auto_rfkill_fop (automatic)
read$auto_rfkill_fop(fd fd_auto_rfkill_fop, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)
write$auto_rfkill_fop(fd fd_auto_rfkill_fop, buf ptr[in, array[int8]], len bytesize[buf]) (automatic)
ioctl$auto_RFKILL_IOC_MAX_SIZE(fd fd_auto_rfkill_fop, cmd const[RFKILL_IOC_MAX_SIZE], arg const[0]) (automatic)
ioctl$auto_RFKILL_IOC_NOINPUT(fd fd_auto_rfkill_fop, cmd const[RFKILL_IOC_NOINPUT], arg const[0]) (automatic)

# fops: open:rng_dev_open read:rng_dev_read
resource fd_auto_rng_dev[fd]
openat$auto_rng_dev(fd const[AT_FDCWD], file ptr[in, string["/dev/hwrng"]], flags flags[open_flags], mode const[0]) fd_auto_rng_dev (automatic)
read$auto_rng_dev(fd fd_auto_rng_dev, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)

# fops: open:sc_fop_open read:seq_read
resource fd_auto_sc_fop[fd]
openat$auto_sc_fop(fd const[AT_FDCWD], file ptr[in, string["/sys/kernel/debug/o2net/sock_containers"]], flags flags[open_flags], mode const[0]) fd_auto_sc_fop (automatic)
read$auto_sc_fop(fd fd_auto_sc_fop, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)

# fops: open:sco_debugfs_open read:seq_read
resource fd_auto_sco_debugfs[fd]
openat$auto_sco_debugfs(fd const[AT_FDCWD], file ptr[in, string["/sys/kernel/debug/bluetooth/sco"]], flags flags[open_flags], mode const[0]) fd_auto_sco_debugfs (automatic)
read$auto_sco_debugfs(fd fd_auto_sco_debugfs, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)

# fops: open:severities_coverage_open read:seq_read write:severities_coverage_write
resource fd_auto_severities_coverage[fd]
openat$auto_severities_coverage(fd const[AT_FDCWD], file ptr[in, string["/sys/kernel/debug/mce/severities-coverage"]], flags flags[open_flags], mode const[0]) fd_auto_severities_coverage (automatic)
read$auto_severities_coverage(fd fd_auto_severities_coverage, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)
write$auto_severities_coverage(fd fd_auto_severities_coverage, buf ptr[in, array[int8]], len bytesize[buf]) (automatic)

# fops: open:show_traces_open read:seq_read
resource fd_auto_show_traces[fd]
auto_show_traces_files = "/sys/kernel/debug/tracing/available_tracers", "/sys/kernel/tracing/available_tracers"
openat$auto_show_traces(fd const[AT_FDCWD], file ptr[in, string[auto_show_traces_files]], flags flags[open_flags], mode const[0]) fd_auto_show_traces (automatic)
read$auto_show_traces(fd fd_auto_show_traces, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)

# fops: open:smk_open_cipso read:seq_read write:smk_write_cipso
resource fd_auto_smk_cipso[fd]
openat$auto_smk_cipso(fd const[AT_FDCWD], file ptr[in, string["/sys/fs/smackfs/cipso"]], flags flags[open_flags], mode const[0]) fd_auto_smk_cipso (automatic)
read$auto_smk_cipso(fd fd_auto_smk_cipso, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)
write$auto_smk_cipso(fd fd_auto_smk_cipso, buf ptr[in, array[int8]], len bytesize[buf]) (automatic)

# fops: open:smk_open_cipso2 read:seq_read write:smk_write_cipso2
resource fd_auto_smk_cipso2[fd]
openat$auto_smk_cipso2(fd const[AT_FDCWD], file ptr[in, string["/sys/fs/smackfs/cipso2"]], flags flags[open_flags], mode const[0]) fd_auto_smk_cipso2 (automatic)
read$auto_smk_cipso2(fd fd_auto_smk_cipso2, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)
write$auto_smk_cipso2(fd fd_auto_smk_cipso2, buf ptr[in, array[int8]], len bytesize[buf]) (automatic)

# fops: open:smk_open_load read:seq_read write:smk_write_load
resource fd_auto_smk_load[fd]
openat$auto_smk_load(fd const[AT_FDCWD], file ptr[in, string["/sys/fs/smackfs/load"]], flags flags[open_flags], mode const[0]) fd_auto_smk_load (automatic)
read$auto_smk_load(fd fd_auto_smk_load, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)
write$auto_smk_load(fd fd_auto_smk_load, buf ptr[in, array[int8]], len bytesize[buf]) (automatic)

# fops: open:smk_open_load2 read:seq_read write:smk_write_load2
resource fd_auto_smk_load2[fd]
openat$auto_smk_load2(fd const[AT_FDCWD], file ptr[in, string["/sys/fs/smackfs/load2"]], flags flags[open_flags], mode const[0]) fd_auto_smk_load2 (automatic)
read$auto_smk_load2(fd fd_auto_smk_load2, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)
write$auto_smk_load2(fd fd_auto_smk_load2, buf ptr[in, array[int8]], len bytesize[buf]) (automatic)

# fops: open:smk_open_load_self read:seq_read write:smk_write_load_self
resource fd_auto_smk_load_self[fd]
openat$auto_smk_load_self(fd const[AT_FDCWD], file ptr[in, string["/sys/fs/smackfs/load-self"]], flags flags[open_flags], mode const[0]) fd_auto_smk_load_self (automatic)
read$auto_smk_load_self(fd fd_auto_smk_load_self, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)
write$auto_smk_load_self(fd fd_auto_smk_load_self, buf ptr[in, array[int8]], len bytesize[buf]) (automatic)

# fops: open:smk_open_load_self2 read:seq_read write:smk_write_load_self2
resource fd_auto_smk_load_self2[fd]
openat$auto_smk_load_self2(fd const[AT_FDCWD], file ptr[in, string["/sys/fs/smackfs/load-self2"]], flags flags[open_flags], mode const[0]) fd_auto_smk_load_self2 (automatic)
read$auto_smk_load_self2(fd fd_auto_smk_load_self2, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)
write$auto_smk_load_self2(fd fd_auto_smk_load_self2, buf ptr[in, array[int8]], len bytesize[buf]) (automatic)

# fops: open:smk_open_net4addr read:seq_read write:smk_write_net4addr
resource fd_auto_smk_net4addr[fd]
openat$auto_smk_net4addr(fd const[AT_FDCWD], file ptr[in, string["/sys/fs/smackfs/netlabel"]], flags flags[open_flags], mode const[0]) fd_auto_smk_net4addr (automatic)
read$auto_smk_net4addr(fd fd_auto_smk_net4addr, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)
write$auto_smk_net4addr(fd fd_auto_smk_net4addr, buf ptr[in, array[int8]], len bytesize[buf]) (automatic)

# fops: open:smk_open_net6addr read:seq_read write:smk_write_net6addr
resource fd_auto_smk_net6addr[fd]
openat$auto_smk_net6addr(fd const[AT_FDCWD], file ptr[in, string["/sys/fs/smackfs/ipv6host"]], flags flags[open_flags], mode const[0]) fd_auto_smk_net6addr (automatic)
read$auto_smk_net6addr(fd fd_auto_smk_net6addr, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)
write$auto_smk_net6addr(fd fd_auto_smk_net6addr, buf ptr[in, array[int8]], len bytesize[buf]) (automatic)

# fops: open:smk_open_onlycap read:seq_read write:smk_write_onlycap
resource fd_auto_smk_onlycap[fd]
openat$auto_smk_onlycap(fd const[AT_FDCWD], file ptr[in, string["/sys/fs/smackfs/onlycap"]], flags flags[open_flags], mode const[0]) fd_auto_smk_onlycap (automatic)
read$auto_smk_onlycap(fd fd_auto_smk_onlycap, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)
write$auto_smk_onlycap(fd fd_auto_smk_onlycap, buf ptr[in, array[int8]], len bytesize[buf]) (automatic)

# fops: open:smk_open_relabel_self read:seq_read write:smk_write_relabel_self
resource fd_auto_smk_relabel_self[fd]
openat$auto_smk_relabel_self(fd const[AT_FDCWD], file ptr[in, string["/sys/fs/smackfs/relabel-self"]], flags flags[open_flags], mode const[0]) fd_auto_smk_relabel_self (automatic)
read$auto_smk_relabel_self(fd fd_auto_smk_relabel_self, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)
write$auto_smk_relabel_self(fd fd_auto_smk_relabel_self, buf ptr[in, array[int8]], len bytesize[buf]) (automatic)

# fops: open:snapshot_open read:snapshot_read write:snapshot_write ioctl:snapshot_ioctl
resource fd_auto_snapshot[fd]
openat$auto_snapshot(fd const[AT_FDCWD], file ptr[in, string["/dev/snapshot"]], flags flags[open_flags], mode const[0]) fd_auto_snapshot (automatic)
read$auto_snapshot(fd fd_auto_snapshot, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)
write$auto_snapshot(fd fd_auto_snapshot, buf ptr[in, array[int8]], len bytesize[buf]) (automatic)
ioctl$auto_SNAPSHOT_SET_SWAP_AREA(fd fd_auto_snapshot, cmd const[SNAPSHOT_SET_SWAP_AREA], arg ptr[inout, resume_swap_area$auto_record]) (automatic)
ioctl$auto_SNAPSHOT_POWER_OFF(fd fd_auto_snapshot, cmd const[SNAPSHOT_POWER_OFF], arg const[0]) (automatic)
ioctl$auto_SNAPSHOT_PLATFORM_SUPPORT(fd fd_auto_snapshot, cmd const[SNAPSHOT_PLATFORM_SUPPORT], arg const[0]) (automatic)
ioctl$auto_SNAPSHOT_S2RAM(fd fd_auto_snapshot, cmd const[SNAPSHOT_S2RAM], arg const[0]) (automatic)
ioctl$auto_SNAPSHOT_FREE_SWAP_PAGES(fd fd_auto_snapshot, cmd const[SNAPSHOT_FREE_SWAP_PAGES], arg const[0]) (automatic)
ioctl$auto_SNAPSHOT_ALLOC_SWAP_PAGE(fd fd_auto_snapshot, cmd const[SNAPSHOT_ALLOC_SWAP_PAGE], arg ptr[in, int64]) (automatic)
ioctl$auto_SNAPSHOT_AVAIL_SWAP_SIZE(fd fd_auto_snapshot, cmd const[SNAPSHOT_AVAIL_SWAP_SIZE], arg ptr[in, int64]) (automatic)
ioctl$auto_SNAPSHOT_GET_IMAGE_SIZE(fd fd_auto_snapshot, cmd const[SNAPSHOT_GET_IMAGE_SIZE], arg ptr[in, int64]) (automatic)
ioctl$auto_SNAPSHOT_PREF_IMAGE_SIZE(fd fd_auto_snapshot, cmd const[SNAPSHOT_PREF_IMAGE_SIZE], arg const[0]) (automatic)
ioctl$auto_SNAPSHOT_FREE(fd fd_auto_snapshot, cmd const[SNAPSHOT_FREE], arg const[0]) (automatic)
ioctl$auto_SNAPSHOT_ATOMIC_RESTORE(fd fd_auto_snapshot, cmd const[SNAPSHOT_ATOMIC_RESTORE], arg const[0]) (automatic)
ioctl$auto_SNAPSHOT_CREATE_IMAGE(fd fd_auto_snapshot, cmd const[SNAPSHOT_CREATE_IMAGE], arg ptr[inout, int32]) (automatic)
ioctl$auto_SNAPSHOT_UNFREEZE(fd fd_auto_snapshot, cmd const[SNAPSHOT_UNFREEZE], arg const[0]) (automatic)
ioctl$auto_SNAPSHOT_FREEZE(fd fd_auto_snapshot, cmd const[SNAPSHOT_FREEZE], arg const[0]) (automatic)

# fops: open:snd_ctl_open read:snd_ctl_read ioctl:snd_ctl_ioctl
resource fd_auto_snd_ctl[fd]
auto_snd_ctl_files = "/dev/snd/controlC0", "/dev/snd/controlC1", "/dev/snd/controlC2"
openat$auto_snd_ctl(fd const[AT_FDCWD], file ptr[in, string[auto_snd_ctl_files]], flags flags[open_flags], mode const[0]) fd_auto_snd_ctl (automatic)
read$auto_snd_ctl(fd fd_auto_snd_ctl, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)
ioctl$auto_SNDRV_CTL_IOCTL_POWER_STATE(fd fd_auto_snd_ctl, cmd const[SNDRV_CTL_IOCTL_POWER_STATE], arg ptr[in, int32]) (automatic)
ioctl$auto_SNDRV_CTL_IOCTL_POWER(fd fd_auto_snd_ctl, cmd const[SNDRV_CTL_IOCTL_POWER], arg ptr[in, array[int8]]) (automatic)
ioctl$auto_SNDRV_CTL_IOCTL_TLV_COMMAND(fd fd_auto_snd_ctl, cmd const[SNDRV_CTL_IOCTL_TLV_COMMAND], arg ptr[in, array[int8]]) (automatic)
ioctl$auto_SNDRV_CTL_IOCTL_TLV_WRITE(fd fd_auto_snd_ctl, cmd const[SNDRV_CTL_IOCTL_TLV_WRITE], arg ptr[in, array[int8]]) (automatic)
ioctl$auto_SNDRV_CTL_IOCTL_TLV_READ(fd fd_auto_snd_ctl, cmd const[SNDRV_CTL_IOCTL_TLV_READ], arg ptr[in, array[int8]]) (automatic)
ioctl$auto_SNDRV_CTL_IOCTL_SUBSCRIBE_EVENTS(fd fd_auto_snd_ctl, cmd const[SNDRV_CTL_IOCTL_SUBSCRIBE_EVENTS], arg ptr[in, array[int8]]) (automatic)
ioctl$auto_SNDRV_CTL_IOCTL_ELEM_REMOVE(fd fd_auto_snd_ctl, cmd const[SNDRV_CTL_IOCTL_ELEM_REMOVE], arg ptr[in, array[int8]]) (automatic)
ioctl$auto_SNDRV_CTL_IOCTL_ELEM_REPLACE(fd fd_auto_snd_ctl, cmd const[SNDRV_CTL_IOCTL_ELEM_REPLACE], arg ptr[in, array[int8]]) (automatic)
ioctl$auto_SNDRV_CTL_IOCTL_ELEM_ADD(fd fd_auto_snd_ctl, cmd const[SNDRV_CTL_IOCTL_ELEM_ADD], arg ptr[in, array[int8]]) (automatic)
ioctl$auto_SNDRV_CTL_IOCTL_ELEM_UNLOCK(fd fd_auto_snd_ctl, cmd const[SNDRV_CTL_IOCTL_ELEM_UNLOCK], arg ptr[inout, snd_ctl_elem_id$auto_record]) (automatic)
ioctl$auto_SNDRV_CTL_IOCTL_ELEM_LOCK(fd fd_auto_snd_ctl, cmd const[SNDRV_CTL_IOCTL_ELEM_LOCK], arg ptr[inout, snd_ctl_elem_id$auto_record]) (automatic)
ioctl$auto_SNDRV_CTL_IOCTL_ELEM_WRITE(fd fd_auto_snd_ctl, cmd const[SNDRV_CTL_IOCTL_ELEM_WRITE], arg ptr[in, array[int8]]) (automatic)
ioctl$auto_SNDRV_CTL_IOCTL_ELEM_READ(fd fd_auto_snd_ctl, cmd const[SNDRV_CTL_IOCTL_ELEM_READ], arg ptr[in, array[int8]]) (automatic)
ioctl$auto_SNDRV_CTL_IOCTL_ELEM_INFO(fd fd_auto_snd_ctl, cmd const[SNDRV_CTL_IOCTL_ELEM_INFO], arg ptr[in, array[int8]]) (automatic)
ioctl$auto_SNDRV_CTL_IOCTL_ELEM_LIST(fd fd_auto_snd_ctl, cmd const[SNDRV_CTL_IOCTL_ELEM_LIST], arg ptr[in, array[int8]]) (automatic)
ioctl$auto_SNDRV_CTL_IOCTL_CARD_INFO(fd fd_auto_snd_ctl, cmd const[SNDRV_CTL_IOCTL_CARD_INFO], arg ptr[in, snd_ctl_card_info$auto_record]) (automatic)
ioctl$auto_SNDRV_CTL_IOCTL_PVERSION(fd fd_auto_snd_ctl, cmd const[SNDRV_CTL_IOCTL_PVERSION], arg ptr[in, int32]) (automatic)

# fops: open:snd_mixer_oss_open ioctl:snd_mixer_oss_ioctl
resource fd_auto_snd_mixer_oss[fd]
auto_snd_mixer_oss_files = "/dev/mixer", "/dev/mixer1", "/dev/mixer2"
openat$auto_snd_mixer_oss(fd const[AT_FDCWD], file ptr[in, string[auto_snd_mixer_oss_files]], flags flags[open_flags], mode const[0]) fd_auto_snd_mixer_oss (automatic)
ioctl$auto_snd_mixer_oss(fd fd_auto_snd_mixer_oss, cmd intptr, arg ptr[in, array[int8]]) (automatic)

# fops: open:snd_pcm_capture_open read:snd_pcm_read mmap:snd_pcm_mmap ioctl:snd_pcm_ioctl
resource fd_auto_snd_pcm[fd]
auto_snd_pcm_files = "/dev/snd/pcmC0D0c", "/dev/snd/pcmC1D0c", "/dev/snd/pcmC1D1c"
openat$auto_snd_pcm(fd const[AT_FDCWD], file ptr[in, string[auto_snd_pcm_files]], flags flags[open_flags], mode const[0]) fd_auto_snd_pcm (automatic)
read$auto_snd_pcm(fd fd_auto_snd_pcm, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)
mmap$auto_snd_pcm(addr vma, len len[addr], prot flags[mmap_prot], flags flags[mmap_flags], fd fd_auto_snd_pcm, offset fileoff) (automatic)
ioctl$auto_snd_pcm(fd fd_auto_snd_pcm, cmd intptr, arg ptr[in, array[int8]]) (automatic)

# fops: open:snd_pcm_oss_open read:snd_pcm_oss_read write:snd_pcm_oss_write mmap:snd_pcm_oss_mmap ioctl:snd_pcm_oss_ioctl
resource fd_auto_snd_pcm_oss[fd]
auto_snd_pcm_oss_files = "/dev/adsp1", "/dev/audio", "/dev/audio1", "/dev/dsp", "/dev/dsp1"
openat$auto_snd_pcm_oss(fd const[AT_FDCWD], file ptr[in, string[auto_snd_pcm_oss_files]], flags flags[open_flags], mode const[0]) fd_auto_snd_pcm_oss (automatic)
read$auto_snd_pcm_oss(fd fd_auto_snd_pcm_oss, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)
write$auto_snd_pcm_oss(fd fd_auto_snd_pcm_oss, buf ptr[in, array[int8]], len bytesize[buf]) (automatic)
mmap$auto_snd_pcm_oss(addr vma, len len[addr], prot flags[mmap_prot], flags flags[mmap_flags], fd fd_auto_snd_pcm_oss, offset fileoff) (automatic)
ioctl$auto_SNDCTL_DSP_PROFILE(fd fd_auto_snd_pcm_oss, cmd const[SNDCTL_DSP_PROFILE], arg ptr[inout, int32]) (automatic)
ioctl$auto_SNDCTL_DSP_GETODELAY(fd fd_auto_snd_pcm_oss, cmd const[SNDCTL_DSP_GETODELAY], arg ptr[in, int32]) (automatic)
ioctl$auto_SNDCTL_DSP_SETDUPLEX(fd fd_auto_snd_pcm_oss, cmd const[SNDCTL_DSP_SETDUPLEX], arg const[0]) (automatic)
ioctl$auto_SNDCTL_DSP_SETSYNCRO(fd fd_auto_snd_pcm_oss, cmd const[SNDCTL_DSP_SETSYNCRO], arg const[0]) (automatic)
ioctl$auto_SNDCTL_DSP_MAPOUTBUF(fd fd_auto_snd_pcm_oss, cmd const[SNDCTL_DSP_MAPOUTBUF], arg ptr[in, buffmem_desc$auto_record]) (automatic)
ioctl$auto_SNDCTL_DSP_MAPINBUF(fd fd_auto_snd_pcm_oss, cmd const[SNDCTL_DSP_MAPINBUF], arg ptr[in, buffmem_desc$auto_record]) (automatic)
ioctl$auto_SNDCTL_DSP_GETOPTR(fd fd_auto_snd_pcm_oss, cmd const[SNDCTL_DSP_GETOPTR], arg ptr[in, count_info$auto_record]) (automatic)
ioctl$auto_SNDCTL_DSP_GETIPTR(fd fd_auto_snd_pcm_oss, cmd const[SNDCTL_DSP_GETIPTR], arg ptr[in, count_info$auto_record]) (automatic)
ioctl$auto_SNDCTL_DSP_SETTRIGGER(fd fd_auto_snd_pcm_oss, cmd const[SNDCTL_DSP_SETTRIGGER], arg ptr[inout, int32]) (automatic)
ioctl$auto_SNDCTL_DSP_GETTRIGGER(fd fd_auto_snd_pcm_oss, cmd const[SNDCTL_DSP_GETTRIGGER], arg ptr[in, int32]) (automatic)
ioctl$auto_SNDCTL_DSP_GETCAPS(fd fd_auto_snd_pcm_oss, cmd const[SNDCTL_DSP_GETCAPS], arg ptr[in, int32]) (automatic)
ioctl$auto_SNDCTL_DSP_NONBLOCK(fd fd_auto_snd_pcm_oss, cmd const[SNDCTL_DSP_NONBLOCK], arg const[0]) (automatic)
ioctl$auto_SNDCTL_DSP_GETISPACE(fd fd_auto_snd_pcm_oss, cmd const[SNDCTL_DSP_GETISPACE], arg ptr[in, audio_buf_info$auto_record]) (automatic)
ioctl$auto_SNDCTL_DSP_GETOSPACE(fd fd_auto_snd_pcm_oss, cmd const[SNDCTL_DSP_GETOSPACE], arg ptr[in, audio_buf_info$auto_record]) (automatic)
ioctl$auto_SNDCTL_DSP_GETFMTS(fd fd_auto_snd_pcm_oss, cmd const[SNDCTL_DSP_GETFMTS], arg ptr[in, int32]) (automatic)
ioctl$auto_SNDCTL_DSP_SETFRAGMENT(fd fd_auto_snd_pcm_oss, cmd const[SNDCTL_DSP_SETFRAGMENT], arg ptr[in, array[int8]]) (automatic)
ioctl$auto_SNDCTL_DSP_SUBDIVIDE(fd fd_auto_snd_pcm_oss, cmd const[SNDCTL_DSP_SUBDIVIDE], arg ptr[in, array[int8]]) (automatic)
ioctl$auto_SNDCTL_DSP_POST(fd fd_auto_snd_pcm_oss, cmd const[SNDCTL_DSP_POST], arg const[0]) (automatic)
ioctl$auto_SOUND_PCM_READ_FILTER(fd fd_auto_snd_pcm_oss, cmd const[SOUND_PCM_READ_FILTER], arg ptr[in, int32]) (automatic)
ioctl$auto_SOUND_PCM_WRITE_FILTER(fd fd_auto_snd_pcm_oss, cmd const[SOUND_PCM_WRITE_FILTER], arg ptr[in, array[int8]]) (automatic)
ioctl$auto_SOUND_PCM_READ_CHANNELS(fd fd_auto_snd_pcm_oss, cmd const[SOUND_PCM_READ_CHANNELS], arg ptr[in, int32]) (automatic)
ioctl$auto_SNDCTL_DSP_CHANNELS(fd fd_auto_snd_pcm_oss, cmd const[SNDCTL_DSP_CHANNELS], arg ptr[in, array[int8]]) (automatic)
ioctl$auto_SOUND_PCM_READ_BITS(fd fd_auto_snd_pcm_oss, cmd const[SOUND_PCM_READ_BITS], arg ptr[in, int32]) (automatic)
ioctl$auto_SNDCTL_DSP_SETFMT(fd fd_auto_snd_pcm_oss, cmd const[SNDCTL_DSP_SETFMT], arg ptr[in, array[int8]]) (automatic)
ioctl$auto_SNDCTL_DSP_GETBLKSIZE(fd fd_auto_snd_pcm_oss, cmd const[SNDCTL_DSP_GETBLKSIZE], arg ptr[in, array[int8]]) (automatic)
ioctl$auto_SNDCTL_DSP_STEREO(fd fd_auto_snd_pcm_oss, cmd const[SNDCTL_DSP_STEREO], arg ptr[in, array[int8]]) (automatic)
ioctl$auto_SOUND_PCM_READ_RATE(fd fd_auto_snd_pcm_oss, cmd const[SOUND_PCM_READ_RATE], arg ptr[in, int32]) (automatic)
ioctl$auto_SNDCTL_DSP_SPEED(fd fd_auto_snd_pcm_oss, cmd const[SNDCTL_DSP_SPEED], arg ptr[in, array[int8]]) (automatic)
ioctl$auto_SNDCTL_DSP_SYNC(fd fd_auto_snd_pcm_oss, cmd const[SNDCTL_DSP_SYNC], arg const[0]) (automatic)
ioctl$auto_SNDCTL_DSP_RESET(fd fd_auto_snd_pcm_oss, cmd const[SNDCTL_DSP_RESET], arg const[0]) (automatic)

# fops: open:snd_pcm_playback_open write:snd_pcm_write mmap:snd_pcm_mmap ioctl:snd_pcm_ioctl
resource fd_auto_snd_pcm2[fd]
auto_snd_pcm2_files = "/dev/snd/pcmC0D0p", "/dev/snd/pcmC1D0p", "/dev/snd/pcmC1D1p"
openat$auto_snd_pcm2(fd const[AT_FDCWD], file ptr[in, string[auto_snd_pcm2_files]], flags flags[open_flags], mode const[0]) fd_auto_snd_pcm2 (automatic)
write$auto_snd_pcm2(fd fd_auto_snd_pcm2, buf ptr[in, array[int8]], len bytesize[buf]) (automatic)
mmap$auto_snd_pcm2(addr vma, len len[addr], prot flags[mmap_prot], flags flags[mmap_flags], fd fd_auto_snd_pcm2, offset fileoff) (automatic)
ioctl$auto_snd_pcm2(fd fd_auto_snd_pcm2, cmd intptr, arg ptr[in, array[int8]]) (automatic)

# fops: open:snd_seq_open read:snd_seq_read write:snd_seq_write ioctl:snd_seq_ioctl
resource fd_auto_snd_seq[fd]
openat$auto_snd_seq(fd const[AT_FDCWD], file ptr[in, string["/dev/snd/seq"]], flags flags[open_flags], mode const[0]) fd_auto_snd_seq (automatic)
read$auto_snd_seq(fd fd_auto_snd_seq, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)
write$auto_snd_seq(fd fd_auto_snd_seq, buf ptr[in, array[int8]], len bytesize[buf]) (automatic)
ioctl$auto_snd_seq(fd fd_auto_snd_seq, cmd intptr, arg ptr[in, array[int8]]) (automatic)

# fops: open:snd_timer_user_open read:snd_timer_user_read ioctl:snd_timer_user_ioctl
resource fd_auto_snd_timer_user[fd]
openat$auto_snd_timer_user(fd const[AT_FDCWD], file ptr[in, string["/dev/snd/timer"]], flags flags[open_flags], mode const[0]) fd_auto_snd_timer_user (automatic)
read$auto_snd_timer_user(fd fd_auto_snd_timer_user, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)
ioctl$auto_snd_timer_user(fd fd_auto_snd_timer_user, cmd intptr, arg ptr[in, array[int8]]) (automatic)

# fops: open:stat_open read:seq_read
resource fd_auto_stat[fd]
openat$auto_stat(fd const[AT_FDCWD], file ptr[in, string["/sys/kernel/debug/f2fs/status"]], flags flags[open_flags], mode const[0]) fd_auto_stat (automatic)
read$auto_stat(fd fd_auto_stat, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)

# fops: open:state_open read:seq_read
resource fd_auto_state[fd]
openat$auto_state(fd const[AT_FDCWD], file ptr[in, string["/sys/kernel/debug/binder/state"]], flags flags[open_flags], mode const[0]) fd_auto_state (automatic)
read$auto_state(fd fd_auto_state, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)

# fops: open:stats_fop_open read:seq_read
resource fd_auto_stats_fop[fd]
openat$auto_stats_fop(fd const[AT_FDCWD], file ptr[in, string["/sys/kernel/debug/o2net/stats"]], flags flags[open_flags], mode const[0]) fd_auto_stats_fop (automatic)
read$auto_stats_fop(fd fd_auto_stats_fop, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)

# fops: open:stats_open read:seq_read
resource fd_auto_stats[fd]
auto_stats_files = "/sys/kernel/debug/binder/stats", "/sys/kernel/debug/kfence/stats"
openat$auto_stats(fd const[AT_FDCWD], file ptr[in, string[auto_stats_files]], flags flags[open_flags], mode const[0]) fd_auto_stats (automatic)
read$auto_stats(fd fd_auto_stats, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)

# fops: open:subsystem_open read:subsystem_filter_read write:subsystem_filter_write
resource fd_auto_subsystem[fd]
auto_subsystem_files = "/sys/kernel/debug/tracing/events/vmalloc/filter", "/sys/kernel/tracing/events/vmalloc/filter"
openat$auto_subsystem(fd const[AT_FDCWD], file ptr[in, string[auto_subsystem_files]], flags flags[open_flags], mode const[0]) fd_auto_subsystem (automatic)
read$auto_subsystem(fd fd_auto_subsystem, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)
write$auto_subsystem(fd fd_auto_subsystem, buf ptr[in, array[int8]], len bytesize[buf]) (automatic)

# fops: open:supply_map_open read:seq_read
resource fd_auto_supply_map[fd]
openat$auto_supply_map(fd const[AT_FDCWD], file ptr[in, string["/sys/kernel/debug/regulator/supply_map"]], flags flags[open_flags], mode const[0]) fd_auto_supply_map (automatic)
read$auto_supply_map(fd fd_auto_supply_map, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)

# fops: open:suspend_stats_open read:seq_read
resource fd_auto_suspend_stats[fd]
openat$auto_suspend_stats(fd const[AT_FDCWD], file ptr[in, string["/sys/kernel/debug/suspend_stats"]], flags flags[open_flags], mode const[0]) fd_auto_suspend_stats (automatic)
read$auto_suspend_stats(fd fd_auto_suspend_stats, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)

# fops: open:sw_sync_debugfs_open ioctl:sw_sync_ioctl
resource fd_auto_sw_sync[fd]
openat$auto_sw_sync(fd const[AT_FDCWD], file ptr[in, string["/sys/kernel/debug/sync/sw_sync"]], flags flags[open_flags], mode const[0]) fd_auto_sw_sync (automatic)
ioctl$auto_SW_SYNC_GET_DEADLINE(fd fd_auto_sw_sync, cmd const[SW_SYNC_GET_DEADLINE], arg ptr[in, array[int8]]) (automatic)
ioctl$auto_SW_SYNC_IOC_INC(fd fd_auto_sw_sync, cmd const[SW_SYNC_IOC_INC], arg ptr[inout, int32]) (automatic)
ioctl$auto_SW_SYNC_IOC_CREATE_FENCE(fd fd_auto_sw_sync, cmd const[SW_SYNC_IOC_CREATE_FENCE], arg ptr[in, array[int8]]) (automatic)

# fops: open:sync_info_debugfs_open read:seq_read
resource fd_auto_sync_info_debugfs[fd]
openat$auto_sync_info_debugfs(fd const[AT_FDCWD], file ptr[in, string["/sys/kernel/debug/sync/info"]], flags flags[open_flags], mode const[0]) fd_auto_sync_info_debugfs (automatic)
read$auto_sync_info_debugfs(fd fd_auto_sync_info_debugfs, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)

# fops: open:timerslack_ns_open read:seq_read write:timerslack_ns_write
resource fd_auto_timerslack_ns[fd]
openat$auto_timerslack_ns(fd const[AT_FDCWD], file ptr[in, string["/proc/self/timerslack_ns"]], flags flags[open_flags], mode const[0]) fd_auto_timerslack_ns (automatic)
read$auto_timerslack_ns(fd fd_auto_timerslack_ns, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)
write$auto_timerslack_ns(fd fd_auto_timerslack_ns, buf ptr[in, array[int8]], len bytesize[buf]) (automatic)

# fops: open:tk_debug_sleep_time_open read:seq_read
resource fd_auto_tk_debug_sleep_time[fd]
openat$auto_tk_debug_sleep_time(fd const[AT_FDCWD], file ptr[in, string["/sys/kernel/debug/sleep_time"]], flags flags[open_flags], mode const[0]) fd_auto_tk_debug_sleep_time (automatic)
read$auto_tk_debug_sleep_time(fd fd_auto_tk_debug_sleep_time, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)

# fops: open:tomoyo_open read:tomoyo_read write:tomoyo_write
resource fd_auto_tomoyo[fd]
auto_tomoyo_files = "/sys/kernel/security/tomoyo/audit", "/sys/kernel/security/tomoyo/domain_policy", "/sys/kernel/security/tomoyo/exception_policy", "/sys/kernel/security/tomoyo/manager", "/sys/kernel/security/tomoyo/profile", "/sys/kernel/security/tomoyo/query", "/sys/kernel/security/tomoyo/stat", "/sys/kernel/security/tomoyo/version"
openat$auto_tomoyo(fd const[AT_FDCWD], file ptr[in, string[auto_tomoyo_files]], flags flags[open_flags], mode const[0]) fd_auto_tomoyo (automatic)
read$auto_tomoyo(fd fd_auto_tomoyo, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)
write$auto_tomoyo(fd fd_auto_tomoyo, buf ptr[in, array[int8]], len bytesize[buf]) (automatic)

# fops: open:total_size_fops_open read:debugfs_attr_read write:debugfs_attr_write
resource fd_auto21[fd]
openat$auto21(fd const[AT_FDCWD], file ptr[in, string["/sys/kernel/debug/zswap/pool_total_size"]], flags flags[open_flags], mode const[0]) fd_auto21 (automatic)
read$auto21(fd fd_auto21, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)
write$auto21(fd fd_auto21, buf ptr[in, array[int8]], len bytesize[buf]) (automatic)

# fops: open:trace_format_open read:seq_read
resource fd_auto_trace_format[fd]
auto_trace_format_files = "/sys/kernel/debug/tracing/events/vmalloc/alloc_vmap_area/format", "/sys/kernel/debug/tracing/events/vmalloc/free_vmap_area_noflush/format", "/sys/kernel/debug/tracing/events/vmalloc/purge_vmap_area_lazy/format", "/sys/kernel/tracing/events/vmalloc/alloc_vmap_area/format", "/sys/kernel/tracing/events/vmalloc/free_vmap_area_noflush/format", "/sys/kernel/tracing/events/vmalloc/purge_vmap_area_lazy/format"
openat$auto_trace_format(fd const[AT_FDCWD], file ptr[in, string[auto_trace_format_files]], flags flags[open_flags], mode const[0]) fd_auto_trace_format (automatic)
read$auto_trace_format(fd fd_auto_trace_format, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)

# fops: open:trace_open read:seq_read
resource fd_auto_trace[fd]
openat$auto_trace(fd const[AT_FDCWD], file ptr[in, string["/sys/kernel/debug/ras/daemon_active"]], flags flags[open_flags], mode const[0]) fd_auto_trace (automatic)
read$auto_trace(fd fd_auto_trace, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)

# fops: open:tracing_buffers_open read:tracing_buffers_read mmap:tracing_buffers_mmap ioctl:tracing_buffers_ioctl
resource fd_auto_tracing_buffers[fd]
openat$auto_tracing_buffers(fd const[AT_FDCWD], file ptr[in, string["/sys/kernel/debug/tracing/per_cpu/cpu0/trace_pipe_raw"]], flags flags[open_flags], mode const[0]) fd_auto_tracing_buffers (automatic)
read$auto_tracing_buffers(fd fd_auto_tracing_buffers, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)
mmap$auto_tracing_buffers(addr vma, len len[addr], prot flags[mmap_prot], flags flags[mmap_flags], fd fd_auto_tracing_buffers, offset fileoff) (automatic)
ioctl$auto_tracing_buffers(fd fd_auto_tracing_buffers, cmd intptr, arg ptr[in, array[int8]]) (automatic)

# fops: open:tracing_clock_open read:seq_read write:tracing_clock_write
resource fd_auto_tracing_clock[fd]
auto_tracing_clock_files = "/sys/kernel/debug/tracing/trace_clock", "/sys/kernel/tracing/trace_clock"
openat$auto_tracing_clock(fd const[AT_FDCWD], file ptr[in, string[auto_tracing_clock_files]], flags flags[open_flags], mode const[0]) fd_auto_tracing_clock (automatic)
read$auto_tracing_clock(fd fd_auto_tracing_clock, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)
write$auto_tracing_clock(fd fd_auto_tracing_clock, buf ptr[in, array[int8]], len bytesize[buf]) (automatic)

# fops: open:tracing_err_log_open read:seq_read write:tracing_err_log_write
resource fd_auto_tracing_err_log[fd]
auto_tracing_err_log_files = "/sys/kernel/debug/tracing/error_log", "/sys/kernel/tracing/error_log"
openat$auto_tracing_err_log(fd const[AT_FDCWD], file ptr[in, string[auto_tracing_err_log_files]], flags flags[open_flags], mode const[0]) fd_auto_tracing_err_log (automatic)
read$auto_tracing_err_log(fd fd_auto_tracing_err_log, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)
write$auto_tracing_err_log(fd fd_auto_tracing_err_log, buf ptr[in, array[int8]], len bytesize[buf]) (automatic)

# fops: open:tracing_mark_open write:tracing_mark_raw_write
resource fd_auto_tracing_mark[fd]
auto_tracing_mark_files = "/sys/kernel/debug/tracing/trace_marker_raw", "/sys/kernel/tracing/trace_marker_raw"
openat$auto_tracing_mark(fd const[AT_FDCWD], file ptr[in, string[auto_tracing_mark_files]], flags flags[open_flags], mode const[0]) fd_auto_tracing_mark (automatic)
write$auto_tracing_mark(fd fd_auto_tracing_mark, buf ptr[in, array[int8]], len bytesize[buf]) (automatic)

# fops: open:tracing_open read:seq_read write:tracing_write_stub
resource fd_auto_tracing[fd]
auto_tracing_files = "/sys/kernel/debug/tracing/per_cpu/cpu0/trace", "/sys/kernel/debug/tracing/per_cpu/cpu1/trace", "/sys/kernel/debug/tracing/trace", "/sys/kernel/tracing/per_cpu/cpu0/trace", "/sys/kernel/tracing/per_cpu/cpu1/trace", "/sys/kernel/tracing/trace"
openat$auto_tracing(fd const[AT_FDCWD], file ptr[in, string[auto_tracing_files]], flags flags[open_flags], mode const[0]) fd_auto_tracing (automatic)
read$auto_tracing(fd fd_auto_tracing, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)
write$auto_tracing(fd fd_auto_tracing, buf ptr[in, array[int8]], len bytesize[buf]) (automatic)

# fops: open:tracing_open_file_tr read:event_enable_read write:event_enable_write
resource fd_auto22[fd]
auto22_files = "/sys/kernel/debug/tracing/events/vmalloc/alloc_vmap_area/enable", "/sys/kernel/debug/tracing/events/vmalloc/free_vmap_area_noflush/enable", "/sys/kernel/debug/tracing/events/vmalloc/purge_vmap_area_lazy/enable", "/sys/kernel/tracing/events/vmalloc/alloc_vmap_area/enable", "/sys/kernel/tracing/events/vmalloc/free_vmap_area_noflush/enable", "/sys/kernel/tracing/events/vmalloc/purge_vmap_area_lazy/enable"
openat$auto22(fd const[AT_FDCWD], file ptr[in, string[auto22_files]], flags flags[open_flags], mode const[0]) fd_auto22 (automatic)
read$auto22(fd fd_auto22, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)
write$auto22(fd fd_auto22, buf ptr[in, array[int8]], len bytesize[buf]) (automatic)

# fops: open:tracing_open_generic_tr read:buffer_percent_read write:buffer_percent_write
resource fd_auto23[fd]
auto23_files = "/sys/kernel/debug/tracing/buffer_percent", "/sys/kernel/tracing/buffer_percent"
openat$auto23(fd const[AT_FDCWD], file ptr[in, string[auto23_files]], flags flags[open_flags], mode const[0]) fd_auto23 (automatic)
read$auto23(fd fd_auto23, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)
write$auto23(fd fd_auto23, buf ptr[in, array[int8]], len bytesize[buf]) (automatic)

# fops: open:tracing_open_options read:trace_options_read write:trace_options_write
resource fd_auto_options[fd]
auto_options_files = "/sys/kernel/debug/tracing/options/blk_cgname", "/sys/kernel/debug/tracing/options/blk_cgroup", "/sys/kernel/debug/tracing/options/blk_classic", "/sys/kernel/debug/tracing/options/test_nop_accept", "/sys/kernel/debug/tracing/options/test_nop_refuse", "/sys/kernel/tracing/options/blk_cgname", "/sys/kernel/tracing/options/blk_cgroup", "/sys/kernel/tracing/options/blk_classic", "/sys/kernel/tracing/options/test_nop_accept", "/sys/kernel/tracing/options/test_nop_refuse"
openat$auto_options(fd const[AT_FDCWD], file ptr[in, string[auto_options_files]], flags flags[open_flags], mode const[0]) fd_auto_options (automatic)
read$auto_options(fd fd_auto_options, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)
write$auto_options(fd fd_auto_options, buf ptr[in, array[int8]], len bytesize[buf]) (automatic)

# fops: open:tracing_saved_cmdlines_open read:seq_read
resource fd_auto_tracing_saved_cmdlines[fd]
auto_tracing_saved_cmdlines_files = "/sys/kernel/debug/tracing/saved_cmdlines", "/sys/kernel/tracing/saved_cmdlines"
openat$auto_tracing_saved_cmdlines(fd const[AT_FDCWD], file ptr[in, string[auto_tracing_saved_cmdlines_files]], flags flags[open_flags], mode const[0]) fd_auto_tracing_saved_cmdlines (automatic)
read$auto_tracing_saved_cmdlines(fd fd_auto_tracing_saved_cmdlines, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)

# fops: open:tracing_saved_tgids_open read:seq_read
resource fd_auto_tracing_saved_tgids[fd]
auto_tracing_saved_tgids_files = "/sys/kernel/debug/tracing/saved_tgids", "/sys/kernel/tracing/saved_tgids"
openat$auto_tracing_saved_tgids(fd const[AT_FDCWD], file ptr[in, string[auto_tracing_saved_tgids_files]], flags flags[open_flags], mode const[0]) fd_auto_tracing_saved_tgids (automatic)
read$auto_tracing_saved_tgids(fd fd_auto_tracing_saved_tgids, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)

# fops: open:tracing_time_stamp_mode_open read:seq_read
resource fd_auto_tracing_time_stamp_mode[fd]
auto_tracing_time_stamp_mode_files = "/sys/kernel/debug/tracing/timestamp_mode", "/sys/kernel/tracing/timestamp_mode"
openat$auto_tracing_time_stamp_mode(fd const[AT_FDCWD], file ptr[in, string[auto_tracing_time_stamp_mode_files]], flags flags[open_flags], mode const[0]) fd_auto_tracing_time_stamp_mode (automatic)
read$auto_tracing_time_stamp_mode(fd fd_auto_tracing_time_stamp_mode, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)

# fops: open:tracing_trace_options_open read:seq_read write:tracing_trace_options_write
resource fd_auto_tracing_trace_options[fd]
auto_tracing_trace_options_files = "/sys/kernel/debug/tracing/trace_options", "/sys/kernel/tracing/trace_options"
openat$auto_tracing_trace_options(fd const[AT_FDCWD], file ptr[in, string[auto_tracing_trace_options_files]], flags flags[open_flags], mode const[0]) fd_auto_tracing_trace_options (automatic)
read$auto_tracing_trace_options(fd fd_auto_tracing_trace_options, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)
write$auto_tracing_trace_options(fd fd_auto_tracing_trace_options, buf ptr[in, array[int8]], len bytesize[buf]) (automatic)

# fops: open:transaction_log_open read:seq_read
resource fd_auto_transaction_log[fd]
auto_transaction_log_files = "/sys/kernel/debug/binder/failed_transaction_log", "/sys/kernel/debug/binder/transaction_log"
openat$auto_transaction_log(fd const[AT_FDCWD], file ptr[in, string[auto_transaction_log_files]], flags flags[open_flags], mode const[0]) fd_auto_transaction_log (automatic)
read$auto_transaction_log(fd fd_auto_transaction_log, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)

# fops: open:transactions_open read:seq_read
resource fd_auto_transactions[fd]
openat$auto_transactions(fd const[AT_FDCWD], file ptr[in, string["/sys/kernel/debug/binder/transactions"]], flags flags[open_flags], mode const[0]) fd_auto_transactions (automatic)
read$auto_transactions(fd fd_auto_transactions, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)

# fops: open:tun_chr_open read:tun_chr_read_iter write:tun_chr_write_iter ioctl:tun_chr_ioctl
resource fd_auto_tun_chr[fd]
openat$auto_tun_chr(fd const[AT_FDCWD], file ptr[in, string["/dev/net/tun"]], flags flags[open_flags], mode const[0]) fd_auto_tun_chr (automatic)
read$auto_tun_chr(fd fd_auto_tun_chr, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)
write$auto_tun_chr(fd fd_auto_tun_chr, buf ptr[in, array[int8]], len bytesize[buf]) (automatic)
ioctl$auto_tun_chr(fd fd_auto_tun_chr, cmd intptr, arg ptr[in, array[int8]]) (automatic)

# fops: open:ucma_open write:ucma_write
resource fd_auto_ucma[fd]
openat$auto_ucma(fd const[AT_FDCWD], file ptr[in, string["/dev/infiniband/rdma_cm"]], flags flags[open_flags], mode const[0]) fd_auto_ucma (automatic)
write$auto_ucma(fd fd_auto_ucma, buf ptr[in, array[int8]], len bytesize[buf]) (automatic)

# fops: open:uinput_open read:uinput_read write:uinput_write ioctl:uinput_ioctl
resource fd_auto_uinput[fd]
openat$auto_uinput(fd const[AT_FDCWD], file ptr[in, string["/dev/uinput"]], flags flags[open_flags], mode const[0]) fd_auto_uinput (automatic)
read$auto_uinput(fd fd_auto_uinput, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)
write$auto_uinput(fd fd_auto_uinput, buf ptr[in, array[int8]], len bytesize[buf]) (automatic)
ioctl$auto_uinput(fd fd_auto_uinput, cmd intptr, arg ptr[in, array[int8]]) (automatic)

# fops: open:usbdev_open read:usbdev_read mmap:usbdev_mmap ioctl:usbdev_ioctl
resource fd_auto_usbdev[fd]
auto_usbdev_files = "/dev/bus/usb/001/001", "/dev/bus/usb/002/001", "/dev/bus/usb/003/001", "/dev/bus/usb/004/001", "/dev/bus/usb/005/001", "/dev/bus/usb/006/001", "/dev/bus/usb/007/001", "/dev/bus/usb/008/001", "/dev/bus/usb/009/001", "/dev/bus/usb/010/001", "/dev/bus/usb/011/001", "/dev/bus/usb/012/001", "/dev/bus/usb/013/001", "/dev/bus/usb/014/001", "/dev/bus/usb/015/001", "/dev/bus/usb/016/001", "/dev/bus/usb/017/001", "/dev/bus/usb/018/001", "/dev/bus/usb/019/001", "/dev/bus/usb/020/001", "/dev/bus/usb/021/001", "/dev/bus/usb/022/001", "/dev/bus/usb/023/001", "/dev/bus/usb/024/001", "/dev/bus/usb/025/001", "/dev/bus/usb/026/001", "/dev/bus/usb/027/001", "/dev/bus/usb/028/001", "/dev/bus/usb/029/001", "/dev/bus/usb/030/001", "/dev/bus/usb/031/001", "/dev/bus/usb/032/001", "/dev/bus/usb/033/001", "/dev/bus/usb/034/001", "/dev/bus/usb/035/001", "/dev/bus/usb/036/001", "/dev/bus/usb/037/001", "/dev/bus/usb/038/001", "/dev/bus/usb/039/001", "/dev/bus/usb/040/001"
openat$auto_usbdev(fd const[AT_FDCWD], file ptr[in, string[auto_usbdev_files]], flags flags[open_flags], mode const[0]) fd_auto_usbdev (automatic)
read$auto_usbdev(fd fd_auto_usbdev, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)
mmap$auto_usbdev(addr vma, len len[addr], prot flags[mmap_prot], flags flags[mmap_flags], fd fd_auto_usbdev, offset fileoff) (automatic)
ioctl$auto_usbdev(fd fd_auto_usbdev, cmd intptr, arg ptr[in, array[int8]]) (automatic)

# fops: open:v4l2_open read:v4l2_read write:v4l2_write mmap:v4l2_mmap ioctl:v4l2_ioctl
resource fd_auto_v4l2[fd]
auto_v4l2_files = "/dev/radio0", "/dev/radio1", "/dev/radio10", "/dev/radio11", "/dev/radio12", "/dev/radio13", "/dev/radio14", "/dev/radio15", "/dev/radio16", "/dev/radio17", "/dev/radio18", "/dev/radio19", "/dev/radio2", "/dev/radio20", "/dev/radio21", "/dev/radio22", "/dev/radio23", "/dev/radio24", "/dev/radio25", "/dev/radio26", "/dev/radio27", "/dev/radio28", "/dev/radio29", "/dev/radio3", "/dev/radio30", "/dev/radio31", "/dev/radio4", "/dev/radio5", "/dev/radio6", "/dev/radio7", "/dev/radio8", "/dev/radio9", "/dev/swradio0", "/dev/swradio1", "/dev/swradio10", "/dev/swradio11", "/dev/swradio12", "/dev/swradio13", "/dev/swradio14", "/dev/swradio15", "/dev/swradio2", "/dev/swradio3", "/dev/swradio4", "/dev/swradio5", "/dev/swradio6", "/dev/swradio7", "/dev/swradio8", "/dev/swradio9", "/dev/v4l-subdev0", "/dev/v4l-subdev1", "/dev/v4l-subdev2", "/dev/v4l-subdev3", "/dev/v4l-subdev4", "/dev/v4l-subdev5", "/dev/v4l-subdev6", "/dev/v4l-subdev7", "/dev/v4l-touch0", "/dev/v4l-touch1", "/dev/v4l-touch10", "/dev/v4l-touch11", "/dev/v4l-touch12", "/dev/v4l-touch13", "/dev/v4l-touch14", "/dev/v4l-touch15", "/dev/v4l-touch2", "/dev/v4l-touch3", "/dev/v4l-touch4", "/dev/v4l-touch5", "/dev/v4l-touch6", "/dev/v4l-touch7", "/dev/v4l-touch8", "/dev/v4l-touch9", "/dev/vbi0", "/dev/vbi1", "/dev/vbi10", "/dev/vbi11", "/dev/vbi12", "/dev/vbi13", "/dev/vbi14", "/dev/vbi15", "/dev/vbi16", "/dev/vbi17", "/dev/vbi18", "/dev/vbi19", "/dev/vbi2", "/dev/vbi20", "/dev/vbi21", "/dev/vbi22", "/dev/vbi23", "/dev/vbi24", "/dev/vbi25", "/dev/vbi26", "/dev/vbi27", "/dev/vbi28", "/dev/vbi29", "/dev/vbi3", "/dev/vbi30", "/dev/vbi31", "/dev/vbi4", "/dev/vbi5", "/dev/vbi6", "/dev/vbi7", "/dev/vbi8", "/dev/vbi9", "/dev/video0", "/dev/video1", "/dev/video10", "/dev/video11", "/dev/video12", "/dev/video13", "/dev/video14", "/dev/video15", "/dev/video16", "/dev/video17", "/dev/video18", "/dev/video19", "/dev/video2", "/dev/video20", "/dev/video21", "/dev/video22", "/dev/video23", "/dev/video24", "/dev/video25", "/dev/video26", "/dev/video27", "/dev/video28", "/dev/video29", "/dev/video3", "/dev/video30", "/dev/video31", "/dev/video32", "/dev/video33", "/dev/video34", "/dev/video35", "/dev/video36", "/dev/video37", "/dev/video38", "/dev/video39", "/dev/video4", "/dev/video40", "/dev/video41", "/dev/video42", "/dev/video43", "/dev/video44", "/dev/video45", "/dev/video46", "/dev/video47", "/dev/video48", "/dev/video49", "/dev/video5", "/dev/video50", "/dev/video51", "/dev/video52", "/dev/video53", "/dev/video54", "/dev/video55", "/dev/video56", "/dev/video57", "/dev/video58", "/dev/video59", "/dev/video6", "/dev/video60", "/dev/video61", "/dev/video62", "/dev/video63", "/dev/video64", "/dev/video65", "/dev/video66", "/dev/video67", "/dev/video68", "/dev/video69", "/dev/video7", "/dev/video70", "/dev/video8", "/dev/video9"
openat$auto_v4l2(fd const[AT_FDCWD], file ptr[in, string[auto_v4l2_files]], flags flags[open_flags], mode const[0]) fd_auto_v4l2 (automatic)
read$auto_v4l2(fd fd_auto_v4l2, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)
write$auto_v4l2(fd fd_auto_v4l2, buf ptr[in, array[int8]], len bytesize[buf]) (automatic)
mmap$auto_v4l2(addr vma, len len[addr], prot flags[mmap_prot], flags flags[mmap_flags], fd fd_auto_v4l2, offset fileoff) (automatic)
ioctl$auto_v4l2(fd fd_auto_v4l2, cmd intptr, arg ptr[in, array[int8]]) (automatic)

# fops: open:vcpu_stat_fops_open read:simple_attr_read write:simple_attr_write
resource fd_auto_vcpu_stat[fd]
auto_vcpu_stat_files = "/sys/kernel/debug/kvm/directed_yield_attempted", "/sys/kernel/debug/kvm/directed_yield_successful", "/sys/kernel/debug/kvm/exits", "/sys/kernel/debug/kvm/fpu_reload", "/sys/kernel/debug/kvm/halt_attempted_poll", "/sys/kernel/debug/kvm/halt_exits", "/sys/kernel/debug/kvm/halt_poll_fail_hist", "/sys/kernel/debug/kvm/halt_poll_fail_ns", "/sys/kernel/debug/kvm/halt_poll_invalid", "/sys/kernel/debug/kvm/halt_poll_success_hist", "/sys/kernel/debug/kvm/halt_poll_success_ns", "/sys/kernel/debug/kvm/halt_successful_poll", "/sys/kernel/debug/kvm/halt_wait_hist", "/sys/kernel/debug/kvm/halt_wait_ns", "/sys/kernel/debug/kvm/halt_wakeup", "/sys/kernel/debug/kvm/host_state_reload", "/sys/kernel/debug/kvm/hypercalls", "/sys/kernel/debug/kvm/insn_emulation", "/sys/kernel/debug/kvm/insn_emulation_fail", "/sys/kernel/debug/kvm/invlpg", "/sys/kernel/debug/kvm/io_exits", "/sys/kernel/debug/kvm/irq_exits", "/sys/kernel/debug/kvm/irq_injections", "/sys/kernel/debug/kvm/irq_window_exits", "/sys/kernel/debug/kvm/l1d_flush", "/sys/kernel/debug/kvm/mmio_exits", "/sys/kernel/debug/kvm/nested_run", "/sys/kernel/debug/kvm/nmi_injections", "/sys/kernel/debug/kvm/nmi_window_exits", "/sys/kernel/debug/kvm/notify_window_exits", "/sys/kernel/debug/kvm/pf_emulate", "/sys/kernel/debug/kvm/pf_fast", "/sys/kernel/debug/kvm/pf_fixed", "/sys/kernel/debug/kvm/pf_guest", "/sys/kernel/debug/kvm/pf_mmio_spte_created", "/sys/kernel/debug/kvm/pf_spurious", "/sys/kernel/debug/kvm/pf_taken", "/sys/kernel/debug/kvm/preemption_other", "/sys/kernel/debug/kvm/preemption_reported", "/sys/kernel/debug/kvm/req_event", "/sys/kernel/debug/kvm/request_irq_exits", "/sys/kernel/debug/kvm/signal_exits", "/sys/kernel/debug/kvm/tlb_flush"
openat$auto_vcpu_stat(fd const[AT_FDCWD], file ptr[in, string[auto_vcpu_stat_files]], flags flags[open_flags], mode const[0]) fd_auto_vcpu_stat (automatic)
read$auto_vcpu_stat(fd fd_auto_vcpu_stat, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)
write$auto_vcpu_stat(fd fd_auto_vcpu_stat, buf ptr[in, array[int8]], len bytesize[buf]) (automatic)

# fops: open:vcpu_stat_readonly_fops_open read:simple_attr_read write:simple_attr_write
resource fd_auto_vcpu_stat_readonly[fd]
auto_vcpu_stat_readonly_files = "/sys/kernel/debug/kvm/blocking", "/sys/kernel/debug/kvm/guest_mode"
openat$auto_vcpu_stat_readonly(fd const[AT_FDCWD], file ptr[in, string[auto_vcpu_stat_readonly_files]], flags flags[open_flags], mode const[0]) fd_auto_vcpu_stat_readonly (automatic)
read$auto_vcpu_stat_readonly(fd fd_auto_vcpu_stat_readonly, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)
write$auto_vcpu_stat_readonly(fd fd_auto_vcpu_stat_readonly, buf ptr[in, array[int8]], len bytesize[buf]) (automatic)

# fops: open:vcs_open read:vcs_read write:vcs_write
resource fd_auto_vcs[fd]
auto_vcs_files = "/dev/vcs", "/dev/vcs1", "/dev/vcsa", "/dev/vcsa1", "/dev/vcsu", "/dev/vcsu1"
openat$auto_vcs(fd const[AT_FDCWD], file ptr[in, string[auto_vcs_files]], flags flags[open_flags], mode const[0]) fd_auto_vcs (automatic)
read$auto_vcs(fd fd_auto_vcs, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)
write$auto_vcs(fd fd_auto_vcs, buf ptr[in, array[int8]], len bytesize[buf]) (automatic)

# fops: open:vga_arb_open read:vga_arb_read write:vga_arb_write
resource fd_auto_vga_arb[fd]
openat$auto_vga_arb(fd const[AT_FDCWD], file ptr[in, string["/dev/vga_arbiter"]], flags flags[open_flags], mode const[0]) fd_auto_vga_arb (automatic)
read$auto_vga_arb(fd fd_auto_vga_arb, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)
write$auto_vga_arb(fd fd_auto_vga_arb, buf ptr[in, array[int8]], len bytesize[buf]) (automatic)

# fops: open:vhci_open read:vhci_read write:vhci_write
resource fd_auto_vhci[fd]
openat$auto_vhci(fd const[AT_FDCWD], file ptr[in, string["/dev/vhci"]], flags flags[open_flags], mode const[0]) fd_auto_vhci (automatic)
read$auto_vhci(fd fd_auto_vhci, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)
write$auto_vhci(fd fd_auto_vhci, buf ptr[in, array[int8]], len bytesize[buf]) (automatic)

# fops: open:vhost_net_open read:vhost_net_chr_read_iter write:vhost_net_chr_write_iter ioctl:vhost_net_ioctl
resource fd_auto_vhost_net[fd]
openat$auto_vhost_net(fd const[AT_FDCWD], file ptr[in, string["/dev/vhost-net"]], flags flags[open_flags], mode const[0]) fd_auto_vhost_net (automatic)
read$auto_vhost_net(fd fd_auto_vhost_net, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)
write$auto_vhost_net(fd fd_auto_vhost_net, buf ptr[in, array[int8]], len bytesize[buf]) (automatic)
ioctl$auto_VHOST_SET_OWNER(fd fd_auto_vhost_net, cmd const[VHOST_SET_OWNER], arg const[0]) (automatic)
ioctl$auto_VHOST_RESET_OWNER(fd fd_auto_vhost_net, cmd const[VHOST_RESET_OWNER], arg const[0]) (automatic)
ioctl$auto_VHOST_SET_BACKEND_FEATURES(fd fd_auto_vhost_net, cmd const[VHOST_SET_BACKEND_FEATURES], arg ptr[inout, int64]) (automatic)
ioctl$auto_VHOST_GET_BACKEND_FEATURES(fd fd_auto_vhost_net, cmd const[VHOST_GET_BACKEND_FEATURES], arg ptr[in, int64]) (automatic)
ioctl$auto_VHOST_SET_FEATURES(fd fd_auto_vhost_net, cmd const[VHOST_SET_FEATURES], arg ptr[inout, int64]) (automatic)
ioctl$auto_VHOST_GET_FEATURES(fd fd_auto_vhost_net, cmd const[VHOST_GET_FEATURES], arg ptr[in, int64]) (automatic)
ioctl$auto_VHOST_NET_SET_BACKEND(fd fd_auto_vhost_net, cmd const[VHOST_NET_SET_BACKEND], arg ptr[inout, vhost_vring_file$auto_record]) (automatic)

# fops: open:vhost_vsock_dev_open read:vhost_vsock_chr_read_iter write:vhost_vsock_chr_write_iter ioctl:vhost_vsock_dev_ioctl
resource fd_auto_vhost_vsock[fd]
openat$auto_vhost_vsock(fd const[AT_FDCWD], file ptr[in, string["/dev/vhost-vsock"]], flags flags[open_flags], mode const[0]) fd_auto_vhost_vsock (automatic)
read$auto_vhost_vsock(fd fd_auto_vhost_vsock, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)
write$auto_vhost_vsock(fd fd_auto_vhost_vsock, buf ptr[in, array[int8]], len bytesize[buf]) (automatic)
ioctl$auto_VHOST_SET_BACKEND_FEATURES2(fd fd_auto_vhost_vsock, cmd const[VHOST_SET_BACKEND_FEATURES], arg ptr[inout, int64]) (automatic)
ioctl$auto_VHOST_GET_BACKEND_FEATURES2(fd fd_auto_vhost_vsock, cmd const[VHOST_GET_BACKEND_FEATURES], arg ptr[in, int64]) (automatic)
ioctl$auto_VHOST_SET_FEATURES2(fd fd_auto_vhost_vsock, cmd const[VHOST_SET_FEATURES], arg ptr[inout, int64]) (automatic)
ioctl$auto_VHOST_GET_FEATURES2(fd fd_auto_vhost_vsock, cmd const[VHOST_GET_FEATURES], arg ptr[in, int64]) (automatic)
ioctl$auto_VHOST_VSOCK_SET_RUNNING(fd fd_auto_vhost_vsock, cmd const[VHOST_VSOCK_SET_RUNNING], arg ptr[inout, int32]) (automatic)
ioctl$auto_VHOST_VSOCK_SET_GUEST_CID(fd fd_auto_vhost_vsock, cmd const[VHOST_VSOCK_SET_GUEST_CID], arg ptr[inout, int64]) (automatic)

# fops: open:vm_stat_fops_open read:simple_attr_read write:simple_attr_write
resource fd_auto_vm_stat[fd]
auto_vm_stat_files = "/sys/kernel/debug/kvm/max_mmu_page_hash_collisions", "/sys/kernel/debug/kvm/max_mmu_rmap_size", "/sys/kernel/debug/kvm/mmu_cache_miss", "/sys/kernel/debug/kvm/mmu_flooded", "/sys/kernel/debug/kvm/mmu_pde_zapped", "/sys/kernel/debug/kvm/mmu_pte_write", "/sys/kernel/debug/kvm/mmu_recycled", "/sys/kernel/debug/kvm/mmu_shadow_zapped", "/sys/kernel/debug/kvm/remote_tlb_flush", "/sys/kernel/debug/kvm/remote_tlb_flush_requests"
openat$auto_vm_stat(fd const[AT_FDCWD], file ptr[in, string[auto_vm_stat_files]], flags flags[open_flags], mode const[0]) fd_auto_vm_stat (automatic)
read$auto_vm_stat(fd fd_auto_vm_stat, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)
write$auto_vm_stat(fd fd_auto_vm_stat, buf ptr[in, array[int8]], len bytesize[buf]) (automatic)

# fops: open:vm_stat_readonly_fops_open read:simple_attr_read write:simple_attr_write
resource fd_auto_vm_stat_readonly[fd]
auto_vm_stat_readonly_files = "/sys/kernel/debug/kvm/mmu_unsync", "/sys/kernel/debug/kvm/nx_lpage_splits", "/sys/kernel/debug/kvm/pages_1g", "/sys/kernel/debug/kvm/pages_2m", "/sys/kernel/debug/kvm/pages_4k"
openat$auto_vm_stat_readonly(fd const[AT_FDCWD], file ptr[in, string[auto_vm_stat_readonly_files]], flags flags[open_flags], mode const[0]) fd_auto_vm_stat_readonly (automatic)
read$auto_vm_stat_readonly(fd fd_auto_vm_stat_readonly, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)
write$auto_vm_stat_readonly(fd fd_auto_vm_stat_readonly, buf ptr[in, array[int8]], len bytesize[buf]) (automatic)

# fops: open:vmci_host_open ioctl:vmci_host_unlocked_ioctl
resource fd_auto_vmci_host[fd]
openat$auto_vmci_host(fd const[AT_FDCWD], file ptr[in, string["/dev/vmci"]], flags flags[open_flags], mode const[0]) fd_auto_vmci_host (automatic)
ioctl$auto_IOCTL_VMCI_VERSION2(fd fd_auto_vmci_host, cmd const[IOCTL_VMCI_VERSION2], arg const[0]) (automatic)
ioctl$auto_IOCTL_VMCI_VERSION(fd fd_auto_vmci_host, cmd const[IOCTL_VMCI_VERSION], arg const[0]) (automatic)
ioctl$auto_IOCTL_VMCI_NOTIFICATIONS_RECEIVE(fd fd_auto_vmci_host, cmd const[IOCTL_VMCI_NOTIFICATIONS_RECEIVE], arg const[0]) (automatic)
ioctl$auto_IOCTL_VMCI_NOTIFY_RESOURCE(fd fd_auto_vmci_host, cmd const[IOCTL_VMCI_NOTIFY_RESOURCE], arg const[0]) (automatic)
ioctl$auto_IOCTL_VMCI_SET_NOTIFY(fd fd_auto_vmci_host, cmd const[IOCTL_VMCI_SET_NOTIFY], arg const[0]) (automatic)
ioctl$auto_IOCTL_VMCI_GET_CONTEXT_ID(fd fd_auto_vmci_host, cmd const[IOCTL_VMCI_GET_CONTEXT_ID], arg const[0]) (automatic)
ioctl$auto_IOCTL_VMCI_CTX_SET_CPT_STATE(fd fd_auto_vmci_host, cmd const[IOCTL_VMCI_CTX_SET_CPT_STATE], arg const[0]) (automatic)
ioctl$auto_IOCTL_VMCI_CTX_GET_CPT_STATE(fd fd_auto_vmci_host, cmd const[IOCTL_VMCI_CTX_GET_CPT_STATE], arg const[0]) (automatic)
ioctl$auto_IOCTL_VMCI_CTX_REMOVE_NOTIFICATION(fd fd_auto_vmci_host, cmd const[IOCTL_VMCI_CTX_REMOVE_NOTIFICATION], arg const[0]) (automatic)
ioctl$auto_IOCTL_VMCI_CTX_ADD_NOTIFICATION(fd fd_auto_vmci_host, cmd const[IOCTL_VMCI_CTX_ADD_NOTIFICATION], arg const[0]) (automatic)
ioctl$auto_IOCTL_VMCI_QUEUEPAIR_DETACH(fd fd_auto_vmci_host, cmd const[IOCTL_VMCI_QUEUEPAIR_DETACH], arg const[0]) (automatic)
ioctl$auto_IOCTL_VMCI_QUEUEPAIR_SETPAGEFILE(fd fd_auto_vmci_host, cmd const[IOCTL_VMCI_QUEUEPAIR_SETPAGEFILE], arg const[0]) (automatic)
ioctl$auto_IOCTL_VMCI_QUEUEPAIR_SETVA(fd fd_auto_vmci_host, cmd const[IOCTL_VMCI_QUEUEPAIR_SETVA], arg const[0]) (automatic)
ioctl$auto_IOCTL_VMCI_QUEUEPAIR_ALLOC(fd fd_auto_vmci_host, cmd const[IOCTL_VMCI_QUEUEPAIR_ALLOC], arg const[0]) (automatic)
ioctl$auto_IOCTL_VMCI_DATAGRAM_RECEIVE(fd fd_auto_vmci_host, cmd const[IOCTL_VMCI_DATAGRAM_RECEIVE], arg const[0]) (automatic)
ioctl$auto_IOCTL_VMCI_DATAGRAM_SEND(fd fd_auto_vmci_host, cmd const[IOCTL_VMCI_DATAGRAM_SEND], arg const[0]) (automatic)
ioctl$auto_IOCTL_VMCI_INIT_CONTEXT(fd fd_auto_vmci_host, cmd const[IOCTL_VMCI_INIT_CONTEXT], arg const[0]) (automatic)

# fops: open:vrr_range_open read:seq_read
resource fd_auto_vrr_range[fd]
auto_vrr_range_files = "/sys/kernel/debug/dri/0000:00:02.0/Virtual-2/vrr_range", "/sys/kernel/debug/dri/vkms/Virtual-1/vrr_range", "/sys/kernel/debug/dri/vkms/Writeback-1/vrr_range"
openat$auto_vrr_range(fd const[AT_FDCWD], file ptr[in, string[auto_vrr_range_files]], flags flags[open_flags], mode const[0]) fd_auto_vrr_range (automatic)
read$auto_vrr_range(fd fd_auto_vrr_range, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)

# fops: open:wakeup_sources_stats_open read:seq_read
resource fd_auto_wakeup_sources_stats[fd]
openat$auto_wakeup_sources_stats(fd const[AT_FDCWD], file ptr[in, string["/sys/kernel/debug/wakeup_sources"]], flags flags[open_flags], mode const[0]) fd_auto_wakeup_sources_stats (automatic)
read$auto_wakeup_sources_stats(fd fd_auto_wakeup_sources_stats, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)

# fops: read:bm_status_read write:bm_status_write
resource fd_auto_bm_status[fd]
openat$auto_bm_status(fd const[AT_FDCWD], file ptr[in, string["/proc/sys/fs/binfmt_misc/status"]], flags flags[open_flags], mode const[0]) fd_auto_bm_status (automatic)
read$auto_bm_status(fd fd_auto_bm_status, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)
write$auto_bm_status(fd fd_auto_bm_status, buf ptr[in, array[int8]], len bytesize[buf]) (automatic)

# fops: read:dev_read write:dev_write
resource fd_auto_dev[fd]
openat$auto_dev(fd const[AT_FDCWD], file ptr[in, string["/dev/dlm_plock"]], flags flags[open_flags], mode const[0]) fd_auto_dev (automatic)
read$auto_dev(fd fd_auto_dev, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)
write$auto_dev(fd fd_auto_dev, buf ptr[in, array[int8]], len bytesize[buf]) (automatic)

# fops: read:dfs_global_file_read write:dfs_global_file_write
resource fd_auto_dfs_global_file[fd]
auto_dfs_global_file_files = "/sys/kernel/debug/ubifs/chk_fs", "/sys/kernel/debug/ubifs/chk_general", "/sys/kernel/debug/ubifs/chk_index", "/sys/kernel/debug/ubifs/chk_lprops", "/sys/kernel/debug/ubifs/chk_orphans", "/sys/kernel/debug/ubifs/tst_recovery"
openat$auto_dfs_global_file(fd const[AT_FDCWD], file ptr[in, string[auto_dfs_global_file_files]], flags flags[open_flags], mode const[0]) fd_auto_dfs_global_file (automatic)
read$auto_dfs_global_file(fd fd_auto_dfs_global_file, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)
write$auto_dfs_global_file(fd fd_auto_dfs_global_file, buf ptr[in, array[int8]], len bytesize[buf]) (automatic)

# fops: read:event_id_read
resource fd_auto_event_id[fd]
auto_event_id_files = "/sys/kernel/debug/tracing/events/vmalloc/alloc_vmap_area/id", "/sys/kernel/debug/tracing/events/vmalloc/free_vmap_area_noflush/id", "/sys/kernel/debug/tracing/events/vmalloc/purge_vmap_area_lazy/id", "/sys/kernel/tracing/events/vmalloc/alloc_vmap_area/id", "/sys/kernel/tracing/events/vmalloc/free_vmap_area_noflush/id", "/sys/kernel/tracing/events/vmalloc/purge_vmap_area_lazy/id"
openat$auto_event_id(fd const[AT_FDCWD], file ptr[in, string[auto_event_id_files]], flags flags[open_flags], mode const[0]) fd_auto_event_id (automatic)
read$auto_event_id(fd fd_auto_event_id, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)

# fops: read:evm_read_key write:evm_write_key
resource fd_auto_evm_key[fd]
openat$auto_evm_key(fd const[AT_FDCWD], file ptr[in, string["/sys/kernel/security/integrity/evm/evm"]], flags flags[open_flags], mode const[0]) fd_auto_evm_key (automatic)
read$auto_evm_key(fd fd_auto_evm_key, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)
write$auto_evm_key(fd fd_auto_evm_key, buf ptr[in, array[int8]], len bytesize[buf]) (automatic)

# fops: read:evm_read_xattrs write:evm_write_xattrs
resource fd_auto_evm_xattrs[fd]
openat$auto_evm_xattrs(fd const[AT_FDCWD], file ptr[in, string["/sys/kernel/security/integrity/evm/evm_xattrs"]], flags flags[open_flags], mode const[0]) fd_auto_evm_xattrs (automatic)
read$auto_evm_xattrs(fd fd_auto_evm_xattrs, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)
write$auto_evm_xattrs(fd fd_auto_evm_xattrs, buf ptr[in, array[int8]], len bytesize[buf]) (automatic)

# fops: read:ima_show_htable_violations
resource fd_auto_ima_show_htable_violations[fd]
openat$auto_ima_show_htable_violations(fd const[AT_FDCWD], file ptr[in, string["/sys/kernel/security/integrity/ima/violations"]], flags flags[open_flags], mode const[0]) fd_auto_ima_show_htable_violations (automatic)
read$auto_ima_show_htable_violations(fd fd_auto_ima_show_htable_violations, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)

# fops: read:ima_show_measurements_count
resource fd_auto_ima_show_measurements_count[fd]
openat$auto_ima_show_measurements_count(fd const[AT_FDCWD], file ptr[in, string["/sys/kernel/security/integrity/ima/runtime_measurements_count"]], flags flags[open_flags], mode const[0]) fd_auto_ima_show_measurements_count (automatic)
read$auto_ima_show_measurements_count(fd fd_auto_ima_show_measurements_count, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)

# fops: read:init_pkru_read_file write:init_pkru_write_file
resource fd_auto_init_pkru_file[fd]
openat$auto_init_pkru_file(fd const[AT_FDCWD], file ptr[in, string["/sys/kernel/debug/x86/init_pkru"]], flags flags[open_flags], mode const[0]) fd_auto_init_pkru_file (automatic)
read$auto_init_pkru_file(fd fd_auto_init_pkru_file, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)
write$auto_init_pkru_file(fd fd_auto_init_pkru_file, buf ptr[in, array[int8]], len bytesize[buf]) (automatic)

# fops: read:lockdown_read write:lockdown_write
resource fd_auto_lockdown[fd]
openat$auto_lockdown(fd const[AT_FDCWD], file ptr[in, string["/sys/kernel/security/lockdown"]], flags flags[open_flags], mode const[0]) fd_auto_lockdown (automatic)
read$auto_lockdown(fd fd_auto_lockdown, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)
write$auto_lockdown(fd fd_auto_lockdown, buf ptr[in, array[int8]], len bytesize[buf]) (automatic)

# fops: read:lsm_read
resource fd_auto_lsm[fd]
openat$auto_lsm(fd const[AT_FDCWD], file ptr[in, string["/sys/kernel/security/lsm"]], flags flags[open_flags], mode const[0]) fd_auto_lsm (automatic)
read$auto_lsm(fd fd_auto_lsm, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)

# fops: read:oom_adj_read write:oom_adj_write
resource fd_auto_oom_adj[fd]
auto_oom_adj_files = "/proc/self/oom_adj", "/proc/thread-self/oom_adj"
openat$auto_oom_adj(fd const[AT_FDCWD], file ptr[in, string[auto_oom_adj_files]], flags flags[open_flags], mode const[0]) fd_auto_oom_adj (automatic)
read$auto_oom_adj(fd fd_auto_oom_adj, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)
write$auto_oom_adj(fd fd_auto_oom_adj, buf ptr[in, array[int8]], len bytesize[buf]) (automatic)

# fops: read:oom_score_adj_read write:oom_score_adj_write
resource fd_auto_oom_score_adj[fd]
auto_oom_score_adj_files = "/proc/self/oom_score_adj", "/proc/thread-self/oom_score_adj"
openat$auto_oom_score_adj(fd const[AT_FDCWD], file ptr[in, string[auto_oom_score_adj_files]], flags flags[open_flags], mode const[0]) fd_auto_oom_score_adj (automatic)
read$auto_oom_score_adj(fd fd_auto_oom_score_adj, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)
write$auto_oom_score_adj(fd fd_auto_oom_score_adj, buf ptr[in, array[int8]], len bytesize[buf]) (automatic)

# fops: read:proc_coredump_filter_read write:proc_coredump_filter_write
resource fd_auto_proc_coredump_filter[fd]
openat$auto_proc_coredump_filter(fd const[AT_FDCWD], file ptr[in, string["/proc/self/coredump_filter"]], flags flags[open_flags], mode const[0]) fd_auto_proc_coredump_filter (automatic)
read$auto_proc_coredump_filter(fd fd_auto_proc_coredump_filter, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)
write$auto_proc_coredump_filter(fd fd_auto_proc_coredump_filter, buf ptr[in, array[int8]], len bytesize[buf]) (automatic)

# fops: read:proc_fail_nth_read write:proc_fail_nth_write
resource fd_auto_proc_fail_nth[fd]
auto_proc_fail_nth_files = "/proc/self/fail-nth", "/proc/thread-self/fail-nth"
openat$auto_proc_fail_nth(fd const[AT_FDCWD], file ptr[in, string[auto_proc_fail_nth_files]], flags flags[open_flags], mode const[0]) fd_auto_proc_fail_nth (automatic)
read$auto_proc_fail_nth(fd fd_auto_proc_fail_nth, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)
write$auto_proc_fail_nth(fd fd_auto_proc_fail_nth, buf ptr[in, array[int8]], len bytesize[buf]) (automatic)

# fops: read:proc_fault_inject_read write:proc_fault_inject_write
resource fd_auto_proc_fault_inject[fd]
auto_proc_fault_inject_files = "/proc/self/make-it-fail", "/proc/thread-self/make-it-fail"
openat$auto_proc_fault_inject(fd const[AT_FDCWD], file ptr[in, string[auto_proc_fault_inject_files]], flags flags[open_flags], mode const[0]) fd_auto_proc_fault_inject (automatic)
read$auto_proc_fault_inject(fd fd_auto_proc_fault_inject, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)
write$auto_proc_fault_inject(fd fd_auto_proc_fault_inject, buf ptr[in, array[int8]], len bytesize[buf]) (automatic)

# fops: read:proc_loginuid_read write:proc_loginuid_write
resource fd_auto_proc_loginuid[fd]
auto_proc_loginuid_files = "/proc/self/loginuid", "/proc/thread-self/loginuid"
openat$auto_proc_loginuid(fd const[AT_FDCWD], file ptr[in, string[auto_proc_loginuid_files]], flags flags[open_flags], mode const[0]) fd_auto_proc_loginuid (automatic)
read$auto_proc_loginuid(fd fd_auto_proc_loginuid, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)
write$auto_proc_loginuid(fd fd_auto_proc_loginuid, buf ptr[in, array[int8]], len bytesize[buf]) (automatic)

# fops: read:proc_pid_cmdline_read
resource fd_auto_proc_pid_cmdline[fd]
auto_proc_pid_cmdline_files = "/proc/self/cmdline", "/proc/thread-self/cmdline"
openat$auto_proc_pid_cmdline(fd const[AT_FDCWD], file ptr[in, string[auto_proc_pid_cmdline_files]], flags flags[open_flags], mode const[0]) fd_auto_proc_pid_cmdline (automatic)
read$auto_proc_pid_cmdline(fd fd_auto_proc_pid_cmdline, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)

# fops: read:proc_sessionid_read
resource fd_auto_proc_sessionid[fd]
auto_proc_sessionid_files = "/proc/self/sessionid", "/proc/thread-self/sessionid"
openat$auto_proc_sessionid(fd const[AT_FDCWD], file ptr[in, string[auto_proc_sessionid_files]], flags flags[open_flags], mode const[0]) fd_auto_proc_sessionid (automatic)
read$auto_proc_sessionid(fd fd_auto_proc_sessionid, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)

# fops: read:random_read_iter write:random_write_iter ioctl:random_ioctl
resource fd_auto_random[fd]
openat$auto_random(fd const[AT_FDCWD], file ptr[in, string["/dev/random"]], flags flags[open_flags], mode const[0]) fd_auto_random (automatic)
read$auto_random(fd fd_auto_random, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)
write$auto_random(fd fd_auto_random, buf ptr[in, array[int8]], len bytesize[buf]) (automatic)
ioctl$auto_RNDRESEEDCRNG(fd fd_auto_random, cmd const[RNDRESEEDCRNG], arg const[0]) (automatic)
ioctl$auto_RNDCLEARPOOL(fd fd_auto_random, cmd const[RNDCLEARPOOL], arg const[0]) (automatic)
ioctl$auto_RNDZAPENTCNT(fd fd_auto_random, cmd const[RNDZAPENTCNT], arg const[0]) (automatic)
ioctl$auto_RNDADDENTROPY(fd fd_auto_random, cmd const[RNDADDENTROPY], arg ptr[inout, array[int32, 2]]) (automatic)
ioctl$auto_RNDADDTOENTCNT(fd fd_auto_random, cmd const[RNDADDTOENTCNT], arg ptr[inout, int32]) (automatic)
ioctl$auto_RNDGETENTCNT(fd fd_auto_random, cmd const[RNDGETENTCNT], arg ptr[in, int32]) (automatic)

# fops: read:read_null write:write_null
resource fd_auto_null[fd]
openat$auto_null(fd const[AT_FDCWD], file ptr[in, string["/dev/null"]], flags flags[open_flags], mode const[0]) fd_auto_null (automatic)
read$auto_null(fd fd_auto_null, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)
write$auto_null(fd fd_auto_null, buf ptr[in, array[int8]], len bytesize[buf]) (automatic)

# fops: read:read_page_owner
resource fd_auto_page_owner[fd]
openat$auto_page_owner(fd const[AT_FDCWD], file ptr[in, string["/sys/kernel/debug/page_owner"]], flags flags[open_flags], mode const[0]) fd_auto_page_owner (automatic)
read$auto_page_owner(fd fd_auto_page_owner, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)

# fops: read:read_zero write:write_null mmap:mmap_zero
resource fd_auto24[fd]
openat$auto24(fd const[AT_FDCWD], file ptr[in, string["/dev/zero"]], flags flags[open_flags], mode const[0]) fd_auto24 (automatic)
read$auto24(fd fd_auto24, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)
write$auto24(fd fd_auto24, buf ptr[in, array[int8]], len bytesize[buf]) (automatic)
mmap$auto24(addr vma, len len[addr], prot flags[mmap_prot], flags flags[mmap_flags], fd fd_auto24, offset fileoff) (automatic)

# fops: read:safesetid_gid_file_read write:safesetid_gid_file_write
resource fd_auto_safesetid_gid_file[fd]
openat$auto_safesetid_gid_file(fd const[AT_FDCWD], file ptr[in, string["/sys/kernel/security/safesetid/gid_allowlist_policy"]], flags flags[open_flags], mode const[0]) fd_auto_safesetid_gid_file (automatic)
read$auto_safesetid_gid_file(fd fd_auto_safesetid_gid_file, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)
write$auto_safesetid_gid_file(fd fd_auto_safesetid_gid_file, buf ptr[in, array[int8]], len bytesize[buf]) (automatic)

# fops: read:safesetid_uid_file_read write:safesetid_uid_file_write
resource fd_auto_safesetid_uid_file[fd]
openat$auto_safesetid_uid_file(fd const[AT_FDCWD], file ptr[in, string["/sys/kernel/security/safesetid/uid_allowlist_policy"]], flags flags[open_flags], mode const[0]) fd_auto_safesetid_uid_file (automatic)
read$auto_safesetid_uid_file(fd fd_auto_safesetid_uid_file, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)
write$auto_safesetid_uid_file(fd fd_auto_safesetid_uid_file, buf ptr[in, array[int8]], len bytesize[buf]) (automatic)

# fops: read:simple_transaction_read write:smk_write_access
resource fd_auto_smk_access[fd]
openat$auto_smk_access(fd const[AT_FDCWD], file ptr[in, string["/sys/fs/smackfs/access"]], flags flags[open_flags], mode const[0]) fd_auto_smk_access (automatic)
read$auto_smk_access(fd fd_auto_smk_access, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)
write$auto_smk_access(fd fd_auto_smk_access, buf ptr[in, array[int8]], len bytesize[buf]) (automatic)

# fops: read:smk_read_ambient write:smk_write_ambient
resource fd_auto_smk_ambient[fd]
openat$auto_smk_ambient(fd const[AT_FDCWD], file ptr[in, string["/sys/fs/smackfs/ambient"]], flags flags[open_flags], mode const[0]) fd_auto_smk_ambient (automatic)
read$auto_smk_ambient(fd fd_auto_smk_ambient, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)
write$auto_smk_ambient(fd fd_auto_smk_ambient, buf ptr[in, array[int8]], len bytesize[buf]) (automatic)

# fops: read:smk_read_direct write:smk_write_direct
resource fd_auto_smk_direct[fd]
openat$auto_smk_direct(fd const[AT_FDCWD], file ptr[in, string["/sys/fs/smackfs/direct"]], flags flags[open_flags], mode const[0]) fd_auto_smk_direct (automatic)
read$auto_smk_direct(fd fd_auto_smk_direct, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)
write$auto_smk_direct(fd fd_auto_smk_direct, buf ptr[in, array[int8]], len bytesize[buf]) (automatic)

# fops: read:smk_read_doi write:smk_write_doi
resource fd_auto_smk_doi[fd]
openat$auto_smk_doi(fd const[AT_FDCWD], file ptr[in, string["/sys/fs/smackfs/doi"]], flags flags[open_flags], mode const[0]) fd_auto_smk_doi (automatic)
read$auto_smk_doi(fd fd_auto_smk_doi, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)
write$auto_smk_doi(fd fd_auto_smk_doi, buf ptr[in, array[int8]], len bytesize[buf]) (automatic)

# fops: read:smk_read_logging write:smk_write_logging
resource fd_auto_smk_logging[fd]
openat$auto_smk_logging(fd const[AT_FDCWD], file ptr[in, string["/sys/fs/smackfs/logging"]], flags flags[open_flags], mode const[0]) fd_auto_smk_logging (automatic)
read$auto_smk_logging(fd fd_auto_smk_logging, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)
write$auto_smk_logging(fd fd_auto_smk_logging, buf ptr[in, array[int8]], len bytesize[buf]) (automatic)

# fops: read:smk_read_mapped write:smk_write_mapped
resource fd_auto_smk_mapped[fd]
openat$auto_smk_mapped(fd const[AT_FDCWD], file ptr[in, string["/sys/fs/smackfs/mapped"]], flags flags[open_flags], mode const[0]) fd_auto_smk_mapped (automatic)
read$auto_smk_mapped(fd fd_auto_smk_mapped, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)
write$auto_smk_mapped(fd fd_auto_smk_mapped, buf ptr[in, array[int8]], len bytesize[buf]) (automatic)

# fops: read:smk_read_ptrace write:smk_write_ptrace
resource fd_auto_smk_ptrace[fd]
openat$auto_smk_ptrace(fd const[AT_FDCWD], file ptr[in, string["/sys/fs/smackfs/ptrace"]], flags flags[open_flags], mode const[0]) fd_auto_smk_ptrace (automatic)
read$auto_smk_ptrace(fd fd_auto_smk_ptrace, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)
write$auto_smk_ptrace(fd fd_auto_smk_ptrace, buf ptr[in, array[int8]], len bytesize[buf]) (automatic)

# fops: read:smk_read_syslog write:smk_write_syslog
resource fd_auto_smk_syslog[fd]
openat$auto_smk_syslog(fd const[AT_FDCWD], file ptr[in, string["/sys/fs/smackfs/syslog"]], flags flags[open_flags], mode const[0]) fd_auto_smk_syslog (automatic)
read$auto_smk_syslog(fd fd_auto_smk_syslog, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)
write$auto_smk_syslog(fd fd_auto_smk_syslog, buf ptr[in, array[int8]], len bytesize[buf]) (automatic)

# fops: read:smk_read_unconfined write:smk_write_unconfined
resource fd_auto_smk_unconfined[fd]
openat$auto_smk_unconfined(fd const[AT_FDCWD], file ptr[in, string["/sys/fs/smackfs/unconfined"]], flags flags[open_flags], mode const[0]) fd_auto_smk_unconfined (automatic)
read$auto_smk_unconfined(fd fd_auto_smk_unconfined, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)
write$auto_smk_unconfined(fd fd_auto_smk_unconfined, buf ptr[in, array[int8]], len bytesize[buf]) (automatic)

# fops: read:tomoyo_read_self write:tomoyo_write_self
resource fd_auto_tomoyo_self[fd]
openat$auto_tomoyo_self(fd const[AT_FDCWD], file ptr[in, string["/sys/kernel/security/tomoyo/self_domain"]], flags flags[open_flags], mode const[0]) fd_auto_tomoyo_self (automatic)
read$auto_tomoyo_self(fd fd_auto_tomoyo_self, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)
write$auto_tomoyo_self(fd fd_auto_tomoyo_self, buf ptr[in, array[int8]], len bytesize[buf]) (automatic)

# fops: read:urandom_read_iter write:random_write_iter ioctl:random_ioctl
resource fd_auto25[fd]
openat$auto25(fd const[AT_FDCWD], file ptr[in, string["/dev/urandom"]], flags flags[open_flags], mode const[0]) fd_auto25 (automatic)
read$auto25(fd fd_auto25, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)
write$auto25(fd fd_auto25, buf ptr[in, array[int8]], len bytesize[buf]) (automatic)
ioctl$auto_RNDRESEEDCRNG2(fd fd_auto25, cmd const[RNDRESEEDCRNG], arg const[0]) (automatic)
ioctl$auto_RNDCLEARPOOL2(fd fd_auto25, cmd const[RNDCLEARPOOL], arg const[0]) (automatic)
ioctl$auto_RNDZAPENTCNT2(fd fd_auto25, cmd const[RNDZAPENTCNT], arg const[0]) (automatic)
ioctl$auto_RNDADDENTROPY2(fd fd_auto25, cmd const[RNDADDENTROPY], arg ptr[inout, array[int32, 2]]) (automatic)
ioctl$auto_RNDADDTOENTCNT2(fd fd_auto25, cmd const[RNDADDTOENTCNT], arg ptr[inout, int32]) (automatic)
ioctl$auto_RNDGETENTCNT2(fd fd_auto25, cmd const[RNDGETENTCNT], arg ptr[in, int32]) (automatic)

# fops: read:usb_device_read
resource fd_auto_usb_device[fd]
openat$auto_usb_device(fd const[AT_FDCWD], file ptr[in, string["/sys/kernel/debug/usb/devices"]], flags flags[open_flags], mode const[0]) fd_auto_usb_device (automatic)
read$auto_usb_device(fd fd_auto_usb_device, buf ptr[out, array[int8]], len bytesize[buf]) (automatic)

# fops: write:bm_register_write
resource fd_auto_bm_register[fd]
openat$auto_bm_register(fd const[AT_FDCWD], file ptr[in, string["/proc/sys/fs/binfmt_misc/register"]], flags flags[open_flags], mode const[0]) fd_auto_bm_register (automatic)
write$auto_bm_register(fd fd_auto_bm_register, buf ptr[in, array[int8]], len bytesize[buf]) (automatic)

# fops: write:clear_refs_write
resource fd_auto_clear_refs[fd]
auto_clear_refs_files = "/proc/self/clear_refs", "/proc/thread-self/clear_refs"
openat$auto_clear_refs(fd const[AT_FDCWD], file ptr[in, string[auto_clear_refs_files]], flags flags[open_flags], mode const[0]) fd_auto_clear_refs (automatic)
write$auto_clear_refs(fd fd_auto_clear_refs, buf ptr[in, array[int8]], len bytesize[buf]) (automatic)

# fops: write:split_huge_pages_write
resource fd_auto_split_huge_pages[fd]
openat$auto_split_huge_pages(fd const[AT_FDCWD], file ptr[in, string["/sys/kernel/debug/split_huge_pages"]], flags flags[open_flags], mode const[0]) fd_auto_split_huge_pages (automatic)
write$auto_split_huge_pages(fd fd_auto_split_huge_pages, buf ptr[in, array[int8]], len bytesize[buf]) (automatic)
