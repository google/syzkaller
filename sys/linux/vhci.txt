# Copyright 2020 syzkaller project authors. All rights reserved.
# Use of this source code is governed by Apache 2 LICENSE that can be found in the LICENSE file.

include <linux/socket.h>
include <linux/net.h>
include <linux/isdn/capilli.h>
include <net/bluetooth/bluetooth.h>
include <net/bluetooth/hci_sock.h>
include <net/bluetooth/l2cap.h>
include <net/bluetooth/cmtp/cmtp.h>
include <net/bluetooth/bnep/bnep.h>
include <net/bluetooth/hidp/hidp.h>
include <net/bluetooth/sco.h>
include <net/bluetooth/hci.h>

hci_event_hdr_un [
	extended_inquiry_info			hci_event_hdr_t[HCI_EV_EXTENDED_INQUIRY_RESULT, extended_inquiry_info]
	hci_ev_auth_complete			hci_event_hdr_t[HCI_EV_AUTH_COMPLETE, hci_ev_auth_complete]
	hci_ev_change_link_key_complete		hci_event_hdr_t[HCI_EV_CHANGE_LINK_KEY_COMPLETE, hci_ev_change_link_key_complete]
	hci_ev_channel_selected			hci_event_hdr_t[HCI_EV_CHANNEL_SELECTED, hci_ev_channel_selected]
	hci_ev_clock_offset			hci_event_hdr_t[HCI_EV_CLOCK_OFFSET, hci_ev_clock_offset]
	hci_ev_cmd_complete			hci_event_hdr_t[HCI_EV_CMD_COMPLETE, hci_ev_cmd_complete]
	hci_ev_cmd_status			hci_event_hdr_t[HCI_EV_CMD_STATUS, hci_ev_cmd_status]
	hci_ev_conn_complete			hci_event_hdr_t[HCI_EV_CONN_COMPLETE, hci_ev_conn_complete]
	hci_ev_conn_request			hci_event_hdr_t[HCI_EV_CONN_REQUEST, hci_ev_conn_request]
	hci_ev_disconn_complete			hci_event_hdr_t[HCI_EV_DISCONN_COMPLETE, hci_ev_disconn_complete]
	hci_ev_disconn_logical_link_complete	hci_event_hdr_t[HCI_EV_DISCONN_LOGICAL_LINK_COMPLETE, hci_ev_disconn_logical_link_complete]
	hci_ev_disconn_phy_link_complete	hci_event_hdr_t[HCI_EV_DISCONN_PHY_LINK_COMPLETE, hci_ev_disconn_phy_link_complete]
	hci_ev_encrypt_change			hci_event_hdr_t[HCI_EV_ENCRYPT_CHANGE, hci_ev_encrypt_change]
	hci_ev_hardware_error			hci_event_hdr_t[HCI_EV_HARDWARE_ERROR, hci_ev_hardware_error]
	hci_ev_io_capa_reply			hci_event_hdr_t[HCI_EV_IO_CAPA_REPLY, hci_ev_io_capa_reply]
	hci_ev_io_capa_request			hci_event_hdr_t[HCI_EV_IO_CAPA_REQUEST, hci_ev_io_capa_request]
	hci_ev_key_refresh_complete		hci_event_hdr_t[HCI_EV_KEY_REFRESH_COMPLETE, hci_ev_key_refresh_complete]
	hci_ev_keypress_notify			hci_event_hdr_t[HCI_EV_KEYPRESS_NOTIFY, hci_ev_keypress_notify]
	hci_ev_le_meta				hci_event_hdr_t[HCI_EV_LE_META, hci_ev_le_meta_un]
	hci_ev_link_key_notify			hci_event_hdr_t[HCI_EV_LINK_KEY_NOTIFY, hci_ev_link_key_notify]
	hci_ev_link_key_req			hci_event_hdr_t[HCI_EV_LINK_KEY_REQ, hci_ev_link_key_req]
	hci_ev_logical_link_complete		hci_event_hdr_t[HCI_EV_LOGICAL_LINK_COMPLETE, hci_ev_logical_link_complete]
	hci_ev_mode_change			hci_event_hdr_t[HCI_EV_MODE_CHANGE, hci_ev_mode_change]
	hci_ev_num_comp_blocks			hci_event_hdr_t[HCI_EV_NUM_COMP_BLOCKS, hci_ev_num_comp_blocks]
	hci_ev_num_comp_pkts			hci_event_hdr_t[HCI_EV_NUM_COMP_PKTS, hci_ev_num_comp_pkts]
	hci_ev_phy_link_complete		hci_event_hdr_t[HCI_EV_PHY_LINK_COMPLETE, hci_ev_phy_link_complete]
	hci_ev_pin_code_req			hci_event_hdr_t[HCI_EV_PIN_CODE_REQ, hci_ev_pin_code_req]
	hci_ev_pkt_type_change			hci_event_hdr_t[HCI_EV_PKT_TYPE_CHANGE, hci_ev_pkt_type_change]
	hci_ev_pscan_rep_mode			hci_event_hdr_t[HCI_EV_PSCAN_REP_MODE, hci_ev_pscan_rep_mode]
	hci_ev_qos_setup_complete		hci_event_hdr_t[HCI_EV_QOS_SETUP_COMPLETE, hci_ev_qos_setup_complete]
	hci_ev_remote_ext_features		hci_event_hdr_t[HCI_EV_REMOTE_EXT_FEATURES, hci_ev_remote_ext_features]
	hci_ev_remote_features			hci_event_hdr_t[HCI_EV_REMOTE_FEATURES, hci_ev_remote_features]
	hci_ev_remote_host_features		hci_event_hdr_t[HCI_EV_REMOTE_HOST_FEATURES, hci_ev_remote_host_features]
	hci_ev_remote_name			hci_event_hdr_t[HCI_EV_REMOTE_NAME, hci_ev_remote_name]
	hci_ev_remote_oob_data_request		hci_event_hdr_t[HCI_EV_REMOTE_OOB_DATA_REQUEST, hci_ev_remote_oob_data_request]
	hci_ev_remote_version			hci_event_hdr_t[HCI_EV_REMOTE_VERSION, hci_ev_remote_version]
	hci_ev_role_change			hci_event_hdr_t[HCI_EV_ROLE_CHANGE, hci_ev_role_change]
	hci_ev_si_device			hci_event_hdr_t[HCI_EV_SI_DEVICE, hci_ev_si_device]
	hci_ev_si_security			hci_event_hdr_t[HCI_EV_SI_SECURITY, hci_ev_si_security]
	hci_ev_simple_pair_complete		hci_event_hdr_t[HCI_EV_SIMPLE_PAIR_COMPLETE, hci_ev_simple_pair_complete]
	hci_ev_sniff_subrate			hci_event_hdr_t[HCI_EV_SNIFF_SUBRATE, hci_ev_sniff_subrate]
	hci_ev_stack_internal			hci_event_hdr_t[HCI_EV_STACK_INTERNAL, hci_ev_stack_internal]
	hci_ev_sync_conn_changed		hci_event_hdr_t[HCI_EV_SYNC_CONN_CHANGED, hci_ev_sync_conn_changed]
	hci_ev_sync_conn_complete		hci_event_hdr_t[HCI_EV_SYNC_CONN_COMPLETE, hci_ev_sync_conn_complete]
	hci_ev_sync_train_complete		hci_event_hdr_t[HCI_EV_SYNC_TRAIN_COMPLETE, hci_ev_sync_train_complete]
	hci_ev_user_confirm_req			hci_event_hdr_t[HCI_EV_USER_CONFIRM_REQUEST, hci_ev_user_confirm_req]
	hci_ev_user_passkey_notify		hci_event_hdr_t[HCI_EV_USER_PASSKEY_NOTIFY, hci_ev_user_passkey_notify]
	hci_ev_user_passkey_req			hci_event_hdr_t[HCI_EV_USER_PASSKEY_REQUEST, hci_ev_user_passkey_req]
	inquiry_info				hci_event_hdr_t[HCI_EV_INQUIRY_RESULT, inquiry_info]
	inquiry_info_with_rssi			hci_event_hdr_t[HCI_EV_INQUIRY_RESULT_WITH_RSSI, inquiry_info_with_rssi]
	inquiry_info_with_rssi_and_pscan_mode	hci_event_hdr_t[HCI_EV_INQUIRY_RESULT_WITH_RSSI, inquiry_info_with_rssi_and_pscan_mode]
] [varlen]

type hci_event_hdr_t[EVENT, PAYLOAD] {
	hdr	hci_event_hdr[EVENT]
	payload	PAYLOAD
}

type hci_event_hdr[EVENT] {
	evt	const[EVENT, int8]
	plen	bytesize[hci_event_hdr_t:payload, int8]
}

hci_ev_le_meta_un [
	hci_ev_le_advertising_info	hci_ev_le_meta_t[HCI_EV_LE_ADVERTISING_REPORT, hci_ev_le_advertising_info]
	hci_ev_le_conn_complete		hci_ev_le_meta_t[HCI_EV_LE_CONN_COMPLETE, hci_ev_le_conn_complete]
	hci_ev_le_conn_update_complete	hci_ev_le_meta_t[HCI_EV_LE_CONN_UPDATE_COMPLETE, hci_ev_le_conn_update_complete]
	hci_ev_le_data_len_change	hci_ev_le_meta_t[HCI_EV_LE_DATA_LEN_CHANGE, hci_ev_le_data_len_change]
	hci_ev_le_direct_adv_info	hci_ev_le_meta_t[HCI_EV_LE_DIRECT_ADV_REPORT, hci_ev_le_direct_adv_info]
	hci_ev_le_enh_conn_complete	hci_ev_le_meta_t[HCI_EV_LE_ENHANCED_CONN_COMPLETE, hci_ev_le_enh_conn_complete]
	hci_ev_le_ext_adv_report	hci_ev_le_meta_t[HCI_EV_LE_EXT_ADV_REPORT, hci_ev_le_ext_adv_report]
	hci_ev_le_ltk_req		hci_ev_le_meta_t[HCI_EV_LE_LTK_REQ, hci_ev_le_ltk_req]
	hci_ev_le_phy_update_complete	hci_ev_le_meta_t[HCI_EV_LE_PHY_UPDATE_COMPLETE, hci_ev_le_phy_update_complete]
	hci_ev_le_remote_conn_param_req	hci_ev_le_meta_t[HCI_EV_LE_REMOTE_CONN_PARAM_REQ, hci_ev_le_remote_conn_param_req]
	hci_ev_le_remote_feat_complete	hci_ev_le_meta_t[HCI_EV_LE_REMOTE_FEAT_COMPLETE, hci_ev_le_remote_feat_complete]
	hci_evt_le_cis_established	hci_ev_le_meta_t[HCI_EVT_LE_CIS_ESTABLISHED, hci_evt_le_cis_established]
	hci_evt_le_cis_req		hci_ev_le_meta_t[HCI_EVT_LE_CIS_REQ, hci_evt_le_cis_req]
	hci_evt_le_ext_adv_set_term	hci_ev_le_meta_t[HCI_EV_LE_EXT_ADV_SET_TERM, hci_evt_le_ext_adv_set_term]
] [varlen]

type hci_ev_le_meta_t[SUBEVENT, PAYLOAD] {
	hdr	hci_ev_le_meta[SUBEVENT]
	payload	PAYLOAD
}

type hci_ev_le_meta[SUBEVENT] {
	subevent	const[SUBEVENT, int8]
}

extended_inquiry_info {
	bdaddr			bdaddr_t
	pscan_rep_mode		int8
	pscan_period_mode	int8
	dev_class		array[int8, 3]
	clock_offset		int16
	rssi			int8
	data			array[int8, 240]
} [packed]

hci_comp_blocks_info {
	handle	int16
	pkts	int16
	blocks	int16
} [packed]

hci_comp_pkts_info {
	handle	int16
	count	int16
} [packed]

hci_ev_auth_complete {
	status	int8
	handle	int16
} [packed]

hci_ev_change_link_key_complete {
	status	int8
	handle	int16
} [packed]

hci_ev_channel_selected {
	phy_handle	int8
} [packed]

hci_ev_clock_offset {
	status		int8
	handle		int16
	clock_offset	int16
} [packed]

hci_ev_cmd_complete {
	ncmd	int8
	opcode	int16
} [packed]

hci_ev_cmd_status {
	status	int8
	ncmd	int8
	opcode	int16
} [packed]

hci_ev_conn_complete {
	status		int8
	handle		int16
	bdaddr		bdaddr_t
	link_type	int8
	encr_mode	int8
} [packed]

hci_ev_conn_request {
	bdaddr		bdaddr_t
	dev_class	array[int8, 3]
	link_type	int8
} [packed]

hci_ev_disconn_complete {
	status	int8
	handle	int16
	reason	int8
} [packed]

hci_ev_disconn_logical_link_complete {
	status	int8
	handle	int16
	reason	int8
} [packed]

hci_ev_disconn_phy_link_complete {
	status		int8
	phy_handle	int8
	reason		int8
} [packed]

hci_ev_encrypt_change {
	status	int8
	handle	int16
	encrypt	int8
} [packed]

hci_ev_hardware_error {
	code	int8
} [packed]

hci_ev_io_capa_reply {
	bdaddr		bdaddr_t
	capability	int8
	oob_data	int8
	authentication	int8
} [packed]

hci_ev_io_capa_request {
	bdaddr	bdaddr_t
} [packed]

hci_ev_key_refresh_complete {
	status	int8
	handle	int16
} [packed]

hci_ev_keypress_notify {
	bdaddr	bdaddr_t
	type	int8
} [packed]

hci_ev_le_advertising_info {
	evt_type	int8
	bdaddr_type	int8
	bdaddr		bdaddr_t
	length		int8
	data		array[int8]
} [packed]

hci_ev_le_conn_complete {
	status			int8
	handle			int16
	role			int8
	bdaddr_type		int8
	bdaddr			bdaddr_t
	interval		int16
	latency			int16
	supervision_timeout	int16
	clk_accurancy		int8
} [packed]

hci_ev_le_conn_update_complete {
	status			int8
	handle			int16
	interval		int16
	latency			int16
	supervision_timeout	int16
} [packed]

hci_ev_le_data_len_change {
	handle	int16
	tx_len	int16
	tx_time	int16
	rx_len	int16
	rx_time	int16
} [packed]

hci_ev_le_direct_adv_info {
	evt_type		int8
	bdaddr_type		int8
	bdaddr			bdaddr_t
	direct_addr_type	int8
	direct_addr		bdaddr_t
	rssi			int8
} [packed]

hci_ev_le_enh_conn_complete {
	status			int8
	handle			int16
	role			int8
	bdaddr_type		int8
	bdaddr			bdaddr_t
	local_rpa		bdaddr_t
	peer_rpa		bdaddr_t
	interval		int16
	latency			int16
	supervision_timeout	int16
	clk_accurancy		int8
} [packed]

hci_ev_le_ext_adv_report {
	evt_type		int16
	bdaddr_type		int8
	bdaddr			bdaddr_t
	primary_phy		int8
	secondary_phy		int8
	sid			int8
	tx_power		int8
	rssi			int8
	interval		int16
	direct_addr_type	int8
	direct_addr		bdaddr_t
	length			int8
	data			array[int8]
} [packed]

hci_ev_le_ltk_req {
	handle	int16
	rand	int64
	ediv	int16
} [packed]

hci_ev_le_phy_update_complete {
	status	int8
	handle	int16
	tx_phy	int8
	rx_phy	int8
} [packed]

hci_ev_le_remote_conn_param_req {
	handle		int16
	interval_min	int16
	interval_max	int16
	latency		int16
	timeout		int16
} [packed]

hci_ev_le_remote_feat_complete {
	status		int8
	handle		int16
	features	array[int8, 8]
} [packed]

hci_ev_link_key_notify {
	bdaddr		bdaddr_t
	link_key	array[int8, 16]
	key_type	int8
} [packed]

hci_ev_link_key_req {
	bdaddr	bdaddr_t
} [packed]

hci_ev_logical_link_complete {
	status		int8
	handle		int16
	phy_handle	int8
	flow_spec_id	int8
} [packed]

hci_ev_mode_change {
	status		int8
	handle		int16
	mode		int8
	interval	int16
} [packed]

hci_ev_num_comp_blocks {
	num_blocks	int16
	num_hndl	len[handles, int8]
	handles		array[hci_comp_blocks_info]
} [packed]

hci_ev_num_comp_pkts {
	num_hndl	len[handles, int8]
	handles		array[hci_comp_pkts_info]
} [packed]

hci_ev_phy_link_complete {
	status		int8
	phy_handle	int8
} [packed]

hci_ev_pin_code_req {
	bdaddr	bdaddr_t
} [packed]

hci_ev_pkt_type_change {
	status		int8
	handle		int16
	pkt_type	int16
} [packed]

hci_ev_pscan_rep_mode {
	bdaddr		bdaddr_t
	pscan_rep_mode	int8
} [packed]

hci_ev_qos_setup_complete {
	status	int8
	handle	int16
	qos	hci_qos
} [packed]

hci_ev_remote_ext_features {
	status		int8
	handle		int16
	page		int8
	max_page	int8
	features	array[int8, 8]
} [packed]

hci_ev_remote_features {
	status		int8
	handle		int16
	features	array[int8, 8]
} [packed]

hci_ev_remote_host_features {
	bdaddr		bdaddr_t
	features	array[int8, 8]
} [packed]

hci_ev_remote_name {
	status	int8
	bdaddr	bdaddr_t
	name	array[int8, 248]
} [packed]

hci_ev_remote_oob_data_request {
	bdaddr	bdaddr_t
} [packed]

hci_ev_remote_version {
	status		int8
	handle		int16
	lmp_ver		int8
	manufacturer	int16
	lmp_subver	int16
} [packed]

hci_ev_role_change {
	status	int8
	bdaddr	bdaddr_t
	role	int8
} [packed]

hci_ev_si_device {
	event	int16
	dev_id	int16
} [packed]

hci_ev_si_security {
	event		int16
	proto		int16
	subproto	int16
	incoming	int8
} [packed]

hci_ev_simple_pair_complete {
	status	int8
	bdaddr	bdaddr_t
} [packed]

hci_ev_sniff_subrate {
	status			int8
	handle			int16
	max_tx_latency		int16
	max_rx_latency		int16
	max_remote_timeout	int16
	max_local_timeout	int16
} [packed]

hci_ev_stack_internal {
	type	int16
	data	array[int8]
} [packed]

hci_ev_sync_conn_changed {
	status		int8
	handle		int16
	tx_interval	int8
	retrans_window	int8
	rx_pkt_len	int16
	tx_pkt_len	int16
} [packed]

hci_ev_sync_conn_complete {
	status		int8
	handle		int16
	bdaddr		bdaddr_t
	link_type	int8
	tx_interval	int8
	retrans_window	int8
	rx_pkt_len	int16
	tx_pkt_len	int16
	air_mode	int8
} [packed]

hci_ev_sync_train_complete {
	status	int8
} [packed]

hci_ev_user_confirm_req {
	bdaddr	bdaddr_t
	passkey	int32
} [packed]

hci_ev_user_passkey_notify {
	bdaddr	bdaddr_t
	passkey	int32
} [packed]

hci_ev_user_passkey_req {
	bdaddr	bdaddr_t
} [packed]

hci_evt_le_cis_established {
	status		int8
	handle		int16
	cig_sync_delay	array[int8, 3]
	cis_sync_delay	array[int8, 3]
	m_latency	array[int8, 3]
	s_latency	array[int8, 3]
	m_phy		int8
	s_phy		int8
	nse		int8
	m_bn		int8
	s_bn		int8
	m_ft		int8
	s_ft		int8
	m_mtu		int16
	s_mtu		int16
	interval	int16
} [packed]

hci_evt_le_cis_req {
	acl_handle	int16
	cis_handle	int16
	cig_id		int8
	cis_id		int8
} [packed]

hci_evt_le_ext_adv_set_term {
	status		int8
	handle		int8
	conn_handle	int16
	num_evts	int8
} [packed]

hci_qos {
	service_type	int8
	token_rate	int32
	peak_bandwidth	int32
	latency		int32
	delay_variation	int32
} [packed]

inquiry_info {
	bdaddr			bdaddr_t
	pscan_rep_mode		int8
	pscan_period_mode	int8
	pscan_mode		int8
	dev_class		array[int8, 3]
	clock_offset		int16
} [packed]

inquiry_info_with_rssi {
	bdaddr			bdaddr_t
	pscan_rep_mode		int8
	pscan_period_mode	int8
	dev_class		array[int8, 3]
	clock_offset		int16
	rssi			int8
} [packed]

inquiry_info_with_rssi_and_pscan_mode {
	bdaddr			bdaddr_t
	pscan_rep_mode		int8
	pscan_period_mode	int8
	pscan_mode		int8
	dev_class		array[int8, 3]
	clock_offset		int16
	rssi			int8
} [packed]
