#
# requires: arch=arm64 -threaded
#
# This series of tests exercise the system registers that are exposed in the QEMU emulation mode.
# They should not be used in the corpus when running on real HW.
#
r0 = openat$kvm(0, &AUTO='/dev/kvm\x00', 0x0, 0x0)
r1 = ioctl$KVM_CREATE_VM(r0, AUTO, 0x0)
r2 = syz_kvm_setup_syzos_vm(r1, &(0x7f0000c00000/0x400000)=nil)
#
# 0x603000000013c65e is ICC_ASGI1R_EL1.
# 0x603000000013c65f is ICC_SGI0R_EL1.
# 0x603000000013c661 is ICC_EOIR1_EL1.
# 0x603000000013c663 is ICC_BPR1_EL1.
# 0x603000000013c664 is ICC_CTLR_EL1.
# 0x603000000013c666 is ICC_IGRPEN0_EL1.
# 0x603000000013c667 is ICC_IGRPEN1_EL1.
# 0x603000000013c687 is SCXTNUM_EL1.
# 0x603000000013d000 is CSSELR_EL1.
# 0x603000000013de87 is SCXTNUM_EL0.
#
r3 = syz_kvm_add_vcpu(r2, &AUTO={0x0, &AUTO=[@msr={AUTO, AUTO, {0x603000000013c65e, 0x8000}}, @msr={AUTO, AUTO, {0x603000000013c65f, 0x8000}}, @msr={AUTO, AUTO, {0x603000000013c661, 0x8000}}, @msr={AUTO, AUTO, {0x603000000013c663, 0x8000}}, @msr={AUTO, AUTO, {0x603000000013c664, 0x8000}}, @msr={AUTO, AUTO, {0x603000000013c666, 0x8000}}, @msr={AUTO, AUTO, {0x603000000013c667, 0x8000}}, @msr={AUTO, AUTO, {0x603000000013c687, 0x8000}}, @msr={AUTO, AUTO, {0x603000000013d000, 0x8000}}, @msr={AUTO, AUTO, {0x603000000013de87, 0x8000}}], AUTO}, 0x0, 0x0)
r4 = ioctl$KVM_GET_VCPU_MMAP_SIZE(r0, AUTO)
r5 = mmap$KVM_VCPU(&(0x7f0000009000/0x1000)=nil, r4, 0x3, 0x1, r3, 0x0)

# Run till the end of guest_main(). 0xffffffffffffffff is UEXIT_END.
#
ioctl$KVM_RUN(r3, AUTO, 0x0)
syz_kvm_assert_syzos_uexit(r5, 0xffffffffffffffff)
syz_kvm_assert_reg(r3, 0x603000000013c65e, 0x8000)
syz_kvm_assert_reg(r3, 0x603000000013c65f, 0x8000)
syz_kvm_assert_reg(r3, 0x603000000013c661, 0x8000)
syz_kvm_assert_reg(r3, 0x603000000013c663, 0x8000)
syz_kvm_assert_reg(r3, 0x603000000013c664, 0x8000)
syz_kvm_assert_reg(r3, 0x603000000013c666, 0x8000)
syz_kvm_assert_reg(r3, 0x603000000013c667, 0x8000)
syz_kvm_assert_reg(r3, 0x603000000013c687, 0x8000)
syz_kvm_assert_reg(r3, 0x603000000013d000, 0x8000)
syz_kvm_assert_reg(r3, 0x603000000013de87, 0x8000)
