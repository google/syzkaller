r0 = openat$iommufd(0xffffffffffffff9c, &AUTO='/dev/iommu\x00', 0x0, 0x0)
ioctl$IOMMU_IOAS_ALLOC(r0, 0x3b81, &AUTO={0xc, 0x0, <r1=>0x0})
ioctl$IOMMU_TEST_OP_MOCK_DOMAIN(r0, 0x3ba0, &AUTO={0x48, 0x2, r1, 0x0, <r4=>0x0, <r3=>0x0, <r2=>0x0})
ioctl$IOMMU_HWPT_ALLOC$NONE(r0, 0x3b89,  &AUTO={0x28, 0x1, r2, r1, <r3=>0x0, 0x0, 0x0, 0x0, &AUTO=''})
ioctl$IOMMU_HWPT_ALLOC$TEST(r0, 0x3b89,  &AUTO={0x28, 0, r2, r3, <r5=>0x0, 0x0, 0xdead, 0x4, &AUTO={0xbadbeef}})
ioctl$IOMMU_HWPT_INVALIDATE$TEST(r0, 0x3b8d, &AUTO={0x20, r5, &AUTO=[{0x0, 0x0}], 0xdeadbeef, 0x8, 0x1, 0x0})
ioctl$IOMMU_DESTROY$hwpt(r0, 0x3b80, &AUTO={0x8, r5})
ioctl$IOMMU_DESTROY$hwpt(r0, 0x3b80, &AUTO={0x8, r3})
ioctl$IOMMU_GET_HW_INFO(r0, 0x3b8a, &AUTO={0x24, 0x0, r2, 0x1c, &AUTO='LLLLLLLLLLLLLLLLLLLLLLLLLLLL', 0x0, 0x0, 0x0})
ioctl$IOMMU_DESTROY$stdev(r0, 0x3b80, &AUTO={0x8, r4})
ioctl$IOMMU_DESTROY$ioas(r0, 0x3b80, &AUTO={0x8, r1})
close(r0)