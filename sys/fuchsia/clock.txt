# Copyright 2022 syzkaller project authors. All rights reserved.
# Use of this source code is governed by Apache 2 LICENSE that can be found in the LICENSE file.

# See https://cs.opensource.google/fuchsia/fuchsia/+/main:zircon/vdso/clock.fidl

include <zircon/syscalls.h>
include <zircon/syscalls/clock.h>

resource zx_clock[zx_handle]
resource zx_time[int64]: 0, ZX_TIME_INFINITE

zx_clock_get_monotonic() (ignore_return)
zx_clock_create(option flags[clock_create_opt], args ptr[in, zx_clock_create_args_v1], out ptr[out, zx_clock])
zx_clock_read(handle zx_clock, now ptr[out, intptr])
zx_clock_get_details(handle zx_clock, option const[ZX_CLOCK_ARGS_VERSIONV1], details ptr[out, zx_clock_details_v1])
# zx_clock_details is *not* defined for V2
zx_clock_update$v1(handle zx_clock, option flags[clock_update_opt1], args ptr[in, zx_clock_update_args_v1])
zx_clock_update$v2(handle zx_clock, option flags[clock_update_opt2], args ptr[in, zx_clock_update_args_v2])

clock_create_opt = ZX_CLOCK_OPT_MONOTONIC, ZX_CLOCK_OPT_CONTINUOUS, ZX_CLOCK_OPT_AUTO_START
clock_update_opt1 = ZX_CLOCK_ARGS_VERSIONV1, ZX_CLOCK_UPDATE_OPTION_SYNTHETIC_VALUE_VALID, ZX_CLOCK_UPDATE_OPTION_REFERENCE_VALUE_VALID, ZX_CLOCK_UPDATE_OPTION_RATE_ADJUST_VALID, ZX_CLOCK_UPDATE_OPTION_ERROR_BOUND_VALID
clock_update_opt2 = ZX_CLOCK_ARGS_VERSIONV2, ZX_CLOCK_UPDATE_OPTION_SYNTHETIC_VALUE_VALID, ZX_CLOCK_UPDATE_OPTION_REFERENCE_VALUE_VALID, ZX_CLOCK_UPDATE_OPTION_RATE_ADJUST_VALID, ZX_CLOCK_UPDATE_OPTION_ERROR_BOUND_VALID

zx_clock_update_args_v1 {
	rate_adjust	int32
	padding1	int32
	value		int64
	error_bound	int64
}

zx_clock_update_args_v2 {
	rate_adjust	int32
	padding		int32
	synthetic_value	int64
	reference_value	int64
	error_bound	int64
}

zx_clock_create_args_v1 {
	backstop_time	zx_time
}

zx_clock_rate {
	synthetic_ticks	int32
	reference_ticks	int32
}

zx_clock_transformation {
	reference_offset	int64
	synthetic_offset	int64
	rate			zx_clock_rate
}

zx_clock_details_v1 {
	options				int64
	backstop_time			zx_time
	ticks_to_synthetic		zx_clock_transformation
	mono_to_synthetic		zx_clock_transformation
	error_bound			int64
	query_ticks			int64
	last_value_update_ticks		int64
	last_rate_adjust_update_ticks	int64
	last_error_bounds_update_ticks	int64
	generation_counter		int32
	padding1			int32
}

syz_future_time(when intptr[0:1]) zx_time (ignore_return)
