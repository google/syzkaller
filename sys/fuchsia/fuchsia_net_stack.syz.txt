# Copyright 2018 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be found in the LICENSE file.
#
# WARNING: This file is machine generated by fidlgen.

include <fuchsia/net/stack/c/fidl.h>
fuchsia_net_stack_LogLevelFilter = fuchsia_net_stack_LogLevelFilter_TRACE, fuchsia_net_stack_LogLevelFilter_DEBUG, fuchsia_net_stack_LogLevelFilter_INFO, fuchsia_net_stack_LogLevelFilter_WARN, fuchsia_net_stack_LogLevelFilter_ERROR, fuchsia_net_stack_LogLevelFilter_FATAL

fuchsia_net_stack_Stack_AddEthernetInterface_ResponseHandles {
	void	void
} [packed]

fuchsia_net_stack_Stack_DelEthernetInterface_ResponseHandles {
	void	void
} [packed]

fuchsia_net_stack_Stack_GetInterfaceInfo_ResponseHandles {
	info	fuchsia_net_stack_InterfaceInfoHandles
} [packed]

fuchsia_net_stack_Stack_EnableInterface_ResponseHandles {
	void	void
} [packed]

fuchsia_net_stack_Stack_DisableInterface_ResponseHandles {
	void	void
} [packed]

fuchsia_net_stack_Stack_AddInterfaceAddress_ResponseHandles {
	void	void
} [packed]

fuchsia_net_stack_Stack_DelInterfaceAddress_ResponseHandles {
	void	void
} [packed]

fuchsia_net_stack_Stack_AddForwardingEntry_ResponseHandles {
	void	void
} [packed]

fuchsia_net_stack_Stack_DelForwardingEntry_ResponseHandles {
	void	void
} [packed]

fuchsia_net_stack_Stack_EnablePacketFilter_ResponseHandles {
	void	void
} [packed]

fuchsia_net_stack_Stack_DisablePacketFilter_ResponseHandles {
	void	void
} [packed]

fuchsia_net_stack_Log_SetLogLevel_ResponseHandles {
	void	void
} [packed]

fuchsia_net_stack_InterfaceAddressInLine {
	ip_addressInLine	fuchsia_net_IpAddressInLine
	prefix_len		int8
} [packed]

fuchsia_net_stack_InterfaceAddressOutOfLine {
	void	void
} [packed]

fuchsia_net_stack_InterfaceAddressHandles {
	void	void
} [packed]

fuchsia_net_stack_InterfaceInfoHandles {
	properties	fuchsia_net_stack_InterfacePropertiesHandles
} [packed]

fuchsia_net_stack_InterfacePropertiesHandles {
	mac		fuchsia_hardware_ethernet_MacAddressHandles
	addresses	array[fuchsia_net_stack_InterfaceAddressHandles]
} [packed]

fuchsia_net_stack_ForwardingEntryInLine {
	subnetInLine		fuchsia_net_SubnetInLine
	destinationInLine	fuchsia_net_stack_ForwardingDestinationInLine
} [packed]

fuchsia_net_stack_ForwardingEntryOutOfLine {
	subnetOutOfLine	fuchsia_net_SubnetOutOfLine
} [packed]

fuchsia_net_stack_ForwardingEntryHandles {
	subnet	fuchsia_net_SubnetHandles
} [packed]

fuchsia_net_stack_InterfaceStatusChangeHandles {
	void	void
} [packed]

fuchsia_net_stack_Stack_AddEthernetInterface_ResultHandles [
	response	fuchsia_net_stack_Stack_AddEthernetInterface_ResponseHandles
] [varlen]

fuchsia_net_stack_Stack_DelEthernetInterface_ResultHandles [
	response	fuchsia_net_stack_Stack_DelEthernetInterface_ResponseHandles
] [varlen]

fuchsia_net_stack_Stack_GetInterfaceInfo_ResultHandles [
	response	fuchsia_net_stack_Stack_GetInterfaceInfo_ResponseHandles
] [varlen]

fuchsia_net_stack_Stack_EnableInterface_ResultHandles [
	response	fuchsia_net_stack_Stack_EnableInterface_ResponseHandles
] [varlen]

fuchsia_net_stack_Stack_DisableInterface_ResultHandles [
	response	fuchsia_net_stack_Stack_DisableInterface_ResponseHandles
] [varlen]

fuchsia_net_stack_Stack_AddInterfaceAddress_ResultHandles [
	response	fuchsia_net_stack_Stack_AddInterfaceAddress_ResponseHandles
] [varlen]

fuchsia_net_stack_Stack_DelInterfaceAddress_ResultHandles [
	response	fuchsia_net_stack_Stack_DelInterfaceAddress_ResponseHandles
] [varlen]

fuchsia_net_stack_Stack_AddForwardingEntry_ResultHandles [
	response	fuchsia_net_stack_Stack_AddForwardingEntry_ResponseHandles
] [varlen]

fuchsia_net_stack_Stack_DelForwardingEntry_ResultHandles [
	response	fuchsia_net_stack_Stack_DelForwardingEntry_ResponseHandles
] [varlen]

fuchsia_net_stack_Stack_EnablePacketFilter_ResultHandles [
	response	fuchsia_net_stack_Stack_EnablePacketFilter_ResponseHandles
] [varlen]

fuchsia_net_stack_Stack_DisablePacketFilter_ResultHandles [
	response	fuchsia_net_stack_Stack_DisablePacketFilter_ResponseHandles
] [varlen]

fuchsia_net_stack_Log_SetLogLevel_ResultHandles [
	response	fuchsia_net_stack_Log_SetLogLevel_ResponseHandles
] [varlen]

fuchsia_net_stack_ForwardingDestinationInLine [
	device_id	fidl_union_member[fuchsia_net_stack_ForwardingDestinationTag_device_id, int64]
	next_hopInLine	fidl_union_member[fuchsia_net_stack_ForwardingDestinationTag_next_hop, fuchsia_net_IpAddressInLine]
]

fuchsia_net_stack_StackAddEthernetInterfaceRequest {
	hdr				fidl_message_header[2247683804791570432]
	topological_pathInLine		fidl_string
	device				flags[fidl_handle_presence, int32]
	topological_pathOutOfLine	fidl_aligned[stringnoz]
} [packed]

fuchsia_net_stack_StackAddEthernetInterfaceRequestHandles {
	device	zx_chan_fuchsia_hardware_ethernet_Device_client
} [packed]

fuchsia_net_stack_StackAddEthernetInterfaceResponseHandles {
	result	fuchsia_net_stack_Stack_AddEthernetInterface_ResultHandles
} [packed]

fuchsia_net_stack_StackDelEthernetInterfaceRequest {
	hdr	fidl_message_header[705640500845084672]
	id	int64
} [packed]

fuchsia_net_stack_StackDelEthernetInterfaceRequestHandles {
	void	void
} [packed]

fuchsia_net_stack_StackDelEthernetInterfaceResponseHandles {
	result	fuchsia_net_stack_Stack_DelEthernetInterface_ResultHandles
} [packed]

fuchsia_net_stack_StackListInterfacesRequest {
	hdr	fidl_message_header[4770064298972020736]
} [packed]

fuchsia_net_stack_StackListInterfacesRequestHandles {
	void	void
} [packed]

fuchsia_net_stack_StackListInterfacesResponseHandles {
	ifs	array[fuchsia_net_stack_InterfaceInfoHandles]
} [packed]

fuchsia_net_stack_StackGetInterfaceInfoRequest {
	hdr	fidl_message_header[6338598557473308672]
	id	int64
} [packed]

fuchsia_net_stack_StackGetInterfaceInfoRequestHandles {
	void	void
} [packed]

fuchsia_net_stack_StackGetInterfaceInfoResponseHandles {
	result	fuchsia_net_stack_Stack_GetInterfaceInfo_ResultHandles
} [packed]

fuchsia_net_stack_StackEnableInterfaceRequest {
	hdr	fidl_message_header[1454498564645322752]
	id	int64
} [packed]

fuchsia_net_stack_StackEnableInterfaceRequestHandles {
	void	void
} [packed]

fuchsia_net_stack_StackEnableInterfaceResponseHandles {
	result	fuchsia_net_stack_Stack_EnableInterface_ResultHandles
} [packed]

fuchsia_net_stack_StackDisableInterfaceRequest {
	hdr	fidl_message_header[1804345787165966336]
	id	int64
} [packed]

fuchsia_net_stack_StackDisableInterfaceRequestHandles {
	void	void
} [packed]

fuchsia_net_stack_StackDisableInterfaceResponseHandles {
	result	fuchsia_net_stack_Stack_DisableInterface_ResultHandles
} [packed]

fuchsia_net_stack_StackAddInterfaceAddressRequest {
	hdr		fidl_message_header[2161791481143099392]
	id		int64
	addrInLine	fuchsia_net_stack_InterfaceAddressInLine
	addrOutOfLine	fuchsia_net_stack_InterfaceAddressOutOfLine
} [packed]

fuchsia_net_stack_StackAddInterfaceAddressRequestHandles {
	addr	fuchsia_net_stack_InterfaceAddressHandles
} [packed]

fuchsia_net_stack_StackAddInterfaceAddressResponseHandles {
	result	fuchsia_net_stack_Stack_AddInterfaceAddress_ResultHandles
} [packed]

fuchsia_net_stack_StackDelInterfaceAddressRequest {
	hdr		fidl_message_header[5246118714578829312]
	id		int64
	addrInLine	fuchsia_net_stack_InterfaceAddressInLine
	addrOutOfLine	fuchsia_net_stack_InterfaceAddressOutOfLine
} [packed]

fuchsia_net_stack_StackDelInterfaceAddressRequestHandles {
	addr	fuchsia_net_stack_InterfaceAddressHandles
} [packed]

fuchsia_net_stack_StackDelInterfaceAddressResponseHandles {
	result	fuchsia_net_stack_Stack_DelInterfaceAddress_ResultHandles
} [packed]

fuchsia_net_stack_StackGetForwardingTableRequest {
	hdr	fidl_message_header[7256071960663162880]
} [packed]

fuchsia_net_stack_StackGetForwardingTableRequestHandles {
	void	void
} [packed]

fuchsia_net_stack_StackGetForwardingTableResponseHandles {
	table	array[fuchsia_net_stack_ForwardingEntryHandles]
} [packed]

fuchsia_net_stack_StackAddForwardingEntryRequest {
	hdr		fidl_message_header[3037510934563127296]
	entryInLine	fuchsia_net_stack_ForwardingEntryInLine
	entryOutOfLine	fuchsia_net_stack_ForwardingEntryOutOfLine
} [packed]

fuchsia_net_stack_StackAddForwardingEntryRequestHandles {
	entry	fuchsia_net_stack_ForwardingEntryHandles
} [packed]

fuchsia_net_stack_StackAddForwardingEntryResponseHandles {
	result	fuchsia_net_stack_Stack_AddForwardingEntry_ResultHandles
} [packed]

fuchsia_net_stack_StackDelForwardingEntryRequest {
	hdr		fidl_message_header[1960696280506171392]
	subnetInLine	fuchsia_net_SubnetInLine
	subnetOutOfLine	fuchsia_net_SubnetOutOfLine
} [packed]

fuchsia_net_stack_StackDelForwardingEntryRequestHandles {
	subnet	fuchsia_net_SubnetHandles
} [packed]

fuchsia_net_stack_StackDelForwardingEntryResponseHandles {
	result	fuchsia_net_stack_Stack_DelForwardingEntry_ResultHandles
} [packed]

fuchsia_net_stack_StackEnablePacketFilterRequest {
	hdr	fidl_message_header[450387381808267264]
	id	int64
} [packed]

fuchsia_net_stack_StackEnablePacketFilterRequestHandles {
	void	void
} [packed]

fuchsia_net_stack_StackEnablePacketFilterResponseHandles {
	result	fuchsia_net_stack_Stack_EnablePacketFilter_ResultHandles
} [packed]

fuchsia_net_stack_StackDisablePacketFilterRequest {
	hdr	fidl_message_header[1618682897944805376]
	id	int64
} [packed]

fuchsia_net_stack_StackDisablePacketFilterRequestHandles {
	void	void
} [packed]

fuchsia_net_stack_StackDisablePacketFilterResponseHandles {
	result	fuchsia_net_stack_Stack_DisablePacketFilter_ResultHandles
} [packed]

fuchsia_net_stack_StackEnableIpForwardingRequest {
	hdr	fidl_message_header[1788620812383682560]
} [packed]

fuchsia_net_stack_StackEnableIpForwardingRequestHandles {
	void	void
} [packed]

fuchsia_net_stack_StackEnableIpForwardingResponseHandles {
	void	void
} [packed]

fuchsia_net_stack_StackDisableIpForwardingRequest {
	hdr	fidl_message_header[2992354533176246272]
} [packed]

fuchsia_net_stack_StackDisableIpForwardingRequestHandles {
	void	void
} [packed]

fuchsia_net_stack_StackDisableIpForwardingResponseHandles {
	void	void
} [packed]

fuchsia_net_stack_StackOnInterfaceStatusChangeEventHandles {
	info	fuchsia_net_stack_InterfaceStatusChangeHandles
} [packed]

resource zx_chan_fuchsia_net_stack_Stack_client[zx_chan]
resource zx_chan_fuchsia_net_stack_Stack_server[zx_chan]

zx_channel_create$fuchsia_net_stack_Stack(options const[0], out0 ptr[out, zx_chan_fuchsia_net_stack_Stack_client], out1 ptr[out, zx_chan_fuchsia_net_stack_Stack_server])
fdio_service_connect$fuchsia_net_stack_Stack(path ptr[in, string["/svc/fuchsia.net.stack.Stack"]], handle zx_chan_fuchsia_net_stack_Stack_server)
zx_channel_call$fuchsia_net_stack_StackAddEthernetInterface(handle zx_chan_fuchsia_net_stack_Stack_client, options const[0], deadline zx_time, args ptr[in, fidl_call_args[fuchsia_net_stack_StackAddEthernetInterfaceRequest, fuchsia_net_stack_StackAddEthernetInterfaceRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], fuchsia_net_stack_StackAddEthernetInterfaceResponseHandles]], actual_bytes ptr[out, int32], actual_handles ptr[out, int32])
zx_channel_call$fuchsia_net_stack_StackDelEthernetInterface(handle zx_chan_fuchsia_net_stack_Stack_client, options const[0], deadline zx_time, args ptr[in, fidl_call_args[fuchsia_net_stack_StackDelEthernetInterfaceRequest, fuchsia_net_stack_StackDelEthernetInterfaceRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], fuchsia_net_stack_StackDelEthernetInterfaceResponseHandles]], actual_bytes ptr[out, int32], actual_handles ptr[out, int32])
zx_channel_call$fuchsia_net_stack_StackListInterfaces(handle zx_chan_fuchsia_net_stack_Stack_client, options const[0], deadline zx_time, args ptr[in, fidl_call_args[fuchsia_net_stack_StackListInterfacesRequest, fuchsia_net_stack_StackListInterfacesRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], fuchsia_net_stack_StackListInterfacesResponseHandles]], actual_bytes ptr[out, int32], actual_handles ptr[out, int32])
zx_channel_call$fuchsia_net_stack_StackGetInterfaceInfo(handle zx_chan_fuchsia_net_stack_Stack_client, options const[0], deadline zx_time, args ptr[in, fidl_call_args[fuchsia_net_stack_StackGetInterfaceInfoRequest, fuchsia_net_stack_StackGetInterfaceInfoRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], fuchsia_net_stack_StackGetInterfaceInfoResponseHandles]], actual_bytes ptr[out, int32], actual_handles ptr[out, int32])
zx_channel_call$fuchsia_net_stack_StackEnableInterface(handle zx_chan_fuchsia_net_stack_Stack_client, options const[0], deadline zx_time, args ptr[in, fidl_call_args[fuchsia_net_stack_StackEnableInterfaceRequest, fuchsia_net_stack_StackEnableInterfaceRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], fuchsia_net_stack_StackEnableInterfaceResponseHandles]], actual_bytes ptr[out, int32], actual_handles ptr[out, int32])
zx_channel_call$fuchsia_net_stack_StackDisableInterface(handle zx_chan_fuchsia_net_stack_Stack_client, options const[0], deadline zx_time, args ptr[in, fidl_call_args[fuchsia_net_stack_StackDisableInterfaceRequest, fuchsia_net_stack_StackDisableInterfaceRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], fuchsia_net_stack_StackDisableInterfaceResponseHandles]], actual_bytes ptr[out, int32], actual_handles ptr[out, int32])
zx_channel_call$fuchsia_net_stack_StackAddInterfaceAddress(handle zx_chan_fuchsia_net_stack_Stack_client, options const[0], deadline zx_time, args ptr[in, fidl_call_args[fuchsia_net_stack_StackAddInterfaceAddressRequest, fuchsia_net_stack_StackAddInterfaceAddressRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], fuchsia_net_stack_StackAddInterfaceAddressResponseHandles]], actual_bytes ptr[out, int32], actual_handles ptr[out, int32])
zx_channel_call$fuchsia_net_stack_StackDelInterfaceAddress(handle zx_chan_fuchsia_net_stack_Stack_client, options const[0], deadline zx_time, args ptr[in, fidl_call_args[fuchsia_net_stack_StackDelInterfaceAddressRequest, fuchsia_net_stack_StackDelInterfaceAddressRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], fuchsia_net_stack_StackDelInterfaceAddressResponseHandles]], actual_bytes ptr[out, int32], actual_handles ptr[out, int32])
zx_channel_call$fuchsia_net_stack_StackGetForwardingTable(handle zx_chan_fuchsia_net_stack_Stack_client, options const[0], deadline zx_time, args ptr[in, fidl_call_args[fuchsia_net_stack_StackGetForwardingTableRequest, fuchsia_net_stack_StackGetForwardingTableRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], fuchsia_net_stack_StackGetForwardingTableResponseHandles]], actual_bytes ptr[out, int32], actual_handles ptr[out, int32])
zx_channel_call$fuchsia_net_stack_StackAddForwardingEntry(handle zx_chan_fuchsia_net_stack_Stack_client, options const[0], deadline zx_time, args ptr[in, fidl_call_args[fuchsia_net_stack_StackAddForwardingEntryRequest, fuchsia_net_stack_StackAddForwardingEntryRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], fuchsia_net_stack_StackAddForwardingEntryResponseHandles]], actual_bytes ptr[out, int32], actual_handles ptr[out, int32])
zx_channel_call$fuchsia_net_stack_StackDelForwardingEntry(handle zx_chan_fuchsia_net_stack_Stack_client, options const[0], deadline zx_time, args ptr[in, fidl_call_args[fuchsia_net_stack_StackDelForwardingEntryRequest, fuchsia_net_stack_StackDelForwardingEntryRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], fuchsia_net_stack_StackDelForwardingEntryResponseHandles]], actual_bytes ptr[out, int32], actual_handles ptr[out, int32])
zx_channel_call$fuchsia_net_stack_StackEnablePacketFilter(handle zx_chan_fuchsia_net_stack_Stack_client, options const[0], deadline zx_time, args ptr[in, fidl_call_args[fuchsia_net_stack_StackEnablePacketFilterRequest, fuchsia_net_stack_StackEnablePacketFilterRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], fuchsia_net_stack_StackEnablePacketFilterResponseHandles]], actual_bytes ptr[out, int32], actual_handles ptr[out, int32])
zx_channel_call$fuchsia_net_stack_StackDisablePacketFilter(handle zx_chan_fuchsia_net_stack_Stack_client, options const[0], deadline zx_time, args ptr[in, fidl_call_args[fuchsia_net_stack_StackDisablePacketFilterRequest, fuchsia_net_stack_StackDisablePacketFilterRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], fuchsia_net_stack_StackDisablePacketFilterResponseHandles]], actual_bytes ptr[out, int32], actual_handles ptr[out, int32])
zx_channel_call$fuchsia_net_stack_StackEnableIpForwarding(handle zx_chan_fuchsia_net_stack_Stack_client, options const[0], deadline zx_time, args ptr[in, fidl_call_args[fuchsia_net_stack_StackEnableIpForwardingRequest, fuchsia_net_stack_StackEnableIpForwardingRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], fuchsia_net_stack_StackEnableIpForwardingResponseHandles]], actual_bytes ptr[out, int32], actual_handles ptr[out, int32])
zx_channel_call$fuchsia_net_stack_StackDisableIpForwarding(handle zx_chan_fuchsia_net_stack_Stack_client, options const[0], deadline zx_time, args ptr[in, fidl_call_args[fuchsia_net_stack_StackDisableIpForwardingRequest, fuchsia_net_stack_StackDisableIpForwardingRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], fuchsia_net_stack_StackDisableIpForwardingResponseHandles]], actual_bytes ptr[out, int32], actual_handles ptr[out, int32])
zx_channel_read$fuchsia_net_stack_StackOnInterfaceStatusChange(handle zx_chan_fuchsia_net_stack_Stack_client, options const[0], bytes ptr[out, array[int8, ZX_CHANNEL_MAX_MSG_BYTES]], num_bytes bytesize[bytes], handles ptr[out, fuchsia_net_stack_StackOnInterfaceStatusChangeEventHandles], num_handles bytesize[handles], actual_bytes ptr[out, int32], actual_handles ptr[out, int32])

fuchsia_net_stack_LogSetLogLevelRequest {
	hdr	fidl_message_header[757452748626067456]
	level	flags[fuchsia_net_stack_LogLevelFilter, int32]
} [packed]

fuchsia_net_stack_LogSetLogLevelRequestHandles {
	void	void
} [packed]

fuchsia_net_stack_LogSetLogLevelResponseHandles {
	result	fuchsia_net_stack_Log_SetLogLevel_ResultHandles
} [packed]

resource zx_chan_fuchsia_net_stack_Log_client[zx_chan]
resource zx_chan_fuchsia_net_stack_Log_server[zx_chan]

zx_channel_create$fuchsia_net_stack_Log(options const[0], out0 ptr[out, zx_chan_fuchsia_net_stack_Log_client], out1 ptr[out, zx_chan_fuchsia_net_stack_Log_server])
fdio_service_connect$fuchsia_net_stack_Log(path ptr[in, string["/svc/fuchsia.net.stack.Log"]], handle zx_chan_fuchsia_net_stack_Log_server)
zx_channel_call$fuchsia_net_stack_LogSetLogLevel(handle zx_chan_fuchsia_net_stack_Log_client, options const[0], deadline zx_time, args ptr[in, fidl_call_args[fuchsia_net_stack_LogSetLogLevelRequest, fuchsia_net_stack_LogSetLogLevelRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], fuchsia_net_stack_LogSetLogLevelResponseHandles]], actual_bytes ptr[out, int32], actual_handles ptr[out, int32])
