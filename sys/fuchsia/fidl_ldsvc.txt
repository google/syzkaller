# Copyright 2018 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be found in the LICENSE file.
#
# WARNING: This file is machine generated by fidlgen.

include <fuchsia/ldsvc/c/fidl.h>

fuchsia_ldsvc_LoaderDoneRequest {
	hdr	fidl_message_header[1343632858]
} [packed]

fuchsia_ldsvc_LoaderDoneRequestHandles {
	void	void
} [packed]

fuchsia_ldsvc_LoaderLoadObjectRequest {
	hdr			fidl_message_header[416505440]
	object_nameInLine	fidl_string
	object_nameOutOfLine	fidl_aligned[stringnoz]
} [packed]

fuchsia_ldsvc_LoaderLoadObjectRequestHandles {
	void	void
} [packed]

fuchsia_ldsvc_LoaderLoadObjectResponseHandles {
	object	zx_vmo
} [packed]

fuchsia_ldsvc_LoaderLoadScriptInterpreterRequest {
	hdr				fidl_message_header[852262734]
	interpreter_nameInLine		fidl_string
	interpreter_nameOutOfLine	fidl_aligned[stringnoz]
} [packed]

fuchsia_ldsvc_LoaderLoadScriptInterpreterRequestHandles {
	void	void
} [packed]

fuchsia_ldsvc_LoaderLoadScriptInterpreterResponseHandles {
	object	zx_vmo
} [packed]

fuchsia_ldsvc_LoaderConfigRequest {
	hdr		fidl_message_header[450803597]
	configInLine	fidl_string
	configOutOfLine	fidl_aligned[stringnoz]
} [packed]

fuchsia_ldsvc_LoaderConfigRequestHandles {
	void	void
} [packed]

fuchsia_ldsvc_LoaderConfigResponseHandles {
	void	void
} [packed]

fuchsia_ldsvc_LoaderCloneRequest {
	hdr	fidl_message_header[946011321]
	loader	flags[fidl_handle_presence, int32]
} [packed]

fuchsia_ldsvc_LoaderCloneRequestHandles {
	loader	zx_chan_fuchsia_ldsvc_Loader_server
} [packed]

fuchsia_ldsvc_LoaderCloneResponseHandles {
	void	void
} [packed]

fuchsia_ldsvc_LoaderDebugPublishDataSinkRequest {
	hdr			fidl_message_header[1332017729]
	data_sinkInLine		fidl_string
	data			flags[fidl_handle_presence, int32]
	data_sinkOutOfLine	fidl_aligned[stringnoz]
} [packed]

fuchsia_ldsvc_LoaderDebugPublishDataSinkRequestHandles {
	data	zx_vmo
} [packed]

fuchsia_ldsvc_LoaderDebugPublishDataSinkResponseHandles {
	void	void
} [packed]

fuchsia_ldsvc_LoaderDebugLoadConfigRequest {
	hdr			fidl_message_header[1915582394]
	config_nameInLine	fidl_string
	config_nameOutOfLine	fidl_aligned[stringnoz]
} [packed]

fuchsia_ldsvc_LoaderDebugLoadConfigRequestHandles {
	void	void
} [packed]

fuchsia_ldsvc_LoaderDebugLoadConfigResponseHandles {
	config	zx_vmo
} [packed]

resource zx_chan_fuchsia_ldsvc_Loader_client[zx_chan]
resource zx_chan_fuchsia_ldsvc_Loader_server[zx_chan]

zx_channel_create$fuchsia_ldsvc_Loader(options const[0], out0 ptr[out, zx_chan_fuchsia_ldsvc_Loader_client], out1 ptr[out, zx_chan_fuchsia_ldsvc_Loader_server])
fdio_service_connect$fuchsia_ldsvc_Loader(path ptr[in, string["/svc/"]], handle zx_chan_fuchsia_ldsvc_Loader_server)
zx_channel_write$fuchsia_ldsvc_LoaderDone(handle zx_chan_fuchsia_ldsvc_Loader_client, options const[0], bytes ptr[in, fuchsia_ldsvc_LoaderDoneRequest], num_bytes bytesize[bytes], handles ptr[in, fuchsia_ldsvc_LoaderDoneRequestHandles], num_handles bytesize[handles])
zx_channel_call$fuchsia_ldsvc_LoaderLoadObject(handle zx_chan_fuchsia_ldsvc_Loader_client, options const[0], deadline zx_time, args ptr[in, fidl_call_args[fuchsia_ldsvc_LoaderLoadObjectRequest, fuchsia_ldsvc_LoaderLoadObjectRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], fuchsia_ldsvc_LoaderLoadObjectResponseHandles]], actual_bytes ptr[out, int32], actual_handles ptr[out, int32])
zx_channel_call$fuchsia_ldsvc_LoaderLoadScriptInterpreter(handle zx_chan_fuchsia_ldsvc_Loader_client, options const[0], deadline zx_time, args ptr[in, fidl_call_args[fuchsia_ldsvc_LoaderLoadScriptInterpreterRequest, fuchsia_ldsvc_LoaderLoadScriptInterpreterRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], fuchsia_ldsvc_LoaderLoadScriptInterpreterResponseHandles]], actual_bytes ptr[out, int32], actual_handles ptr[out, int32])
zx_channel_call$fuchsia_ldsvc_LoaderConfig(handle zx_chan_fuchsia_ldsvc_Loader_client, options const[0], deadline zx_time, args ptr[in, fidl_call_args[fuchsia_ldsvc_LoaderConfigRequest, fuchsia_ldsvc_LoaderConfigRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], fuchsia_ldsvc_LoaderConfigResponseHandles]], actual_bytes ptr[out, int32], actual_handles ptr[out, int32])
zx_channel_call$fuchsia_ldsvc_LoaderClone(handle zx_chan_fuchsia_ldsvc_Loader_client, options const[0], deadline zx_time, args ptr[in, fidl_call_args[fuchsia_ldsvc_LoaderCloneRequest, fuchsia_ldsvc_LoaderCloneRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], fuchsia_ldsvc_LoaderCloneResponseHandles]], actual_bytes ptr[out, int32], actual_handles ptr[out, int32])
zx_channel_call$fuchsia_ldsvc_LoaderDebugPublishDataSink(handle zx_chan_fuchsia_ldsvc_Loader_client, options const[0], deadline zx_time, args ptr[in, fidl_call_args[fuchsia_ldsvc_LoaderDebugPublishDataSinkRequest, fuchsia_ldsvc_LoaderDebugPublishDataSinkRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], fuchsia_ldsvc_LoaderDebugPublishDataSinkResponseHandles]], actual_bytes ptr[out, int32], actual_handles ptr[out, int32])
zx_channel_call$fuchsia_ldsvc_LoaderDebugLoadConfig(handle zx_chan_fuchsia_ldsvc_Loader_client, options const[0], deadline zx_time, args ptr[in, fidl_call_args[fuchsia_ldsvc_LoaderDebugLoadConfigRequest, fuchsia_ldsvc_LoaderDebugLoadConfigRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], fuchsia_ldsvc_LoaderDebugLoadConfigResponseHandles]], actual_bytes ptr[out, int32], actual_handles ptr[out, int32])
