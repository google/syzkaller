# Copyright 2022 syzkaller project authors. All rights reserved.
# Use of this source code is governed by Apache 2 LICENSE that can be found in the LICENSE file.

# See https://cs.opensource.google/fuchsia/fuchsia/+/main:zircon/vdso/pager.fidl

include <zircon/syscalls.h>
include <zircon/types.h>

resource zx_pager[zx_handle]

zx_pager_create(options flags[pager_create_opt], out ptr[out, zx_pager])
zx_pager_create_vmo(pager zx_pager, options flags[pager_create_vmo_opt], port zx_port, key proc[1000, 16], size int64, out ptr[out, zx_vmo])
zx_pager_detach_vmo(pager zx_pager, vmo zx_vmo)
zx_pager_supply_pages(pager zx_pager, pager_vmo zx_vmo, offset int64, length int64, aux_vmo zx_vmo, aux_offset int64)
zx_pager_op_range(pager zx_pager, op flags[pager_op_range_opt], pager_vmo zx_handle, offset int64, length int64, data int64)

# TODO: syscalls marked `@next` are not yet included in the VDSO and need an additional header included if we want to fuzz them.
zx_pager_query_dirty_ranges(pager zx_pager, pager_vmo zx_vmo, offset int64, length int64, buffer ptr[out, void], buffer_size len[buffer], actual ptr[out, int64], avail ptr[out, int64]) (disabled)
zx_pager_query_vmo_stats(pager zx_pager, pager_vmo zx_vmo, options int32, buffer ptr[out, void], buffer_size len[buffer]) (disabled)

pager_create_opt = 0
pager_create_vmo_opt = 0, ZX_VMO_RESIZABLE, ZX_VMO_TRAP_DIRTY, ZX_VMO_DISCARDABLE
pager_op_range_opt = ZX_PAGER_OP_DIRTY, ZX_PAGER_OP_FAIL, ZX_PAGER_OP_WRITEBACK_BEGIN, ZX_PAGER_OP_WRITEBACK_END
