# Copyright 2017 syzkaller project authors. All rights reserved.
# Use of this source code is governed by Apache 2 LICENSE that can be found in the LICENSE file.

# See https://cs.opensource.google/fuchsia/fuchsia/+/main:zircon/vdso/job.fidl

include <zircon/syscalls.h>
include <zircon/syscalls/policy.h>

resource zx_job[zx_task]

zx_job_create(job zx_job, options const[0], out ptr[out, zx_job])

zx_job_set_policy$BASIC_V1(job_handle zx_job, options flags[job_policy_options], topic const[ZX_JOB_POL_BASIC_V1], policy ptr[in, array[zx_policy_basic_v1]], count len[policy])
zx_job_set_policy$BASIC_V2(job_handle zx_job, options flags[job_policy_options], topic const[ZX_JOB_POL_BASIC_V2], policy ptr[in, array[zx_policy_basic_v2]], count len[policy])
zx_job_set_policy$TIMER_SLACK(job_handle zx_job, options flags[job_policy_options], topic const[ZX_JOB_POL_TIMER_SLACK], policy ptr[in, array[zx_policy_timer_slack, 1]], count len[policy])
zx_job_set_critical(job zx_job, options flags[job_critical_options], process zx_process)

zx_policy_basic_v1 {
	condition	flags[zx_policy_condition, int32]
	policy		flags[zx_policy_action, int32]
}

zx_policy_basic_v2 {
	condition	flags[zx_policy_condition, int32]
	action		flags[zx_policy_action, int32]
	flags		flags[zx_policy_flags, int32]
}

zx_policy_timer_slack {
	min_slack	int64
	default_mode	flags[zx_policy_timer_mode, int32]
# not mentioned in `job.fidl` but present in `policy.h`
	padding1	array[int8, 4]
}

job_policy_options = ZX_JOB_POL_RELATIVE, ZX_JOB_POL_ABSOLUTE

zx_policy_condition = ZX_POL_BAD_HANDLE, ZX_POL_WRONG_OBJECT, ZX_POL_VMAR_WX, ZX_POL_NEW_VMO, ZX_POL_NEW_CHANNEL, ZX_POL_NEW_EVENT, ZX_POL_NEW_PORT, ZX_POL_NEW_SOCKET, ZX_POL_NEW_FIFO, ZX_POL_NEW_TIMER, ZX_POL_NEW_ANY, ZX_POL_NEW_EVENTPAIR, ZX_POL_NEW_PROCESS, ZX_POL_NEW_PROFILE, ZX_POL_NEW_PAGER, ZX_POL_AMBIENT_MARK_VMO_EXEC
zx_policy_action = ZX_POL_ACTION_ALLOW, ZX_POL_ACTION_DENY, ZX_POL_ACTION_KILL, ZX_POL_ACTION_ALLOW_EXCEPTION, ZX_POL_ACTION_DENY_EXCEPTION
zx_policy_flags = ZX_POL_OVERRIDE_ALLOW, ZX_POL_OVERRIDE_DENY
zx_policy_timer_mode = ZX_TIMER_SLACK_CENTER, ZX_TIMER_SLACK_EARLY, ZX_TIMER_SLACK_LATE

job_critical_options = ZX_JOB_CRITICAL_PROCESS_RETCODE_NONZERO
