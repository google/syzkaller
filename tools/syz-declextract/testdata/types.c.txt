# Code generated by syz-declextract. DO NOT EDIT.

meta automatic

type auto_todo int8

type auto_aligner[N] {
	void	void
} [align[N]]

bitfield_enum$auto = a, b, c

align_syscall$auto(a1 ptr[inout, align1$auto], a2 ptr[inout, align2$auto], a3 ptr[inout, align3$auto], a4 ptr[inout, align4$auto])
types_syscall$auto(p ptr[inout, anon_struct$auto], y ptr[inout, auto_aligner[1]], b ptr[inout, bitfields$auto], pid pid, f int32, v ptr[inout, various$auto])

align1$auto {
	f1	int8
	aligner	auto_aligner[8]
	f2	int8
}

align2$auto {
	f1	int8
	aligner	auto_aligner[1]
	f2	int8
}

align3$auto {
	f1	int8
	aligner	auto_aligner[8]
	f2	int8
}

align4$auto {
	f1	int8
	aligner	auto_aligner[8]
	f2	int8
}

anon_struct$auto {
	a		anon_struct_a$auto
	b		auto_aligner[1]
	anon_struct_2	anon_struct_2$auto
	anon_struct_3	anon_struct_3$auto
	foo		anon_t$auto
	forward		ptr[inout, auto_todo]
	array		array[anon_struct_array$auto, 4]
	ptr		ptr[inout, anon_struct_ptr$auto]
	ptr_array	array[ptr[inout, anon_struct_ptr_array$auto], 4]
}

anon_struct_2$auto {
	y	int32
}

anon_struct_3$auto [
	q	int32
	w	intptr
]

anon_struct_a$auto {
	x	int32
}

anon_struct_array$auto {
	a	int32
	b	int32
}

anon_struct_ptr$auto {
	a	int32
	b	int32
}

anon_struct_ptr_array$auto {
	a	int32
	b	int32
}

anon_t$auto {
	f	int32
}

bitfields$auto {
	a		int32:1
	bitfields_1	const[0, int32:2]
	b		int32:3
	d		intptr:2
	pad		const[0, intptr:3]
	e		flags[bitfield_enum$auto, int32:10]
	l		len[p, int32:10]
	p		ptr[inout, int32]
} [align[32]]

packed_t$auto {
	x	int8
	y	int32
} [packed, align[32]]

recursive$auto {
	various	various$auto
}

various$auto {
	recursive	ptr[inout, various$auto, opt]
	next		ptr[inout, recursive$auto, opt]
	packed		packed_t$auto
}

define a	0
define b	1
define c	2
